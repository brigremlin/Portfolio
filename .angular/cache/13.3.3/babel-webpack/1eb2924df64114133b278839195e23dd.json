{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, Input, HostBinding, NgModule, HostListener, ViewChild, Pipe, Output, Directive, ContentChildren } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\nconst _c0 = [\"*\"];\nconst _c1 = [\"volumeBar\"];\n\nconst _c2 = function (a0) {\n  return {\n    dragging: a0\n  };\n};\n\nfunction VgScrubBarCuePoints_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 2);\n  }\n\n  if (rf & 2) {\n    const cp_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"width\", cp_r1.$$style == null ? null : cp_r1.$$style.width)(\"left\", cp_r1.$$style == null ? null : cp_r1.$$style.left);\n  }\n}\n\nfunction VgScrubBarCurrentTime_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 2);\n  }\n}\n\nfunction VgTimeDisplay_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"LIVE\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VgTimeDisplay_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"vgUtc\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, ctx_r1.getTime(), ctx_r1.vgFormat));\n  }\n}\n\nfunction VgTrackSelector_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const track_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", track_r1.id)(\"selected\", track_r1.selected === true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", track_r1.label, \" \");\n  }\n}\n\nfunction VgQualitySelector_option_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bitrate_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", bitrate_r1.qualityIndex.toString())(\"selected\", bitrate_r1.qualityIndex === (ctx_r0.bitrateSelected == null ? null : ctx_r0.bitrateSelected.qualityIndex));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", bitrate_r1.label, \" \");\n  }\n}\n\nclass VgStates {}\n\nVgStates.VG_ENDED = 'ended';\nVgStates.VG_PAUSED = 'paused';\nVgStates.VG_PLAYING = 'playing';\nVgStates.VG_LOADING = 'waiting';\n\nVgStates.ɵfac = function VgStates_Factory(t) {\n  return new (t || VgStates)();\n};\n\nVgStates.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgStates,\n  factory: VgStates.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgStates, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass VgAPI {\n  constructor() {\n    // tslint:disable-next-line:ban-types\n    this.medias = {}; // TODO: refactor to Set<IPlayable>\n\n    this.playerReadyEvent = new EventEmitter(true);\n    this.isPlayerReady = false;\n  }\n\n  onPlayerReady(fsAPI) {\n    this.fsAPI = fsAPI;\n    this.isPlayerReady = true;\n    this.playerReadyEvent.emit(this);\n  }\n\n  getDefaultMedia() {\n    for (const item in this.medias) {\n      if (this.medias[item]) {\n        return this.medias[item];\n      }\n    }\n  }\n\n  getMasterMedia() {\n    let master;\n\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        master = this.medias[id];\n        break;\n      }\n    }\n\n    return master || this.getDefaultMedia();\n  }\n\n  isMasterDefined() {\n    let result = false;\n\n    for (const id in this.medias) {\n      if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n        result = true;\n        break;\n      }\n    }\n\n    return result;\n  }\n\n  getMediaById(id = null) {\n    let media = this.medias[id];\n\n    if (!id || id === '*') {\n      media = this;\n    }\n\n    return media;\n  }\n\n  play() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].play();\n      }\n    }\n  }\n\n  pause() {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id].pause();\n      }\n    }\n  }\n\n  get duration() {\n    return this.$$getAllProperties('duration');\n  }\n\n  set currentTime(seconds) {\n    this.$$setAllProperties('currentTime', seconds);\n  }\n\n  get currentTime() {\n    return this.$$getAllProperties('currentTime');\n  }\n\n  set state(state) {\n    this.$$setAllProperties('state', state);\n  }\n\n  get state() {\n    return this.$$getAllProperties('state');\n  }\n\n  set volume(volume) {\n    this.$$setAllProperties('volume', volume);\n  }\n\n  get volume() {\n    return this.$$getAllProperties('volume');\n  }\n\n  set playbackRate(rate) {\n    this.$$setAllProperties('playbackRate', rate);\n  }\n\n  get playbackRate() {\n    return this.$$getAllProperties('playbackRate');\n  }\n\n  get canPlay() {\n    return this.$$getAllProperties('canPlay');\n  }\n\n  get canPlayThrough() {\n    return this.$$getAllProperties('canPlayThrough');\n  }\n\n  get isMetadataLoaded() {\n    return this.$$getAllProperties('isMetadataLoaded');\n  }\n\n  get isWaiting() {\n    return this.$$getAllProperties('isWaiting');\n  }\n\n  get isCompleted() {\n    return this.$$getAllProperties('isCompleted');\n  }\n\n  get isLive() {\n    return this.$$getAllProperties('isLive');\n  }\n\n  get isMaster() {\n    return this.$$getAllProperties('isMaster');\n  }\n\n  get time() {\n    return this.$$getAllProperties('time');\n  }\n\n  get buffer() {\n    return this.$$getAllProperties('buffer');\n  }\n\n  get buffered() {\n    return this.$$getAllProperties('buffered');\n  }\n\n  get subscriptions() {\n    return this.$$getAllProperties('subscriptions');\n  }\n\n  get textTracks() {\n    return this.$$getAllProperties('textTracks');\n  }\n\n  seekTime(value, byPercent = false) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$seek(this.medias[id], value, byPercent);\n      }\n    }\n  }\n\n  $$seek(media, value, byPercent = false) {\n    let second;\n    let duration = media.duration;\n\n    if (byPercent) {\n      if (this.isMasterDefined()) {\n        duration = this.getMasterMedia().duration;\n      }\n\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n\n    media.currentTime = second;\n  }\n\n  addTextTrack(type, label, language) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.$$addTextTrack(this.medias[id], type, label, language);\n      }\n    }\n  }\n\n  $$addTextTrack(media, type, label, language) {\n    media.addTextTrack(type, label, language);\n  }\n\n  $$getAllProperties(property) {\n    const medias = {};\n    let result;\n\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        medias[id] = this.medias[id];\n      }\n    }\n\n    const nMedias = Object.keys(medias).length;\n\n    switch (nMedias) {\n      case 0:\n        // Return default values until vgMedia is initialized\n        switch (property) {\n          case 'state':\n            result = VgStates.VG_PAUSED;\n            break;\n\n          case 'playbackRate':\n          case 'volume':\n            result = 1;\n            break;\n\n          case 'time':\n            result = {\n              current: 0,\n              total: 0,\n              left: 0\n            };\n            break;\n        }\n\n        break;\n\n      case 1:\n        // If there's only one media element then return the plain value\n        const firstMediaId = Object.keys(medias)[0];\n        result = medias[firstMediaId][property];\n        break;\n\n      default:\n        // TODO: return 'master' value\n        const master = this.getMasterMedia();\n        result = medias[master.id][property];\n    }\n\n    return result;\n  }\n\n  $$setAllProperties(property, value) {\n    for (const id in this.medias) {\n      if (this.medias[id]) {\n        this.medias[id][property] = value;\n      }\n    }\n  }\n\n  registerElement(elem) {\n    this.videogularElement = elem;\n  }\n\n  registerMedia(media) {\n    this.medias[media.id] = media;\n  }\n\n  unregisterMedia(media) {\n    delete this.medias[media.id];\n  }\n\n}\n\nVgAPI.ɵfac = function VgAPI_Factory(t) {\n  return new (t || VgAPI)();\n};\n\nVgAPI.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgAPI,\n  factory: VgAPI.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgAPI, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgBuffering {\n  constructor(ref, API) {\n    this.API = API;\n    this.checkInterval = 50;\n    this.currentPlayPos = 0;\n    this.lastPlayPos = 0;\n    this.subscriptions = [];\n    this.isBuffering = false;\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe(isBuffering => this.onUpdateBuffer(isBuffering)));\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgBuffering.ɵfac = function VgBuffering_Factory(t) {\n  return new (t || VgBuffering)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgBuffering.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgBuffering,\n  selectors: [[\"vg-buffering\"]],\n  hostVars: 2,\n  hostBindings: function VgBuffering_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\"\n  },\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"vg-buffering\"], [1, \"bufferingContainer\"], [1, \"loadingSpinner\"]],\n  template: function VgBuffering_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"vg-buffering{display:none;z-index:201}vg-buffering.is-buffering{display:block}.vg-buffering{position:absolute;display:block;width:100%;height:100%}.vg-buffering .bufferingContainer{width:100%;position:absolute;cursor:pointer;top:50%;margin-top:-50px;zoom:1;filter:alpha(opacity=60);opacity:.6}.vg-buffering .loadingSpinner{background-color:#0000;border:5px solid rgba(255,255,255,1);opacity:.9;border-top:5px solid rgba(0,0,0,0);border-left:5px solid rgba(0,0,0,0);border-radius:50px;box-shadow:0 0 35px #fff;width:50px;height:50px;margin:0 auto;-moz-animation:spin .5s infinite linear;-webkit-animation:spin .5s infinite linear}.vg-buffering .loadingSpinner .stop{-webkit-animation-play-state:paused;-moz-animation-play-state:paused}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgBuffering, [{\n    type: Component,\n    args: [{\n      selector: 'vg-buffering',\n      encapsulation: ViewEncapsulation.None,\n      template: `<div class=\"vg-buffering\">\n            <div class=\"bufferingContainer\">\n                <div class=\"loadingSpinner\"></div>\n            </div>\n        </div>`,\n      styles: [`\n        vg-buffering {\n            display: none;\n            z-index: 201;\n        }\n        vg-buffering.is-buffering {\n            display: block;\n        }\n\n        .vg-buffering {\n            position: absolute;\n            display: block;\n            width: 100%;\n            height: 100%;\n        }\n        .vg-buffering .bufferingContainer {\n            width: 100%;\n            position: absolute;\n            cursor: pointer;\n            top: 50%;\n            margin-top: -50px;\n            zoom: 1;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        /* Loading Spinner\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\n        */\n        .vg-buffering .loadingSpinner {\n            background-color: rgba(0, 0, 0, 0);\n            border: 5px solid rgba(255, 255, 255, 1);\n            opacity: .9;\n            border-top: 5px solid rgba(0, 0, 0, 0);\n            border-left: 5px solid rgba(0, 0, 0, 0);\n            border-radius: 50px;\n            box-shadow: 0 0 35px #FFFFFF;\n            width: 50px;\n            height: 50px;\n            margin: 0 auto;\n            -moz-animation: spin .5s infinite linear;\n            -webkit-animation: spin .5s infinite linear;\n        }\n        .vg-buffering .loadingSpinner .stop {\n            -webkit-animation-play-state: paused;\n            -moz-animation-play-state: paused;\n        }\n        @-moz-keyframes spin {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(360deg);\n            }\n        }\n        @-moz-keyframes spinoff {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(-360deg);\n            }\n        }\n        @-webkit-keyframes spin {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(360deg);\n            }\n        }\n        @-webkit-keyframes spinoff {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(-360deg);\n            }\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    isBuffering: [{\n      type: HostBinding,\n      args: ['class.is-buffering']\n    }]\n  });\n})();\n\nclass VgBufferingModule {}\n\nVgBufferingModule.ɵfac = function VgBufferingModule_Factory(t) {\n  return new (t || VgBufferingModule)();\n};\n\nVgBufferingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgBufferingModule\n});\nVgBufferingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgBufferingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [VgBuffering],\n      exports: [VgBuffering]\n    }]\n  }], null, null);\n})();\n\nclass VgControlsHidden {\n  constructor() {\n    this.isHiddenSubject = new Subject();\n    this.isHidden = this.isHiddenSubject.asObservable();\n  }\n\n  state(hidden) {\n    this.isHiddenSubject.next(hidden);\n  }\n\n}\n\nVgControlsHidden.ɵfac = function VgControlsHidden_Factory(t) {\n  return new (t || VgControlsHidden)();\n};\n\nVgControlsHidden.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgControlsHidden,\n  factory: VgControlsHidden.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgControlsHidden, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgControls {\n  constructor(API, ref, hidden) {\n    this.API = API;\n    this.ref = ref;\n    this.hidden = hidden;\n    this.isAdsPlaying = 'initial';\n    this.hideControls = false;\n    this.vgAutohide = false;\n    this.vgAutohideTime = 3;\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\n    this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n    this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\n    this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onPlay.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.pause.subscribe(this.onPause.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this)));\n  }\n\n  ngAfterViewInit() {\n    if (this.vgAutohide) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  onPlay() {\n    if (this.vgAutohide) {\n      this.hide();\n    }\n  }\n\n  onPause() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n  }\n\n  onStartAds() {\n    this.isAdsPlaying = 'none';\n  }\n\n  onEndAds() {\n    this.isAdsPlaying = 'initial';\n  }\n\n  hide() {\n    if (this.vgAutohide) {\n      clearTimeout(this.timer);\n      this.hideAsync();\n    }\n  }\n\n  show() {\n    clearTimeout(this.timer);\n    this.hideControls = false;\n    this.hidden.state(false);\n\n    if (this.vgAutohide) {\n      this.hideAsync();\n    }\n  }\n\n  hideAsync() {\n    if (this.API.state === VgStates.VG_PLAYING) {\n      this.timer = setTimeout(() => {\n        this.hideControls = true;\n        this.hidden.state(true);\n      }, this.vgAutohideTime * 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgControls.ɵfac = function VgControls_Factory(t) {\n  return new (t || VgControls)(i0.ɵɵdirectiveInject(VgAPI), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgControlsHidden));\n};\n\nVgControls.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgControls,\n  selectors: [[\"vg-controls\"]],\n  hostVars: 4,\n  hostBindings: function VgControls_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"pointer-events\", ctx.isAdsPlaying);\n      i0.ɵɵclassProp(\"hide\", ctx.hideControls);\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\",\n    vgAutohide: \"vgAutohide\",\n    vgAutohideTime: \"vgAutohideTime\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function VgControls_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"vg-controls{position:absolute;display:flex;width:100%;height:50px;z-index:300;bottom:0;background-color:#00000080;transition:bottom 1s}vg-controls.hide{bottom:-50px}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgControls, [{\n    type: Component,\n    args: [{\n      selector: 'vg-controls',\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-content></ng-content>`,\n      styles: [`\n        vg-controls {\n            position: absolute;\n            display: flex;\n            width: 100%;\n            height: 50px;\n            z-index: 300;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n            -webkit-transition: bottom 1s;\n            -khtml-transition: bottom 1s;\n            -moz-transition: bottom 1s;\n            -ms-transition: bottom 1s;\n            transition: bottom 1s;\n        }\n        vg-controls.hide {\n            bottom: -50px;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: VgAPI\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: VgControlsHidden\n    }];\n  }, {\n    isAdsPlaying: [{\n      type: HostBinding,\n      args: ['style.pointer-events']\n    }],\n    hideControls: [{\n      type: HostBinding,\n      args: ['class.hide']\n    }],\n    vgFor: [{\n      type: Input\n    }],\n    vgAutohide: [{\n      type: Input\n    }],\n    vgAutohideTime: [{\n      type: Input\n    }]\n  });\n})();\n\nclass VgUtils {\n  /**\n   * Inspired by Paul Irish\n   * https://gist.github.com/paulirish/211209\n   * @returns z-Index\n   */\n  static getZIndex() {\n    let zIndex = 1;\n    let elementZIndex;\n    const tags = document.getElementsByTagName('*');\n\n    for (let i = 0, l = tags.length; i < l; i++) {\n      elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n\n      if (elementZIndex > zIndex) {\n        zIndex = elementZIndex + 1;\n      }\n    }\n\n    return zIndex;\n  } // Very simple mobile detection, not 100% reliable\n\n\n  static isMobileDevice() {\n    return typeof window.orientation !== 'undefined' || navigator.userAgent.indexOf('IEMobile') !== -1;\n  }\n\n  static isiOSDevice() {\n    return navigator.userAgent.match(/ip(hone|ad|od)/i) && !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i);\n  }\n\n  static isCordova() {\n    return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n  }\n\n}\n\nVgUtils.ɵfac = function VgUtils_Factory(t) {\n  return new (t || VgUtils)();\n};\n\nVgUtils.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgUtils,\n  factory: VgUtils.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgUtils, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass VgFullscreenAPI {\n  constructor() {\n    this.nativeFullscreen = true;\n    this.isFullscreen = false;\n    this.onChangeFullscreen = new EventEmitter();\n  }\n\n  init(elem, medias) {\n    this.videogularElement = elem;\n    this.medias = medias;\n    const APIs = {\n      w3: {\n        enabled: 'fullscreenEnabled',\n        element: 'fullscreenElement',\n        request: 'requestFullscreen',\n        exit: 'exitFullscreen',\n        onchange: 'fullscreenchange',\n        onerror: 'fullscreenerror'\n      },\n      newWebkit: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitRequestFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      oldWebkit: {\n        enabled: 'webkitIsFullScreen',\n        element: 'webkitCurrentFullScreenElement',\n        request: 'webkitRequestFullScreen',\n        exit: 'webkitCancelFullScreen',\n        onchange: 'webkitfullscreenchange',\n        onerror: 'webkitfullscreenerror'\n      },\n      moz: {\n        enabled: 'mozFullScreen',\n        element: 'mozFullScreenElement',\n        request: 'mozRequestFullScreen',\n        exit: 'mozCancelFullScreen',\n        onchange: 'mozfullscreenchange',\n        onerror: 'mozfullscreenerror'\n      },\n      ios: {\n        enabled: 'webkitFullscreenEnabled',\n        element: 'webkitFullscreenElement',\n        request: 'webkitEnterFullscreen',\n        exit: 'webkitExitFullscreen',\n        onchange: 'webkitendfullscreen',\n        onerror: 'webkitfullscreenerror'\n      },\n      ms: {\n        enabled: 'msFullscreenEnabled',\n        element: 'msFullscreenElement',\n        request: 'msRequestFullscreen',\n        exit: 'msExitFullscreen',\n        onchange: 'MSFullscreenChange',\n        onerror: 'MSFullscreenError'\n      }\n    };\n\n    for (const browser in APIs) {\n      if (APIs[browser].enabled in document) {\n        this.polyfill = APIs[browser];\n        break;\n      }\n    }\n\n    if (VgUtils.isiOSDevice()) {\n      this.polyfill = APIs.ios;\n    }\n\n    this.isAvailable = this.polyfill != null;\n\n    if (this.polyfill == null) {\n      return;\n    }\n\n    let fsElemDispatcher;\n\n    switch (this.polyfill.onchange) {\n      // Mozilla dispatches the fullscreen change event from document, not the element\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n      case 'mozfullscreenchange':\n        fsElemDispatcher = document;\n        break;\n      // iOS dispatches the fullscreen change event from video element\n\n      case 'webkitendfullscreen':\n        fsElemDispatcher = this.medias.toArray()[0].elem;\n        break;\n      // HTML5 implementation dispatches the fullscreen change event from the element\n\n      default:\n        fsElemDispatcher = elem;\n    }\n\n    this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n      this.onFullscreenChange();\n    });\n  }\n\n  onFullscreenChange() {\n    this.isFullscreen = !!document[this.polyfill.element];\n    this.onChangeFullscreen.emit(this.isFullscreen);\n  }\n\n  toggleFullscreen(element = null) {\n    if (this.isFullscreen) {\n      this.exit();\n    } else {\n      this.request(element);\n    }\n  }\n\n  request(elem) {\n    if (!elem) {\n      elem = this.videogularElement;\n    }\n\n    this.isFullscreen = true;\n    this.onChangeFullscreen.emit(true); // Perform native full screen support\n\n    if (this.isAvailable && this.nativeFullscreen) {\n      // Fullscreen for mobile devices\n      if (VgUtils.isMobileDevice()) {\n        // We should make fullscreen the video object if it doesn't have native fullscreen support\n        // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n        if (!this.polyfill.enabled && elem === this.videogularElement || VgUtils.isiOSDevice()) {\n          elem = this.medias.toArray()[0].elem;\n        }\n\n        this.enterElementInFullScreen(elem);\n      } else {\n        this.enterElementInFullScreen(this.videogularElement);\n      }\n    }\n  }\n\n  enterElementInFullScreen(elem) {\n    elem[this.polyfill.request]();\n  }\n\n  exit() {\n    this.isFullscreen = false;\n    this.onChangeFullscreen.emit(false); // Exit from native fullscreen\n\n    if (this.isAvailable && this.nativeFullscreen) {\n      document[this.polyfill.exit]();\n    }\n  }\n\n}\n\nVgFullscreenAPI.ɵfac = function VgFullscreenAPI_Factory(t) {\n  return new (t || VgFullscreenAPI)();\n};\n\nVgFullscreenAPI.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgFullscreenAPI,\n  factory: VgFullscreenAPI.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgFullscreenAPI, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})(); // tslint:disable:component-class-suffix\n// tslint:disable:ban-types\n\n\nclass VgFullscreen {\n  constructor(ref, API, fsAPI) {\n    this.API = API;\n    this.fsAPI = fsAPI;\n    this.isFullscreen = false;\n    this.subscriptions = [];\n    this.ariaValue = 'normal mode';\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  onChangeFullscreen(fsState) {\n    this.ariaValue = fsState ? 'fullscren mode' : 'normal mode';\n    this.isFullscreen = fsState;\n  }\n\n  onClick() {\n    this.changeFullscreenState();\n  }\n\n  onKeyDown(event) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeFullscreenState();\n    }\n  }\n\n  changeFullscreenState() {\n    let element = this.target;\n\n    if (this.target instanceof VgAPI) {\n      element = null;\n    }\n\n    this.fsAPI.toggleFullscreen(element);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgFullscreen.ɵfac = function VgFullscreen_Factory(t) {\n  return new (t || VgFullscreen)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI), i0.ɵɵdirectiveInject(VgFullscreenAPI));\n};\n\nVgFullscreen.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgFullscreen,\n  selectors: [[\"vg-fullscreen\"]],\n  hostBindings: function VgFullscreen_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function VgFullscreen_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"keydown\", function VgFullscreen_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  decls: 1,\n  vars: 5,\n  consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"fullscreen button\", 1, \"icon\"]],\n  template: function VgFullscreen_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"vg-icon-fullscreen\", !ctx.isFullscreen)(\"vg-icon-fullscreen_exit\", ctx.isFullscreen);\n      i0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n    }\n  },\n  styles: [\"vg-fullscreen{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px}vg-fullscreen .icon{pointer-events:none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgFullscreen, [{\n    type: Component,\n    args: [{\n      selector: 'vg-fullscreen',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div class=\"icon\"\n             [class.vg-icon-fullscreen]=\"!isFullscreen\"\n             [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"fullscreen button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n      styles: [`\n        vg-fullscreen {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n\n        vg-fullscreen .icon {\n            pointer-events: none;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }, {\n      type: VgFullscreenAPI\n    }];\n  }, {\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgMute {\n  constructor(ref, API) {\n    this.API = API;\n    this.subscriptions = [];\n    this.ariaValue = 'unmuted';\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.currentVolume = this.target.volume;\n  }\n\n  onClick() {\n    this.changeMuteState();\n  }\n\n  onKeyDown(event) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.changeMuteState();\n    }\n  }\n\n  changeMuteState() {\n    const volume = this.getVolume();\n\n    if (volume === 0) {\n      if (this.target.volume === 0 && this.currentVolume === 0) {\n        this.currentVolume = 1;\n      }\n\n      this.target.volume = this.currentVolume;\n    } else {\n      this.currentVolume = volume;\n      this.target.volume = 0;\n    }\n  }\n\n  getVolume() {\n    const volume = this.target ? this.target.volume : 0;\n    this.ariaValue = volume ? 'unmuted' : 'muted';\n    return volume;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgMute.ɵfac = function VgMute_Factory(t) {\n  return new (t || VgMute)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgMute.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgMute,\n  selectors: [[\"vg-mute\"]],\n  hostBindings: function VgMute_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function VgMute_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"keydown\", function VgMute_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\"\n  },\n  decls: 1,\n  vars: 9,\n  consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"mute button\", 1, \"icon\"]],\n  template: function VgMute_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"vg-icon-volume_up\", ctx.getVolume() >= 0.75)(\"vg-icon-volume_down\", ctx.getVolume() >= 0.25 && ctx.getVolume() < 0.75)(\"vg-icon-volume_mute\", ctx.getVolume() > 0 && ctx.getVolume() < 0.25)(\"vg-icon-volume_off\", ctx.getVolume() === 0);\n      i0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n    }\n  },\n  styles: [\"vg-mute{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px}vg-mute .icon{pointer-events:none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgMute, [{\n    type: Component,\n    args: [{\n      selector: 'vg-mute',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div class=\"icon\"\n             [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\n             [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\n             [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\n             [class.vg-icon-volume_off]=\"getVolume() === 0\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"mute button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n      styles: [`\n        vg-mute {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-mute .icon {\n            pointer-events: none;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgVolume {\n  constructor(ref, API) {\n    this.API = API;\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n    this.isDragging = false;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.ariaValue = this.getVolume() * 100;\n  }\n\n  onClick(event) {\n    this.setVolume(this.calculateVolume(event.clientX));\n  }\n\n  onMouseDown(event) {\n    this.mouseDownPosX = event.clientX;\n    this.isDragging = true;\n  }\n\n  onDrag(event) {\n    if (this.isDragging) {\n      this.setVolume(this.calculateVolume(event.clientX));\n    }\n  }\n\n  onStopDrag(event) {\n    if (this.isDragging) {\n      this.isDragging = false;\n\n      if (this.mouseDownPosX === event.clientX) {\n        this.setVolume(this.calculateVolume(event.clientX));\n      }\n    }\n  }\n\n  arrowAdjustVolume(event) {\n    if (event.keyCode === 38 || event.keyCode === 39) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 + 10)));\n    } else if (event.keyCode === 37 || event.keyCode === 40) {\n      event.preventDefault();\n      this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 - 10)));\n    }\n  }\n\n  calculateVolume(mousePosX) {\n    const recObj = this.volumeBarRef.nativeElement.getBoundingClientRect();\n    const volumeBarOffsetLeft = recObj.left;\n    const volumeBarWidth = recObj.width;\n    return (mousePosX - volumeBarOffsetLeft) / volumeBarWidth * 100;\n  }\n\n  setVolume(vol) {\n    this.target.volume = Math.max(0, Math.min(1, vol / 100));\n    this.ariaValue = this.target.volume * 100;\n  }\n\n  getVolume() {\n    return this.target ? this.target.volume : 0;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgVolume.ɵfac = function VgVolume_Factory(t) {\n  return new (t || VgVolume)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgVolume.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgVolume,\n  selectors: [[\"vg-volume\"]],\n  viewQuery: function VgVolume_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.volumeBarRef = _t.first);\n    }\n  },\n  hostBindings: function VgVolume_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function VgVolume_mousemove_HostBindingHandler($event) {\n        return ctx.onDrag($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function VgVolume_mouseup_HostBindingHandler($event) {\n        return ctx.onStopDrag($event);\n      }, false, i0.ɵɵresolveDocument)(\"keydown\", function VgVolume_keydown_HostBindingHandler($event) {\n        return ctx.arrowAdjustVolume($event);\n      });\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\"\n  },\n  decls: 5,\n  vars: 9,\n  consts: [[\"tabindex\", \"0\", \"role\", \"slider\", \"aria-label\", \"volume level\", \"aria-level\", \"polite\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"aria-orientation\", \"horizontal\", 1, \"volumeBar\", 3, \"click\", \"mousedown\"], [\"volumeBar\", \"\"], [1, \"volumeBackground\", 3, \"ngClass\"], [1, \"volumeValue\"], [1, \"volumeKnob\"]],\n  template: function VgVolume_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"click\", function VgVolume_Template_div_click_0_listener($event) {\n        return ctx.onClick($event);\n      })(\"mousedown\", function VgVolume_Template_div_mousedown_0_listener($event) {\n        return ctx.onMouseDown($event);\n      });\n      i0.ɵɵelementStart(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3)(4, \"div\", 4);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuenow\", ctx.ariaValue)(\"aria-valuetext\", ctx.ariaValue + \"%\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c2, ctx.isDragging));\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"width\", ctx.getVolume() * (100 - 15) + \"%\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵstyleProp(\"left\", ctx.getVolume() * (100 - 15) + \"%\");\n    }\n  },\n  directives: [i2.NgClass],\n  styles: [\"vg-volume{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:100px;cursor:pointer;color:#fff;line-height:50px}vg-volume .volumeBar{position:relative;display:flex;flex-grow:1;align-items:center}vg-volume .volumeBackground{display:flex;flex-grow:1;height:5px;pointer-events:none;background-color:#333}vg-volume .volumeValue{display:flex;height:5px;pointer-events:none;background-color:#fff;transition:all .2s ease-out}vg-volume .volumeKnob{position:absolute;width:15px;height:15px;left:0;top:50%;transform:translateY(-50%);border-radius:15px;pointer-events:none;background-color:#fff;transition:all .2s ease-out}vg-volume .volumeBackground.dragging .volumeValue,vg-volume .volumeBackground.dragging .volumeKnob{transition:none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgVolume, [{\n    type: Component,\n    args: [{\n      selector: 'vg-volume',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div\n            #volumeBar\n            class=\"volumeBar\"\n            tabindex=\"0\"\n            role=\"slider\"\n            aria-label=\"volume level\"\n            aria-level=\"polite\"\n            [attr.aria-valuenow]=\"ariaValue\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-orientation=\"horizontal\"\n            [attr.aria-valuetext]=\"ariaValue + '%'\"\n            (click)=\"onClick($event)\"\n            (mousedown)=\"onMouseDown($event)\">\n            <div class=\"volumeBackground\" [ngClass]=\"{dragging: isDragging}\">\n                <div class=\"volumeValue\" [style.width]=\"(getVolume() * (100-15)) + '%'\"></div>\n                <div class=\"volumeKnob\" [style.left]=\"(getVolume() * (100-15)) + '%'\"></div>\n            </div>\n        </div>\n    `,\n      styles: [`\n        vg-volume {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 100px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-volume .volumeBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n        }\n        vg-volume .volumeBackground {\n            display: flex;\n            flex-grow: 1;\n            height: 5px;\n            pointer-events: none;\n            background-color: #333;\n        }\n        vg-volume .volumeValue {\n            display: flex;\n            height: 5px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeKnob {\n            position: absolute;\n            width: 15px; height: 15px;\n            left: 0; top: 50%;\n            transform: translateY(-50%);\n            border-radius: 15px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeBackground.dragging .volumeValue,\n        vg-volume .volumeBackground.dragging .volumeKnob {\n            transition: none;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    volumeBarRef: [{\n      type: ViewChild,\n      args: ['volumeBar', {\n        static: true\n      }]\n    }],\n    onDrag: [{\n      type: HostListener,\n      args: ['document:mousemove', ['$event']]\n    }],\n    onStopDrag: [{\n      type: HostListener,\n      args: ['document:mouseup', ['$event']]\n    }],\n    arrowAdjustVolume: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgPlayPause {\n  constructor(ref, API) {\n    this.API = API;\n    this.subscriptions = [];\n    this.ariaValue = VgStates.VG_PAUSED;\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  onClick() {\n    this.playPause();\n  }\n\n  onKeyDown(event) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.playPause();\n    }\n  }\n\n  playPause() {\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    this.ariaValue = this.target ? this.target.state : VgStates.VG_PAUSED;\n    return this.ariaValue;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgPlayPause.ɵfac = function VgPlayPause_Factory(t) {\n  return new (t || VgPlayPause)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgPlayPause.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgPlayPause,\n  selectors: [[\"vg-play-pause\"]],\n  hostBindings: function VgPlayPause_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function VgPlayPause_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"keydown\", function VgPlayPause_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\"\n  },\n  decls: 1,\n  vars: 6,\n  consts: [[\"tabindex\", \"0\", \"role\", \"button\", 1, \"icon\"]],\n  template: function VgPlayPause_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"vg-icon-pause\", ctx.getState() === \"playing\")(\"vg-icon-play_arrow\", ctx.getState() === \"paused\" || ctx.getState() === \"ended\");\n      i0.ɵɵattribute(\"aria-label\", ctx.getState() === \"paused\" ? \"play\" : \"pause\")(\"aria-valuetext\", ctx.ariaValue);\n    }\n  },\n  styles: [\"vg-play-pause{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px}vg-play-pause .icon{pointer-events:none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgPlayPause, [{\n    type: Component,\n    args: [{\n      selector: 'vg-play-pause',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div class=\"icon\"\n             [class.vg-icon-pause]=\"getState() === 'playing'\"\n             [class.vg-icon-play_arrow]=\"getState() === 'paused' || getState() === 'ended'\"\n             tabindex=\"0\"\n             role=\"button\"\n             [attr.aria-label]=\"getState() === 'paused'?'play':'pause'\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n      styles: [`\n        vg-play-pause {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-play-pause .icon {\n            pointer-events: none;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgPlaybackButton {\n  constructor(ref, API) {\n    this.API = API;\n    this.subscriptions = [];\n    this.ariaValue = 1;\n    this.elem = ref.nativeElement;\n    this.playbackValues = ['0.5', '1.0', '1.5', '2.0'];\n    this.playbackIndex = 1;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  onClick() {\n    this.updatePlaybackSpeed();\n  }\n\n  onKeyDown(event) {\n    // On press Enter (13) or Space (32)\n    if (event.keyCode === 13 || event.keyCode === 32) {\n      event.preventDefault();\n      this.updatePlaybackSpeed();\n    }\n  }\n\n  updatePlaybackSpeed() {\n    this.playbackIndex = ++this.playbackIndex % this.playbackValues.length;\n\n    if (this.target instanceof VgAPI) {\n      this.target.playbackRate = this.playbackValues[this.playbackIndex];\n    } else {\n      this.target.playbackRate[this.vgFor] = this.playbackValues[this.playbackIndex];\n    }\n  }\n\n  getPlaybackRate() {\n    this.ariaValue = this.target ? this.target.playbackRate : 1.0;\n    return this.ariaValue;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgPlaybackButton.ɵfac = function VgPlaybackButton_Factory(t) {\n  return new (t || VgPlaybackButton)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgPlaybackButton.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgPlaybackButton,\n  selectors: [[\"vg-playback-button\"]],\n  hostBindings: function VgPlaybackButton_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function VgPlaybackButton_click_HostBindingHandler() {\n        return ctx.onClick();\n      })(\"keydown\", function VgPlaybackButton_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      });\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\",\n    playbackValues: \"playbackValues\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"tabindex\", \"0\", \"role\", \"button\", \"aria-label\", \"playback speed button\", 1, \"button\"]],\n  template: function VgPlaybackButton_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.getPlaybackRate(), \"x \");\n    }\n  },\n  styles: [\"vg-playback-button{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}vg-playback-button .button{display:flex;align-items:center;justify-content:center;width:50px}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgPlaybackButton, [{\n    type: Component,\n    args: [{\n      selector: 'vg-playback-button',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n    <span class=\"button\"\n          tabindex=\"0\"\n          role=\"button\"\n          aria-label=\"playback speed button\"\n          [attr.aria-valuetext]=\"ariaValue\">\n        {{getPlaybackRate()}}x\n    </span>`,\n      styles: [`\n        vg-playback-button {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n        vg-playback-button .button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 50px;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    playbackValues: [{\n      type: Input\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgScrubBar {\n  constructor(ref, API, vgControlsHiddenState) {\n    this.API = API;\n    this.hideScrubBar = false;\n    this.vgSlider = true;\n    this.isSeeking = false;\n    this.wasPlaying = false;\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n    this.subscriptions.push(vgControlsHiddenState.isHidden.subscribe(hide => this.onHideScrubBar(hide)));\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  seekStart() {\n    if (this.target.canPlay) {\n      this.isSeeking = true;\n\n      if (this.target.state === VgStates.VG_PLAYING) {\n        this.wasPlaying = true;\n      }\n\n      this.target.pause();\n    }\n  }\n\n  seekMove(offset) {\n    if (this.isSeeking) {\n      const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n      this.target.time.current = percentage * this.target.time.total / 100;\n      this.target.seekTime(percentage, true);\n    }\n  }\n\n  seekEnd(offset) {\n    this.isSeeking = false;\n\n    if (this.target.canPlay) {\n      const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n      this.target.seekTime(percentage, true);\n\n      if (this.wasPlaying) {\n        this.wasPlaying = false;\n        this.target.play();\n      }\n    }\n  }\n\n  touchEnd() {\n    this.isSeeking = false;\n\n    if (this.wasPlaying) {\n      this.wasPlaying = false;\n      this.target.play();\n    }\n  }\n\n  getTouchOffset(event) {\n    let offsetLeft = 0;\n    let element = event.target;\n\n    while (element) {\n      offsetLeft += element.offsetLeft;\n      element = element.offsetParent;\n    }\n\n    return event.touches[0].pageX - offsetLeft;\n  }\n\n  onMouseDownScrubBar($event) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd($event.offsetX);\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  onMouseMoveScrubBar($event) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove($event.offsetX);\n      }\n    }\n  }\n\n  onMouseUpScrubBar($event) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekEnd($event.offsetX);\n      }\n    }\n  }\n\n  onTouchStartScrubBar($event) {\n    if (this.target) {\n      if (!this.target.isLive) {\n        if (!this.vgSlider) {\n          this.seekEnd(this.getTouchOffset($event));\n        } else {\n          this.seekStart();\n        }\n      }\n    }\n  }\n\n  onTouchMoveScrubBar($event) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.seekMove(this.getTouchOffset($event));\n      }\n    }\n  } // @ts-ignore\n\n\n  onTouchCancelScrubBar($event) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  } // @ts-ignore\n\n\n  onTouchEndScrubBar($event) {\n    if (this.target) {\n      if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n        this.touchEnd();\n      }\n    }\n  }\n\n  arrowAdjustVolume(event) {\n    if (this.target) {\n      if (event.keyCode === 38 || event.keyCode === 39) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current + 5000) / 1000, false);\n      } else if (event.keyCode === 37 || event.keyCode === 40) {\n        event.preventDefault();\n        this.target.seekTime((this.target.time.current - 5000) / 1000, false);\n      }\n    }\n  }\n\n  getPercentage() {\n    return this.target ? this.target.time.current * 100 / this.target.time.total + '%' : '0%';\n  }\n\n  onHideScrubBar(hide) {\n    this.hideScrubBar = hide;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgScrubBar.ɵfac = function VgScrubBar_Factory(t) {\n  return new (t || VgScrubBar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI), i0.ɵɵdirectiveInject(VgControlsHidden));\n};\n\nVgScrubBar.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgScrubBar,\n  selectors: [[\"vg-scrub-bar\"]],\n  hostVars: 2,\n  hostBindings: function VgScrubBar_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function VgScrubBar_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDownScrubBar($event);\n      })(\"mousemove\", function VgScrubBar_mousemove_HostBindingHandler($event) {\n        return ctx.onMouseMoveScrubBar($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function VgScrubBar_mouseup_HostBindingHandler($event) {\n        return ctx.onMouseUpScrubBar($event);\n      }, false, i0.ɵɵresolveDocument)(\"touchstart\", function VgScrubBar_touchstart_HostBindingHandler($event) {\n        return ctx.onTouchStartScrubBar($event);\n      })(\"touchmove\", function VgScrubBar_touchmove_HostBindingHandler($event) {\n        return ctx.onTouchMoveScrubBar($event);\n      }, false, i0.ɵɵresolveDocument)(\"touchcancel\", function VgScrubBar_touchcancel_HostBindingHandler($event) {\n        return ctx.onTouchCancelScrubBar($event);\n      }, false, i0.ɵɵresolveDocument)(\"touchend\", function VgScrubBar_touchend_HostBindingHandler($event) {\n        return ctx.onTouchEndScrubBar($event);\n      }, false, i0.ɵɵresolveDocument)(\"keydown\", function VgScrubBar_keydown_HostBindingHandler($event) {\n        return ctx.arrowAdjustVolume($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"hide\", ctx.hideScrubBar);\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\",\n    vgSlider: \"vgSlider\"\n  },\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"tabindex\", \"0\", \"role\", \"slider\", \"aria-label\", \"scrub bar\", \"aria-level\", \"polite\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"scrubBar\"]],\n  template: function VgScrubBar_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-valuenow\", ctx.getPercentage())(\"aria-valuetext\", ctx.getPercentage() + \"%\");\n    }\n  },\n  styles: [\"vg-scrub-bar{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;position:absolute;width:100%;height:5px;bottom:50px;margin:0;cursor:pointer;align-items:center;background:rgba(0,0,0,.75);z-index:250;transition:bottom 1s,opacity .5s}vg-scrub-bar .scrubBar{position:relative;display:flex;flex-grow:1;align-items:center;height:100%}vg-controls vg-scrub-bar{position:relative;bottom:0;background:transparent;height:50px;flex-grow:1;flex-basis:0;margin:0 10px;transition:initial}vg-scrub-bar.hide{bottom:0;opacity:0}vg-controls vg-scrub-bar.hide{bottom:initial;opacity:initial}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgScrubBar, [{\n    type: Component,\n    args: [{\n      selector: 'vg-scrub-bar',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div class=\"scrubBar\"\n             tabindex=\"0\"\n             role=\"slider\"\n             aria-label=\"scrub bar\"\n             aria-level=\"polite\"\n             [attr.aria-valuenow]=\"getPercentage()\"\n             aria-valuemin=\"0\"\n             aria-valuemax=\"100\"\n             [attr.aria-valuetext]=\"getPercentage() + '%'\">\n            <ng-content></ng-content>\n        </div>\n    `,\n      styles: [`\n        vg-scrub-bar {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            position: absolute;\n            width: 100%;\n            height: 5px;\n            bottom: 50px;\n            margin: 0;\n            cursor: pointer;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.75);\n            z-index: 250;\n            -webkit-transition: bottom 1s, opacity 0.5s;\n            -khtml-transition: bottom 1s, opacity 0.5s;\n            -moz-transition: bottom 1s, opacity 0.5s;\n            -ms-transition: bottom 1s, opacity 0.5s;\n            transition: bottom 1s, opacity 0.5s;\n        }\n        vg-scrub-bar .scrubBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n            height: 100%;\n        }\n        vg-controls vg-scrub-bar {\n            position: relative;\n            bottom: 0;\n            background: transparent;\n            height: 50px;\n            flex-grow: 1;\n            flex-basis: 0;\n            margin: 0 10px;\n            -webkit-transition: initial;\n            -khtml-transition: initial;\n            -moz-transition: initial;\n            -ms-transition: initial;\n            transition: initial;\n        }\n        vg-scrub-bar.hide {\n            bottom: 0;\n            opacity: 0;\n        }\n        vg-controls vg-scrub-bar.hide {\n            bottom: initial;\n            opacity: initial;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }, {\n      type: VgControlsHidden\n    }];\n  }, {\n    hideScrubBar: [{\n      type: HostBinding,\n      args: ['class.hide']\n    }],\n    vgFor: [{\n      type: Input\n    }],\n    vgSlider: [{\n      type: Input\n    }],\n    onMouseDownScrubBar: [{\n      type: HostListener,\n      args: ['mousedown', ['$event']]\n    }],\n    onMouseMoveScrubBar: [{\n      type: HostListener,\n      args: ['document:mousemove', ['$event']]\n    }],\n    onMouseUpScrubBar: [{\n      type: HostListener,\n      args: ['document:mouseup', ['$event']]\n    }],\n    onTouchStartScrubBar: [{\n      type: HostListener,\n      args: ['touchstart', ['$event']]\n    }],\n    onTouchMoveScrubBar: [{\n      type: HostListener,\n      args: ['document:touchmove', ['$event']]\n    }],\n    onTouchCancelScrubBar: [{\n      type: HostListener,\n      args: ['document:touchcancel', ['$event']]\n    }],\n    onTouchEndScrubBar: [{\n      type: HostListener,\n      args: ['document:touchend', ['$event']]\n    }],\n    arrowAdjustVolume: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgScrubBarBufferingTime {\n  constructor(ref, API) {\n    this.API = API;\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getBufferTime() {\n    let bufferTime = '0%';\n\n    if (this.target && this.target.buffer && this.target.buffered.length) {\n      if (this.target.time.total === 0) {\n        bufferTime = '0%';\n      } else {\n        bufferTime = this.target.buffer.end / this.target.time.total * 100 + '%';\n      }\n    }\n\n    return bufferTime;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgScrubBarBufferingTime.ɵfac = function VgScrubBarBufferingTime_Factory(t) {\n  return new (t || VgScrubBarBufferingTime)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgScrubBarBufferingTime.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgScrubBarBufferingTime,\n  selectors: [[\"vg-scrub-bar-buffering-time\"]],\n  inputs: {\n    vgFor: \"vgFor\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[1, \"background\"]],\n  template: function VgScrubBarBufferingTime_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.getBufferTime());\n    }\n  },\n  styles: [\"vg-scrub-bar-buffering-time{display:flex;width:100%;height:5px;pointer-events:none;position:absolute}vg-scrub-bar-buffering-time .background{background-color:#ffffff4d}vg-controls vg-scrub-bar-buffering-time{position:absolute;top:calc(50% - 3px)}vg-controls vg-scrub-bar-buffering-time .background{border-radius:2px}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgScrubBarBufferingTime, [{\n    type: Component,\n    args: [{\n      selector: 'vg-scrub-bar-buffering-time',\n      encapsulation: ViewEncapsulation.None,\n      template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`,\n      styles: [`\n        vg-scrub-bar-buffering-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-buffering-time .background {\n            background-color: rgba(255, 255, 255, 0.3);\n        }\n        vg-controls vg-scrub-bar-buffering-time {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n        vg-controls vg-scrub-bar-buffering-time .background {\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }]\n  });\n})(); // tslint:disable:no-conflicting-lifecycle\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\n\n\nclass VgScrubBarCuePoints {\n  constructor(ref, API) {\n    this.API = API;\n    this.onLoadedMetadataCalled = false;\n    this.cuePoints = [];\n    this.subscriptions = [];\n    this.totalCues = 0;\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    const onTimeUpdate = this.target.subscriptions.loadedMetadata;\n    this.subscriptions.push(onTimeUpdate.subscribe(this.onLoadedMetadata.bind(this)));\n\n    if (this.onLoadedMetadataCalled) {\n      this.onLoadedMetadata();\n    }\n  }\n\n  onLoadedMetadata() {\n    if (this.vgCuePoints) {\n      // We need to transform the TextTrackCueList to Array or it doesn't work on IE11/Edge.\n      // See: https://github.com/videogular/videogular2/issues/369\n      this.cuePoints = [];\n\n      for (let i = 0, l = this.vgCuePoints.length; i < l; i++) {\n        const end = this.vgCuePoints[i].endTime >= 0 ? this.vgCuePoints[i].endTime : this.vgCuePoints[i].startTime + 1;\n        const cuePointDuration = (end - this.vgCuePoints[i].startTime) * 1000;\n        let position = '0';\n        let percentWidth = '0';\n\n        if (typeof cuePointDuration === 'number' && this.target.time.total) {\n          percentWidth = cuePointDuration * 100 / this.target.time.total + '%';\n          position = this.vgCuePoints[i].startTime * 100 / Math.round(this.target.time.total / 1000) + '%';\n        }\n\n        this.vgCuePoints[i].$$style = {\n          width: percentWidth,\n          left: position\n        };\n        this.cuePoints.push(this.vgCuePoints[i]);\n      }\n    }\n  }\n\n  updateCuePoints() {\n    if (!this.target) {\n      this.onLoadedMetadataCalled = true;\n      return;\n    }\n\n    this.onLoadedMetadata();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['vgCuePoints'].currentValue) {\n      this.updateCuePoints();\n    }\n  }\n\n  ngDoCheck() {\n    if (this.vgCuePoints) {\n      const changes = this.totalCues !== this.vgCuePoints.length;\n\n      if (changes) {\n        this.totalCues = this.vgCuePoints.length;\n        this.updateCuePoints();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgScrubBarCuePoints.ɵfac = function VgScrubBarCuePoints_Factory(t) {\n  return new (t || VgScrubBarCuePoints)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgScrubBarCuePoints.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgScrubBarCuePoints,\n  selectors: [[\"vg-scrub-bar-cue-points\"]],\n  inputs: {\n    vgCuePoints: \"vgCuePoints\",\n    vgFor: \"vgFor\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"cue-point-container\"], [\"class\", \"cue-point\", 3, \"width\", \"left\", 4, \"ngFor\", \"ngForOf\"], [1, \"cue-point\"]],\n  template: function VgScrubBarCuePoints_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, VgScrubBarCuePoints_span_1_Template, 1, 4, \"span\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.cuePoints);\n    }\n  },\n  directives: [i2.NgForOf],\n  styles: [\"vg-scrub-bar-cue-points{display:flex;width:100%;height:5px;pointer-events:none;position:absolute}vg-scrub-bar-cue-points .cue-point-container .cue-point{position:absolute;height:5px;background-color:#ffcc00b3}vg-controls vg-scrub-bar-cue-points{position:absolute;top:calc(50% - 3px)}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgScrubBarCuePoints, [{\n    type: Component,\n    args: [{\n      selector: 'vg-scrub-bar-cue-points',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div class=\"cue-point-container\">\n            <span *ngFor=\"let cp of cuePoints\" [style.width]=\"cp.$$style?.width\" [style.left]=\"cp.$$style?.left\"\n                  class=\"cue-point\"></span>\n        </div>\n    `,\n      styles: [`\n        vg-scrub-bar-cue-points {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-cue-points .cue-point-container .cue-point {\n            position: absolute;\n            height: 5px;\n            background-color: rgba(255, 204, 0, 0.7);\n        }\n        vg-controls vg-scrub-bar-cue-points {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgCuePoints: [{\n      type: Input\n    }],\n    vgFor: [{\n      type: Input\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgScrubBarCurrentTime {\n  constructor(ref, API) {\n    this.API = API;\n    this.vgSlider = false;\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getPercentage() {\n    return this.target ? this.target.time.current * 100 / this.target.time.total + '%' : '0%';\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgScrubBarCurrentTime.ɵfac = function VgScrubBarCurrentTime_Factory(t) {\n  return new (t || VgScrubBarCurrentTime)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgScrubBarCurrentTime.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgScrubBarCurrentTime,\n  selectors: [[\"vg-scrub-bar-current-time\"]],\n  inputs: {\n    vgFor: \"vgFor\",\n    vgSlider: \"vgSlider\"\n  },\n  decls: 2,\n  vars: 3,\n  consts: [[1, \"background\"], [\"class\", \"slider\", 4, \"ngIf\"], [1, \"slider\"]],\n  template: function VgScrubBarCurrentTime_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵtemplate(1, VgScrubBarCurrentTime_span_1_Template, 1, 0, \"span\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.getPercentage());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.vgSlider);\n    }\n  },\n  directives: [i2.NgIf],\n  styles: [\"vg-scrub-bar-current-time{display:flex;width:100%;height:5px;pointer-events:none;position:absolute}vg-scrub-bar-current-time .background{background-color:#fff}vg-controls vg-scrub-bar-current-time{position:absolute;top:calc(50% - 3px);border-radius:2px}vg-controls vg-scrub-bar-current-time .background{border:1px solid white;border-radius:2px}vg-scrub-bar-current-time .slider{background:white;height:15px;width:15px;border-radius:50%;box-shadow:0 0 10px #000;margin-top:-5px;margin-left:-10px}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgScrubBarCurrentTime, [{\n    type: Component,\n    args: [{\n      selector: 'vg-scrub-bar-current-time',\n      encapsulation: ViewEncapsulation.None,\n      template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div><span class=\"slider\" *ngIf=\"vgSlider\"></span>`,\n      styles: [`\n        vg-scrub-bar-current-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-current-time .background {\n            background-color: white;\n        }\n        vg-controls vg-scrub-bar-current-time {\n            position: absolute;\n            top: calc(50% - 3px);\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n        vg-controls vg-scrub-bar-current-time .background {\n            border: 1px solid white;\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n\n        vg-scrub-bar-current-time .slider{\n            background: white;\n            height: 15px;\n            width: 15px;\n            border-radius: 50%;\n            box-shadow: 0px 0px 10px black;\n            margin-top: -5px;\n            margin-left: -10px;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    vgSlider: [{\n      type: Input\n    }]\n  });\n})(); // Workaround until we can use UTC with Angular Date Pipe\n\n\nclass VgUtcPipe {\n  transform(value, format) {\n    const date = new Date(value);\n    let result = format;\n    let ss = date.getUTCSeconds();\n    let mm = date.getUTCMinutes();\n    let hh = date.getUTCHours();\n\n    if (ss < 10) {\n      ss = '0' + ss;\n    }\n\n    if (mm < 10) {\n      mm = '0' + mm;\n    }\n\n    if (hh < 10) {\n      hh = '0' + hh;\n    }\n\n    result = result.replace(/ss/g, ss);\n    result = result.replace(/mm/g, mm);\n    result = result.replace(/hh/g, hh);\n    return result;\n  }\n\n}\n\nVgUtcPipe.ɵfac = function VgUtcPipe_Factory(t) {\n  return new (t || VgUtcPipe)();\n};\n\nVgUtcPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"vgUtc\",\n  type: VgUtcPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgUtcPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'vgUtc'\n    }]\n  }], null, null);\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgTimeDisplay {\n  constructor(ref, API) {\n    this.API = API;\n    this.vgProperty = 'current';\n    this.vgFormat = 'mm:ss';\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n  }\n\n  getTime() {\n    let t = 0;\n\n    if (this.target) {\n      t = Math.round(this.target.time[this.vgProperty]);\n      t = isNaN(t) || this.target.isLive ? 0 : t;\n    }\n\n    return t;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgTimeDisplay.ɵfac = function VgTimeDisplay_Factory(t) {\n  return new (t || VgTimeDisplay)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgTimeDisplay.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgTimeDisplay,\n  selectors: [[\"vg-time-display\"]],\n  inputs: {\n    vgFor: \"vgFor\",\n    vgProperty: \"vgProperty\",\n    vgFormat: \"vgFormat\"\n  },\n  ngContentSelectors: _c0,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"]],\n  template: function VgTimeDisplay_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, VgTimeDisplay_span_0_Template, 2, 0, \"span\", 0);\n      i0.ɵɵtemplate(1, VgTimeDisplay_span_1_Template, 3, 4, \"span\", 0);\n      i0.ɵɵprojection(2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.target == null ? null : ctx.target.isLive);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.target == null ? null : ctx.target.isLive));\n    }\n  },\n  directives: [i2.NgIf],\n  pipes: [VgUtcPipe],\n  styles: [\"vg-time-display{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:60px;cursor:pointer;color:#fff;line-height:50px;pointer-events:none;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgTimeDisplay, [{\n    type: Component,\n    args: [{\n      selector: 'vg-time-display',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <span *ngIf=\"target?.isLive\">LIVE</span>\n        <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc:vgFormat }}</span>\n        <ng-content></ng-content>\n    `,\n      styles: [`\n        vg-time-display {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 60px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            pointer-events: none;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    vgProperty: [{\n      type: Input\n    }],\n    vgFormat: [{\n      type: Input\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n\n\nclass VgTrackSelector {\n  constructor(ref, API) {\n    this.API = API;\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    const subs = Array.from(this.API.getMasterMedia().elem.children).filter(item => item.tagName === 'TRACK').filter(item => item.kind === 'subtitles').map(item => ({\n      label: item.label,\n      selected: item.default === true,\n      id: item.srclang\n    }));\n    this.tracks = [...subs, {\n      id: null,\n      label: 'Off',\n      selected: subs.every(item => item.selected === false)\n    }];\n    const track = this.tracks.filter(item => item.selected === true)[0];\n    this.trackSelected = track.id;\n    this.ariaValue = track.label;\n  }\n\n  selectTrack(trackId) {\n    this.trackSelected = trackId === 'null' ? null : trackId;\n    this.ariaValue = 'No track selected';\n    Array.from(this.API.getMasterMedia().elem.textTracks).forEach(item => {\n      if (item.language === trackId) {\n        this.ariaValue = item.label;\n        item.mode = 'showing';\n      } else {\n        item.mode = 'hidden';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgTrackSelector.ɵfac = function VgTrackSelector_Factory(t) {\n  return new (t || VgTrackSelector)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgTrackSelector.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgTrackSelector,\n  selectors: [[\"vg-track-selector\"]],\n  inputs: {\n    vgFor: \"vgFor\"\n  },\n  decls: 5,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"track-selected\"], [\"tabindex\", \"0\", \"aria-label\", \"track selector\", 1, \"trackSelector\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]],\n  template: function VgTrackSelector_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 2);\n      i0.ɵɵlistener(\"change\", function VgTrackSelector_Template_select_change_3_listener($event) {\n        return ctx.selectTrack($event.target.value);\n      });\n      i0.ɵɵtemplate(4, VgTrackSelector_option_4_Template, 2, 3, \"option\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"vg-icon-closed_caption\", !ctx.trackSelected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.trackSelected || \"\", \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tracks);\n    }\n  },\n  directives: [i2.NgForOf],\n  styles: [\"vg-track-selector{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;width:50px;height:50px;cursor:pointer;color:#fff;line-height:50px}vg-track-selector .container{position:relative;display:flex;flex-grow:1;align-items:center;padding:0;margin:5px}vg-track-selector select.trackSelector{width:50px;padding:5px 8px;border:none;background:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;color:transparent;font-size:16px}vg-track-selector select.trackSelector::-ms-expand{display:none}vg-track-selector select.trackSelector option{color:#000}vg-track-selector .track-selected{position:absolute;width:100%;height:50px;top:-6px;text-align:center;text-transform:uppercase;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding-top:2px;pointer-events:none}vg-track-selector .vg-icon-closed_caption:before{width:100%}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgTrackSelector, [{\n    type: Component,\n    args: [{\n      selector: 'vg-track-selector',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div class=\"container\">\n            <div class=\"track-selected\"\n                [class.vg-icon-closed_caption]=\"!trackSelected\">\n                {{ trackSelected || '' }}\n            </div>\n\n            <select class=\"trackSelector\"\n                    (change)=\"selectTrack($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"track selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let track of tracks\"\n                    [value]=\"track.id\"\n                    [selected]=\"track.selected === true\">\n                    {{ track.label }}\n                </option>\n            </select>\n        </div>\n    `,\n      styles: [`\n        vg-track-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-track-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-track-selector select.trackSelector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-track-selector select.trackSelector::-ms-expand {\n            display: none;\n        }\n        vg-track-selector select.trackSelector option {\n            color: #000;\n        }\n        vg-track-selector .track-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-track-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }]\n  });\n})(); // tslint:disable:no-output-on-prefix\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\n\n\nclass VgQualitySelector {\n  constructor(ref, API) {\n    this.API = API;\n    this.onBitrateChange = new EventEmitter();\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {}\n\n  ngOnChanges(changes) {\n    if (changes['bitrates'].currentValue && changes['bitrates'].currentValue.length) {\n      this.bitrates.forEach(item => item.label = (item.label || Math.round(item.bitrate / 1000)).toString());\n    }\n  }\n\n  selectBitrate(index) {\n    this.bitrateSelected = this.bitrates[index];\n    this.onBitrateChange.emit(this.bitrates[index]);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgQualitySelector.ɵfac = function VgQualitySelector_Factory(t) {\n  return new (t || VgQualitySelector)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgQualitySelector.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgQualitySelector,\n  selectors: [[\"vg-quality-selector\"]],\n  inputs: {\n    bitrates: \"bitrates\"\n  },\n  outputs: {\n    onBitrateChange: \"onBitrateChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 5,\n  vars: 5,\n  consts: [[1, \"container\"], [1, \"quality-selected\"], [\"tabindex\", \"0\", \"aria-label\", \"quality selector\", 1, \"quality-selector\", 3, \"change\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"selected\"]],\n  template: function VgQualitySelector_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 2);\n      i0.ɵɵlistener(\"change\", function VgQualitySelector_Template_select_change_3_listener($event) {\n        return ctx.selectBitrate($event.target.value);\n      });\n      i0.ɵɵtemplate(4, VgQualitySelector_option_4_Template, 2, 3, \"option\", 3);\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"vg-icon-hd\", !ctx.bitrateSelected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.bitrateSelected == null ? null : ctx.bitrateSelected.label, \" \");\n      i0.ɵɵadvance(1);\n      i0.ɵɵattribute(\"aria-valuetext\", ctx.ariaValue);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.bitrates);\n    }\n  },\n  directives: [i2.NgForOf],\n  styles: [\"vg-quality-selector{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;width:50px;height:50px;cursor:pointer;color:#fff;line-height:50px}vg-quality-selector .container{position:relative;display:flex;flex-grow:1;align-items:center;padding:0;margin:5px}vg-quality-selector select.quality-selector{width:50px;padding:5px 8px;border:none;background:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;color:transparent;font-size:16px}vg-quality-selector select.quality-selector::-ms-expand{display:none}vg-quality-selector select.quality-selector option{color:#000}vg-quality-selector .quality-selected{position:absolute;width:100%;height:50px;top:-6px;text-align:center;text-transform:uppercase;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding-top:2px;pointer-events:none}vg-quality-selector .vg-icon-closed_caption:before{width:100%}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgQualitySelector, [{\n    type: Component,\n    args: [{\n      selector: 'vg-quality-selector',\n      encapsulation: ViewEncapsulation.None,\n      template: `\n        <div class=\"container\">\n            <div class=\"quality-selected\"\n                 [class.vg-icon-hd]=\"!bitrateSelected\">\n                {{ bitrateSelected?.label }}\n            </div>\n\n            <select class=\"quality-selector\"\n                    (change)=\"selectBitrate($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"quality selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let bitrate of bitrates\"\n                    [value]=\"bitrate.qualityIndex.toString()\"\n                    [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\">\n                    {{ bitrate.label }}\n                </option>\n            </select>\n        </div>\n    `,\n      styles: [`\n        vg-quality-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-quality-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-quality-selector select.quality-selector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-quality-selector select.quality-selector::-ms-expand {\n            display: none;\n        }\n        vg-quality-selector select.quality-selector option {\n            color: #000;\n        }\n        vg-quality-selector .quality-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-quality-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    bitrates: [{\n      type: Input\n    }],\n    onBitrateChange: [{\n      type: Output\n    }]\n  });\n})();\n\nclass VgControlsModule {}\n\nVgControlsModule.ɵfac = function VgControlsModule_Factory(t) {\n  return new (t || VgControlsModule)();\n};\n\nVgControlsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgControlsModule\n});\nVgControlsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [VgControlsHidden],\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgControlsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [VgControls, VgFullscreen, VgMute, VgVolume, VgPlayPause, VgPlaybackButton, VgScrubBar, VgScrubBarBufferingTime, VgScrubBarCuePoints, VgScrubBarCurrentTime, VgTimeDisplay, VgUtcPipe, VgTrackSelector, VgQualitySelector],\n      exports: [VgControls, VgFullscreen, VgMute, VgVolume, VgPlayPause, VgPlaybackButton, VgScrubBar, VgScrubBarBufferingTime, VgScrubBarCuePoints, VgScrubBarCurrentTime, VgTimeDisplay, VgUtcPipe, VgTrackSelector, VgQualitySelector],\n      providers: [VgControlsHidden]\n    }]\n  }], null, null);\n})();\n\nclass VgEvents {}\n\nVgEvents.VG_ABORT = 'abort';\nVgEvents.VG_CAN_PLAY = 'canplay';\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\nVgEvents.VG_EMPTIED = 'emptied';\nVgEvents.VG_ENCRYPTED = 'encrypted';\nVgEvents.VG_ENDED = 'ended';\nVgEvents.VG_ERROR = 'error';\nVgEvents.VG_LOADED_DATA = 'loadeddata';\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\nVgEvents.VG_LOAD_START = 'loadstart';\nVgEvents.VG_PAUSE = 'pause';\nVgEvents.VG_PLAY = 'play';\nVgEvents.VG_PLAYING = 'playing';\nVgEvents.VG_PROGRESS = 'progress';\nVgEvents.VG_RATE_CHANGE = 'ratechange';\nVgEvents.VG_SEEK = 'seek';\nVgEvents.VG_SEEKED = 'seeked';\nVgEvents.VG_SEEKING = 'seeking';\nVgEvents.VG_STALLED = 'stalled';\nVgEvents.VG_SUSPEND = 'suspend';\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\nVgEvents.VG_WAITING = 'waiting';\nVgEvents.VG_LOAD = 'load';\nVgEvents.VG_ENTER = 'enter';\nVgEvents.VG_EXIT = 'exit';\nVgEvents.VG_START_ADS = 'startads';\nVgEvents.VG_END_ADS = 'endads';\n\nVgEvents.ɵfac = function VgEvents_Factory(t) {\n  return new (t || VgEvents)();\n};\n\nVgEvents.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: VgEvents,\n  factory: VgEvents.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgEvents, [{\n    type: Injectable\n  }], null, null);\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nclass VgMedia {\n  constructor(api, ref) {\n    this.api = api;\n    this.ref = ref;\n    this.state = VgStates.VG_PAUSED;\n    this.time = {\n      current: 0,\n      total: 0,\n      left: 0\n    };\n    this.buffer = {\n      end: 0\n    };\n    this.canPlay = false;\n    this.canPlayThrough = false;\n    this.isMetadataLoaded = false;\n    this.isWaiting = false;\n    this.isCompleted = false;\n    this.isLive = false;\n    this.isBufferDetected = false;\n    this.checkInterval = 200;\n    this.currentPlayPos = 0;\n    this.lastPlayPos = 0;\n    this.playAtferSync = false;\n    this.bufferDetected = new Subject();\n  }\n\n  ngOnInit() {\n    if (this.vgMedia.nodeName) {\n      // It's a native element\n      this.elem = this.vgMedia;\n    } else {\n      // It's an Angular Class\n      this.elem = this.vgMedia.elem;\n    } // Just in case we're creating this vgMedia dynamically register again into API\n\n\n    this.api.registerMedia(this);\n    this.subscriptions = {\n      // Native events\n      abort: fromEvent(this.elem, VgEvents.VG_ABORT),\n      canPlay: fromEvent(this.elem, VgEvents.VG_CAN_PLAY),\n      canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n      durationChange: fromEvent(this.elem, VgEvents.VG_DURATION_CHANGE),\n      emptied: fromEvent(this.elem, VgEvents.VG_EMPTIED),\n      encrypted: fromEvent(this.elem, VgEvents.VG_ENCRYPTED),\n      ended: fromEvent(this.elem, VgEvents.VG_ENDED),\n      error: fromEvent(this.elem, VgEvents.VG_ERROR),\n      loadedData: fromEvent(this.elem, VgEvents.VG_LOADED_DATA),\n      loadedMetadata: fromEvent(this.elem, VgEvents.VG_LOADED_METADATA),\n      loadStart: fromEvent(this.elem, VgEvents.VG_LOAD_START),\n      pause: fromEvent(this.elem, VgEvents.VG_PAUSE),\n      play: fromEvent(this.elem, VgEvents.VG_PLAY),\n      playing: fromEvent(this.elem, VgEvents.VG_PLAYING),\n      progress: fromEvent(this.elem, VgEvents.VG_PROGRESS),\n      rateChange: fromEvent(this.elem, VgEvents.VG_RATE_CHANGE),\n      seeked: fromEvent(this.elem, VgEvents.VG_SEEKED),\n      seeking: fromEvent(this.elem, VgEvents.VG_SEEKING),\n      stalled: fromEvent(this.elem, VgEvents.VG_STALLED),\n      suspend: fromEvent(this.elem, VgEvents.VG_SUSPEND),\n      timeUpdate: fromEvent(this.elem, VgEvents.VG_TIME_UPDATE),\n      volumeChange: fromEvent(this.elem, VgEvents.VG_VOLUME_CHANGE),\n      waiting: fromEvent(this.elem, VgEvents.VG_WAITING),\n      // Advertisement only events\n      startAds: fromEvent(this.elem, VgEvents.VG_START_ADS),\n      endAds: fromEvent(this.elem, VgEvents.VG_END_ADS),\n      // See changes on <source> child elements to reload the video file\n      mutation: new Observable(observer => {\n        const domObs = new MutationObserver(mutations => {\n          observer.next(mutations);\n        });\n        domObs.observe(this.elem, {\n          childList: true,\n          attributes: true\n        });\n        return () => {\n          domObs.disconnect();\n        };\n      }),\n      // Custom buffering detection\n      bufferDetected: this.bufferDetected\n    };\n    this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n    this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n    this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n    this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n    this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n    this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n    this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n    this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n    this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n    this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n    this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n    this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n    this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n\n    if (this.vgMaster) {\n      this.api.playerReadyEvent.subscribe(() => {\n        this.prepareSync();\n      });\n    }\n  }\n\n  prepareSync() {\n    const canPlayAll = [];\n\n    for (const media in this.api.medias) {\n      if (this.api.medias[media]) {\n        canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n      }\n    }\n\n    this.canPlayAllSubscription = combineLatest(canPlayAll).pipe(map((...params) => {\n      const checkReadyState = event => {\n        return event.target.readyState === 4;\n      };\n\n      const allReady = params.some(checkReadyState);\n\n      if (allReady && !this.syncSubscription) {\n        this.startSync();\n        this.syncSubscription.unsubscribe();\n      }\n    })).subscribe();\n  }\n\n  startSync() {\n    this.syncSubscription = timer(0, 1000).subscribe(() => {\n      for (const media in this.api.medias) {\n        if (this.api.medias[media] !== this) {\n          const diff = this.api.medias[media].currentTime - this.currentTime;\n\n          if (diff < -0.3 || diff > 0.3) {\n            this.playAtferSync = this.state === VgStates.VG_PLAYING;\n            this.pause();\n            this.api.medias[media].pause();\n            this.api.medias[media].currentTime = this.currentTime;\n          } else {\n            if (this.playAtferSync) {\n              this.play();\n              this.api.medias[media].play();\n              this.playAtferSync = false;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  onMutation(mutations) {\n    // Detect changes only for source elements or src attribute\n    for (let i = 0, l = mutations.length; i < l; i++) {\n      const mut = mutations[i];\n\n      if (mut.type === 'attributes' && mut.attributeName === 'src') {\n        // Only load src file if it's not a blob (for DASH / HLS sources)\n        // tslint:disable-next-line:no-string-literal\n        if (mut.target['src'] && mut.target['src'].length > 0 && mut.target['src'].indexOf('blob:') < 0) {\n          this.loadMedia();\n          break;\n        }\n      } else if (mut.type === 'childList' && mut.removedNodes.length && mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n        this.loadMedia();\n        break;\n      }\n    }\n  }\n\n  loadMedia() {\n    this.vgMedia.pause();\n    this.vgMedia.currentTime = 0; // Start buffering until we can play the media file\n\n    this.stopBufferCheck();\n    this.isBufferDetected = true;\n    this.bufferDetected.next(this.isBufferDetected); // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n\n    setTimeout(() => this.vgMedia.load(), 10);\n  }\n\n  play() {\n    // short-circuit if already playing\n    if (this.playPromise || this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED) {\n      return;\n    }\n\n    this.playPromise = this.vgMedia.play(); // browser has async play promise\n\n    if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n      this.playPromise.then(() => {\n        this.playPromise = null;\n      }).catch(() => {\n        this.playPromise = null; // deliberately empty for the sake of eating console noise\n      });\n    }\n\n    return this.playPromise;\n  }\n\n  pause() {\n    // browser has async play promise\n    if (this.playPromise) {\n      this.playPromise.then(() => {\n        this.vgMedia.pause();\n      });\n    } else {\n      this.vgMedia.pause();\n    }\n  }\n\n  get id() {\n    // We should return undefined if vgMedia still doesn't exist\n    // tslint:disable-next-line:no-unnecessary-initializer\n    let result = undefined;\n\n    if (this.vgMedia) {\n      result = this.vgMedia.id;\n    }\n\n    return result;\n  }\n\n  get duration() {\n    return this.vgMedia.duration;\n  }\n\n  set currentTime(seconds) {\n    this.vgMedia.currentTime = seconds; // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n  }\n\n  get currentTime() {\n    return this.vgMedia.currentTime;\n  }\n\n  set volume(volume) {\n    this.vgMedia.volume = volume;\n  }\n\n  get volume() {\n    return this.vgMedia.volume;\n  }\n\n  set playbackRate(rate) {\n    this.vgMedia.playbackRate = rate;\n  }\n\n  get playbackRate() {\n    return this.vgMedia.playbackRate;\n  }\n\n  get buffered() {\n    return this.vgMedia.buffered;\n  }\n\n  get textTracks() {\n    return this.vgMedia.textTracks;\n  } // @ts-ignore\n\n\n  onCanPlay(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlay = true;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onCanPlayThrough(event) {\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n    this.canPlayThrough = true;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onLoadMetadata(event) {\n    this.isMetadataLoaded = true;\n    this.time = {\n      current: 0,\n      left: 0,\n      total: this.duration * 1000\n    };\n    this.state = VgStates.VG_PAUSED; // Live streaming check\n\n    const t = Math.round(this.time.total);\n    this.isLive = t === Infinity;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onWait(event) {\n    this.isWaiting = true;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onComplete(event) {\n    this.isCompleted = true;\n    this.state = VgStates.VG_ENDED;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onStartPlaying(event) {\n    this.state = VgStates.VG_PLAYING;\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onPlay(event) {\n    this.state = VgStates.VG_PLAYING;\n\n    if (this.vgMaster) {\n      if (!this.syncSubscription || this.syncSubscription.closed) {\n        this.startSync();\n      }\n    }\n\n    this.startBufferCheck();\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onPause(event) {\n    this.state = VgStates.VG_PAUSED;\n\n    if (this.vgMaster) {\n      if (!this.playAtferSync) {\n        this.syncSubscription.unsubscribe();\n      }\n    }\n\n    this.stopBufferCheck();\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onTimeUpdate(event) {\n    var _a;\n\n    const end = ((_a = this.buffered) === null || _a === void 0 ? void 0 : _a.length) - 1;\n    this.time = {\n      current: this.currentTime * 1000,\n      total: this.time.total,\n      left: (this.duration - this.currentTime) * 1000\n    };\n\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onProgress(event) {\n    const end = this.buffered.length - 1;\n\n    if (end >= 0) {\n      this.buffer = {\n        end: this.buffered.end(end) * 1000\n      };\n    }\n\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onVolumeChange(event) {\n    // TODO: Save to localstorage the current volume\n    this.ref.detectChanges();\n  } // @ts-ignore\n\n\n  onError(event) {\n    // TODO: Handle error messages\n    this.ref.detectChanges();\n  } // http://stackoverflow.com/a/23828241/779529\n\n\n  bufferCheck() {\n    const offset = 1 / this.checkInterval;\n    this.currentPlayPos = this.currentTime;\n\n    if (!this.isBufferDetected && this.currentPlayPos < this.lastPlayPos + offset) {\n      this.isBufferDetected = true;\n    }\n\n    if (this.isBufferDetected && this.currentPlayPos > this.lastPlayPos + offset) {\n      this.isBufferDetected = false;\n    } // Prevent calls to bufferCheck after ngOnDestroy have been called\n\n\n    if (!this.bufferDetected.closed) {\n      this.bufferDetected.next(this.isBufferDetected);\n    }\n\n    this.lastPlayPos = this.currentPlayPos;\n  }\n\n  startBufferCheck() {\n    this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(() => {\n      this.bufferCheck();\n    });\n  }\n\n  stopBufferCheck() {\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    this.isBufferDetected = false;\n    this.bufferDetected.next(this.isBufferDetected);\n  }\n\n  seekTime(value, byPercent = false) {\n    let second;\n    const duration = this.duration;\n\n    if (byPercent) {\n      second = value * duration / 100;\n    } else {\n      second = value;\n    }\n\n    this.currentTime = second;\n  }\n\n  addTextTrack(type, label, language, mode) {\n    const newTrack = this.vgMedia.addTextTrack(type, label, language);\n\n    if (mode) {\n      newTrack.mode = mode;\n    }\n\n    return newTrack;\n  }\n\n  ngOnDestroy() {\n    this.vgMedia.src = '';\n    this.mutationObs.unsubscribe();\n    this.canPlayObs.unsubscribe();\n    this.canPlayThroughObs.unsubscribe();\n    this.loadedMetadataObs.unsubscribe();\n    this.waitingObs.unsubscribe();\n    this.progressObs.unsubscribe();\n    this.endedObs.unsubscribe();\n    this.playingObs.unsubscribe();\n    this.playObs.unsubscribe();\n    this.pauseObs.unsubscribe();\n    this.timeUpdateObs.unsubscribe();\n    this.volumeChangeObs.unsubscribe();\n    this.errorObs.unsubscribe();\n\n    if (this.checkBufferSubscription) {\n      this.checkBufferSubscription.unsubscribe();\n    }\n\n    if (this.syncSubscription) {\n      this.syncSubscription.unsubscribe();\n    }\n\n    this.bufferDetected.complete();\n    this.bufferDetected.unsubscribe();\n    this.api.unregisterMedia(this);\n  }\n\n}\n\nVgMedia.ɵfac = function VgMedia_Factory(t) {\n  return new (t || VgMedia)(i0.ɵɵdirectiveInject(VgAPI), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n\nVgMedia.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgMedia,\n  selectors: [[\"\", \"vgMedia\", \"\"]],\n  inputs: {\n    vgMedia: \"vgMedia\",\n    vgMaster: \"vgMaster\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgMedia, [{\n    type: Directive,\n    args: [{\n      selector: '[vgMedia]'\n    }]\n  }], function () {\n    return [{\n      type: VgAPI\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    vgMedia: [{\n      type: Input\n    }],\n    vgMaster: [{\n      type: Input\n    }]\n  });\n})(); // tslint:disable-next-line:directive-class-suffix\n\n\nclass VgCuePoints {\n  constructor(ref) {\n    this.ref = ref; // tslint:disable:no-output-on-prefix\n\n    this.onEnterCuePoint = new EventEmitter();\n    this.onUpdateCuePoint = new EventEmitter();\n    this.onExitCuePoint = new EventEmitter();\n    this.onCompleteCuePoint = new EventEmitter();\n    this.subscriptions = [];\n    this.cuesSubscriptions = [];\n    this.totalCues = 0;\n  }\n\n  ngOnInit() {\n    this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n    this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n  }\n\n  onLoad(event) {\n    if (event.target && event.target.track) {\n      const cues = event.target.track.cues;\n      this.ref.nativeElement.cues = cues;\n      this.updateCuePoints(cues);\n    } else if (event.target && event.target.textTracks && event.target.textTracks.length) {\n      const cues = event.target.textTracks[0].cues;\n      this.ref.nativeElement.cues = cues;\n      this.updateCuePoints(cues);\n    }\n  }\n\n  updateCuePoints(cues) {\n    this.cuesSubscriptions.forEach(s => s.unsubscribe());\n\n    for (let i = 0, l = cues.length; i < l; i++) {\n      this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n      this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n      this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n      this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n    }\n  }\n\n  onEnter(event) {\n    this.onEnterCuePoint.emit(event.target);\n  }\n\n  onExit(event) {\n    this.onExitCuePoint.emit(event.target);\n  }\n\n  ngDoCheck() {\n    if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n      const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n\n      if (changes) {\n        this.totalCues = this.ref.nativeElement.track.cues.length;\n        this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n        this.updateCuePoints(this.ref.nativeElement.track.cues);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgCuePoints.ɵfac = function VgCuePoints_Factory(t) {\n  return new (t || VgCuePoints)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nVgCuePoints.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgCuePoints,\n  selectors: [[\"\", \"vgCuePoints\", \"\"]],\n  outputs: {\n    onEnterCuePoint: \"onEnterCuePoint\",\n    onUpdateCuePoint: \"onUpdateCuePoint\",\n    onExitCuePoint: \"onExitCuePoint\",\n    onCompleteCuePoint: \"onCompleteCuePoint\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCuePoints, [{\n    type: Directive,\n    args: [{\n      selector: '[vgCuePoints]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    onEnterCuePoint: [{\n      type: Output\n    }],\n    onUpdateCuePoint: [{\n      type: Output\n    }],\n    onExitCuePoint: [{\n      type: Output\n    }],\n    onCompleteCuePoint: [{\n      type: Output\n    }]\n  });\n})(); // tslint:disable:component-class-suffix\n// tslint:disable:no-output-on-prefix\n\n\nclass VgPlayer {\n  constructor(ref, api, fsAPI, controlsHidden) {\n    this.api = api;\n    this.fsAPI = fsAPI;\n    this.controlsHidden = controlsHidden;\n    this.isFullscreen = false;\n    this.isNativeFullscreen = false;\n    this.areControlsHidden = false;\n    this.onPlayerReady = new EventEmitter();\n    this.onMediaReady = new EventEmitter();\n    this.subscriptions = [];\n    this.elem = ref.nativeElement;\n    this.api.registerElement(this.elem);\n  }\n\n  ngAfterContentInit() {\n    this.medias.toArray().forEach(media => {\n      this.api.registerMedia(media);\n    });\n    this.fsAPI.init(this.elem, this.medias);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.api.onPlayerReady(this.fsAPI);\n    this.onPlayerReady.emit(this.api);\n  }\n\n  onChangeFullscreen(fsState) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n      this.zIndex = fsState ? VgUtils.getZIndex().toString() : 'auto';\n    } else {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden) {\n    this.areControlsHidden = hidden;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgPlayer.ɵfac = function VgPlayer_Factory(t) {\n  return new (t || VgPlayer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI), i0.ɵɵdirectiveInject(VgFullscreenAPI), i0.ɵɵdirectiveInject(VgControlsHidden));\n};\n\nVgPlayer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgPlayer,\n  selectors: [[\"vg-player\"]],\n  contentQueries: function VgPlayer_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, VgMedia, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.medias = _t);\n    }\n  },\n  hostVars: 8,\n  hostBindings: function VgPlayer_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n      i0.ɵɵclassProp(\"fullscreen\", ctx.isFullscreen)(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n    }\n  },\n  outputs: {\n    onPlayerReady: \"onPlayerReady\",\n    onMediaReady: \"onMediaReady\"\n  },\n  features: [i0.ɵɵProvidersFeature([VgAPI, VgFullscreenAPI, VgControlsHidden])],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function VgPlayer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgPlayer, [{\n    type: Component,\n    args: [{\n      selector: 'vg-player',\n      encapsulation: ViewEncapsulation.None,\n      template: `<ng-content></ng-content>`,\n      styles: [`\n        vg-player {\n            font-family: 'videogular';\n            position: relative;\n            display: flex;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            background-color: black;\n        }\n        vg-player.fullscreen {\n            position: fixed;\n            left: 0;\n            top: 0;\n        }\n        vg-player.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n    `],\n      providers: [VgAPI, VgFullscreenAPI, VgControlsHidden]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }, {\n      type: VgFullscreenAPI\n    }, {\n      type: VgControlsHidden\n    }];\n  }, {\n    isFullscreen: [{\n      type: HostBinding,\n      args: ['class.fullscreen']\n    }],\n    isNativeFullscreen: [{\n      type: HostBinding,\n      args: ['class.native-fullscreen']\n    }],\n    areControlsHidden: [{\n      type: HostBinding,\n      args: ['class.controls-hidden']\n    }],\n    zIndex: [{\n      type: HostBinding,\n      args: ['style.z-index']\n    }],\n    onPlayerReady: [{\n      type: Output\n    }],\n    onMediaReady: [{\n      type: Output\n    }],\n    medias: [{\n      type: ContentChildren,\n      args: [VgMedia]\n    }]\n  });\n})();\n\nclass VgMediaElement {\n  get audioTracks() {\n    return null;\n  } // @ts-ignore\n\n\n  addTextTrack(kind, label, language) {\n    return null;\n  } // @ts-ignore\n\n\n  canPlayType(type) {\n    return null;\n  }\n\n  load() {}\n\n  msClearEffects() {}\n\n  msGetAsCastingSource() {\n    return null;\n  } // @ts-ignore\n\n\n  msInsertAudioEffect(activatableClassId, effectRequired, config) {} // @ts-ignore\n\n\n  msSetMediaKeys(mediaKeys) {} // @ts-ignore\n\n\n  msSetMediaProtectionManager(mediaProtectionManager) {}\n\n  pause() {}\n\n  play() {\n    return null;\n  } // @ts-ignore\n\n\n  setMediaKeys(mediaKeys) {\n    return null;\n  } // @ts-ignore\n\n\n  addEventListener(type, listener, useCapture) {}\n\n} ///<reference path='./google.ima.ts'/>\n// tslint:disable:no-output-on-prefix\n// tslint:disable:ban-types\n// tslint:disable:component-class-suffix\n\n\nclass VgImaAds {\n  constructor(ref, API, fsAPI) {\n    this.API = API;\n    this.fsAPI = fsAPI;\n    this.onAdStart = new EventEmitter();\n    this.onAdStop = new EventEmitter();\n    this.onSkipAd = new EventEmitter();\n    this.isFullscreen = false;\n    this.subscriptions = [];\n    this.displayState = 'none';\n    this.elem = ref.nativeElement;\n    this.onContentEnded = this.onContentEnded.bind(this);\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    if (typeof google === 'undefined') {\n      this.onMissingGoogleImaLoader();\n      return;\n    }\n\n    this.target = this.API.getMediaById(this.vgFor);\n    this.initializations();\n    this.subscriptions.push(this.target.subscriptions.ended.subscribe(this.onContentEnded.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onUpdateState.bind(this)));\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.ima.adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.onAdsManagerLoaded.bind(this), false);\n    this.ima.adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdError.bind(this), false);\n    this.loadAds();\n  }\n\n  initializations() {\n    this.ima = new Ima(this.elem);\n\n    if (this.vgSkipButton) {\n      this.skipButton = document.querySelector(this.vgSkipButton);\n      this.skipButton.style.display = 'none';\n      this.skipButton.addEventListener('click', this.onClickSkip.bind(this));\n      this.elem.insertBefore(this.skipButton, this.elem.firstChild);\n    }\n\n    window.addEventListener('resize', () => {\n      const w = this.API.videogularElement.offsetWidth;\n      const h = this.API.videogularElement.offsetHeight;\n\n      if (this.ima.adsManager) {\n        if (this.isFullscreen) {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.FULLSCREEN);\n        } else {\n          this.ima.adsManager.resize(w, h, google.ima.ViewMode.NORMAL);\n        }\n      }\n    });\n  }\n\n  loadAds() {\n    if (this.vgCompanion) {\n      googletag.cmd.push(() => {\n        const adUnitPath = '/' + this.vgNetwork + '/' + this.vgUnitPath;\n        const slot = googletag.defineSlot(adUnitPath, this.vgCompanionSize, this.vgCompanion);\n\n        if (slot) {\n          slot.addService(googletag.companionAds());\n          slot.addService(googletag.pubads());\n          googletag.companionAds().setRefreshUnfilledSlots(true);\n          googletag.pubads().enableVideoAds();\n          googletag.enableServices();\n        }\n      });\n    }\n  }\n\n  onUpdateState(event) {\n    switch (event.type) {\n      case VgEvents.VG_PLAY:\n        if (!this.ima.adsLoaded) {\n          this.API.pause();\n          this.ima.adDisplayContainer.initialize();\n          this.requestAds(this.vgAdTagUrl);\n          this.ima.adsLoaded = true;\n        }\n\n        break;\n    }\n  }\n\n  requestAds(adTagUrl) {\n    // Show only to get computed style in pixels\n    this.show();\n    const adsRequest = new google.ima.AdsRequest();\n    const computedStyle = window.getComputedStyle(this.elem);\n    adsRequest.adTagUrl = adTagUrl;\n    adsRequest.linearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.linearAdSlotHeight = parseInt(computedStyle.height, 10);\n    adsRequest.nonLinearAdSlotWidth = parseInt(computedStyle.width, 10);\n    adsRequest.nonLinearAdSlotHeight = parseInt(computedStyle.height, 10);\n    this.ima.adsLoader.requestAds(adsRequest);\n  }\n\n  onAdsManagerLoaded(evt) {\n    this.show();\n    this.ima.adsManager = evt.getAdsManager(this.target);\n    this.processAdsManager(this.ima.adsManager);\n  } // @ts-ignore\n\n\n  processAdsManager(adsManager) {\n    const w = this.API.videogularElement.offsetWidth;\n    const h = this.API.videogularElement.offsetHeight; // Attach the pause/resume events.\n\n    this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, this.onContentPauseRequested.bind(this), false);\n    this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, this.onContentResumeRequested.bind(this), false);\n    this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED, this.onSkippableStateChanged.bind(this), false);\n    this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, this.onAllAdsComplete.bind(this), false);\n    this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE, this.onAdComplete.bind(this), false);\n    this.ima.adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdError.bind(this), false);\n    this.ima.adsManager.init(w, h, google.ima.ViewMode.NORMAL);\n    this.ima.adsManager.start();\n  }\n\n  onSkippableStateChanged() {\n    const isSkippable = this.ima.adsManager.getAdSkippableState();\n\n    if (isSkippable) {\n      this.skipButton.style.display = 'block';\n    } else {\n      this.skipButton.style.display = 'none';\n    }\n  }\n\n  onClickSkip() {\n    this.ima.adsManager.skip();\n    this.onSkipAd.emit(true);\n  }\n\n  onContentPauseRequested() {\n    this.show();\n    this.API.pause();\n    this.onAdStop.emit(true);\n  }\n\n  onContentResumeRequested() {\n    this.API.play();\n    this.onAdStart.emit(true);\n    this.hide();\n  } // @ts-ignore\n\n\n  onAdError(evt) {\n    if (this.ima.adsManager) {\n      this.ima.adsManager.destroy();\n    }\n\n    this.hide();\n    this.API.play();\n    this.onAdStop.emit(true);\n  }\n\n  onAllAdsComplete() {\n    this.hide(); // The last ad was a post-roll\n\n    if (this.ima.adsManager.getCuePoints().join().indexOf('-1') >= 0) {\n      this.API.pause(); // it was stop() in Videogular v1\n\n      this.onAdStop.emit(true);\n    }\n  }\n\n  onAdComplete() {\n    // TODO: Update view with current ad count\n    this.ima.currentAd++;\n    this.onAdStop.emit(true);\n  }\n\n  show() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_START_ADS));\n    this.displayState = 'block';\n  }\n\n  hide() {\n    window.dispatchEvent(new CustomEvent(VgEvents.VG_END_ADS));\n    this.displayState = 'none';\n  }\n\n  onContentEnded() {\n    this.ima.adsLoader.contentComplete();\n    this.onAdStop.emit(true);\n  }\n\n  onChangeFullscreen(fsState) {\n    if (!this.fsAPI.nativeFullscreen) {\n      this.isFullscreen = fsState;\n    }\n  }\n\n  onMissingGoogleImaLoader() {\n    this.hide();\n    this.API.play();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgImaAds.ɵfac = function VgImaAds_Factory(t) {\n  return new (t || VgImaAds)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI), i0.ɵɵdirectiveInject(VgFullscreenAPI));\n};\n\nVgImaAds.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgImaAds,\n  selectors: [[\"vg-ima-ads\"]],\n  hostVars: 2,\n  hostBindings: function VgImaAds_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"display\", ctx.displayState);\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\",\n    vgNetwork: \"vgNetwork\",\n    vgUnitPath: \"vgUnitPath\",\n    vgCompanion: \"vgCompanion\",\n    vgCompanionSize: \"vgCompanionSize\",\n    vgAdTagUrl: \"vgAdTagUrl\",\n    vgSkipButton: \"vgSkipButton\"\n  },\n  outputs: {\n    onAdStart: \"onAdStart\",\n    onAdStop: \"onAdStop\",\n    onSkipAd: \"onSkipAd\"\n  },\n  decls: 1,\n  vars: 0,\n  consts: [[1, \"vg-ima-ads\"]],\n  template: function VgImaAds_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n  },\n  styles: [\"vg-ima-ads{position:absolute;width:100%;height:100%;z-index:300}vg-ima-ads .vg-ima-ads{position:absolute;width:100%;height:100%;pointer-events:none}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgImaAds, [{\n    type: Component,\n    args: [{\n      selector: 'vg-ima-ads',\n      encapsulation: ViewEncapsulation.None,\n      template: `<div class=\"vg-ima-ads\"></div>`,\n      styles: [`\n        vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            z-index: 300;\n        }\n        vg-ima-ads .vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            pointer-events: none;\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }, {\n      type: VgFullscreenAPI\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    vgNetwork: [{\n      type: Input\n    }],\n    vgUnitPath: [{\n      type: Input\n    }],\n    vgCompanion: [{\n      type: Input\n    }],\n    vgCompanionSize: [{\n      type: Input\n    }],\n    vgAdTagUrl: [{\n      type: Input\n    }],\n    vgSkipButton: [{\n      type: Input\n    }],\n    onAdStart: [{\n      type: Output\n    }],\n    onAdStop: [{\n      type: Output\n    }],\n    onSkipAd: [{\n      type: Output\n    }],\n    displayState: [{\n      type: HostBinding,\n      args: ['style.display']\n    }]\n  });\n})();\n\nclass Ima {\n  constructor(imaAdsElement) {\n    this.adDisplayContainer = new google.ima.AdDisplayContainer(imaAdsElement);\n    this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n    this.adsManager = null;\n    this.adsLoaded = false;\n    this.currentAd = 0;\n  }\n\n} // tslint:disable:component-class-suffix\n\n\nclass VgOverlayPlay {\n  constructor(ref, API, fsAPI, controlsHidden) {\n    this.API = API;\n    this.fsAPI = fsAPI;\n    this.controlsHidden = controlsHidden;\n    this.isNativeFullscreen = false;\n    this.areControlsHidden = false;\n    this.subscriptions = [];\n    this.isBuffering = false;\n    this.elem = ref.nativeElement;\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.target = this.API.getMediaById(this.vgFor);\n    this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n    this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe(isBuffering => this.onUpdateBuffer(isBuffering)));\n  }\n\n  onUpdateBuffer(isBuffering) {\n    this.isBuffering = isBuffering;\n  }\n\n  onChangeFullscreen(fsState) {\n    if (this.fsAPI.nativeFullscreen) {\n      this.isNativeFullscreen = fsState;\n    }\n  }\n\n  onHideControls(hidden) {\n    this.areControlsHidden = hidden;\n  }\n\n  onClick() {\n    const state = this.getState();\n\n    switch (state) {\n      case VgStates.VG_PLAYING:\n        this.target.pause();\n        break;\n\n      case VgStates.VG_PAUSED:\n      case VgStates.VG_ENDED:\n        this.target.play();\n        break;\n    }\n  }\n\n  getState() {\n    let state = VgStates.VG_PAUSED;\n\n    if (this.target) {\n      if (this.target.state instanceof Array) {\n        for (let i = 0, l = this.target.state.length; i < l; i++) {\n          if (this.target.state[i] === VgStates.VG_PLAYING) {\n            state = VgStates.VG_PLAYING;\n            break;\n          }\n        }\n      } else {\n        state = this.target.state;\n      }\n    }\n\n    return state;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n}\n\nVgOverlayPlay.ɵfac = function VgOverlayPlay_Factory(t) {\n  return new (t || VgOverlayPlay)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI), i0.ɵɵdirectiveInject(VgFullscreenAPI), i0.ɵɵdirectiveInject(VgControlsHidden));\n};\n\nVgOverlayPlay.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: VgOverlayPlay,\n  selectors: [[\"vg-overlay-play\"]],\n  hostVars: 2,\n  hostBindings: function VgOverlayPlay_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function VgOverlayPlay_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"is-buffering\", ctx.isBuffering);\n    }\n  },\n  inputs: {\n    vgFor: \"vgFor\"\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"vg-overlay-play\"], [1, \"overlay-play-container\"]],\n  template: function VgOverlayPlay_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"native-fullscreen\", ctx.isNativeFullscreen)(\"controls-hidden\", ctx.areControlsHidden);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"vg-icon-play_arrow\", ctx.getState() !== \"playing\");\n    }\n  },\n  styles: [\"vg-overlay-play{z-index:200}vg-overlay-play.is-buffering{display:none}vg-overlay-play .vg-overlay-play{transition:all .5s;cursor:pointer;position:absolute;display:block;color:#fff;width:100%;height:100%;font-size:80px;filter:alpha(opacity=60);opacity:.6}vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden{cursor:none}vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow{pointer-events:none;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;font-size:80px}vg-overlay-play .vg-overlay-play:hover{filter:alpha(opacity=100);opacity:1}vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before{transform:scale(1.2)}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgOverlayPlay, [{\n    type: Component,\n    args: [{\n      selector: 'vg-overlay-play',\n      encapsulation: ViewEncapsulation.None,\n      template: `<div class=\"vg-overlay-play\"\n                    [class.native-fullscreen]=\"isNativeFullscreen\"\n                    [class.controls-hidden]=\"areControlsHidden\">\n                   <div class=\"overlay-play-container\"\n                        [class.vg-icon-play_arrow]=\"getState() !== 'playing'\">\n                   </div>\n               </div>`,\n      styles: [`\n        vg-overlay-play {\n            z-index: 200;\n        }\n        vg-overlay-play.is-buffering {\n            display: none;\n        }\n        vg-overlay-play .vg-overlay-play {\n            transition: all 0.5s;\n            cursor: pointer;\n            position: absolute;\n            display: block;\n            color: white;\n            width: 100%;\n            height: 100%;\n            font-size: 80px;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n        vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow {\n            pointer-events: none;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 80px;\n        }\n        vg-overlay-play .vg-overlay-play:hover {\n            filter: alpha(opacity=100);\n            opacity: 1;\n        }\n        vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before {\n            transform: scale(1.2);\n        }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }, {\n      type: VgFullscreenAPI\n    }, {\n      type: VgControlsHidden\n    }];\n  }, {\n    vgFor: [{\n      type: Input\n    }],\n    isBuffering: [{\n      type: HostBinding,\n      args: ['class.is-buffering']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n\nclass VgCoreModule {}\n\nVgCoreModule.ɵfac = function VgCoreModule_Factory(t) {\n  return new (t || VgCoreModule)();\n};\n\nVgCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgCoreModule\n});\nVgCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [VgAPI, VgFullscreenAPI, VgUtils, VgControlsHidden, VgStates, VgEvents]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgCoreModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [VgMedia, VgCuePoints, VgPlayer],\n      exports: [VgMedia, VgCuePoints, VgPlayer],\n      providers: [VgAPI, VgFullscreenAPI, VgUtils, VgControlsHidden, VgStates, VgEvents]\n    }]\n  }], null, null);\n})();\n\nclass VgImaAdsModule {}\n\nVgImaAdsModule.ɵfac = function VgImaAdsModule_Factory(t) {\n  return new (t || VgImaAdsModule)();\n};\n\nVgImaAdsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgImaAdsModule\n});\nVgImaAdsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgImaAdsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [VgImaAds],\n      exports: [VgImaAds]\n    }]\n  }], null, null);\n})();\n\nclass VgOverlayPlayModule {}\n\nVgOverlayPlayModule.ɵfac = function VgOverlayPlayModule_Factory(t) {\n  return new (t || VgOverlayPlayModule)();\n};\n\nVgOverlayPlayModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgOverlayPlayModule\n});\nVgOverlayPlayModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgOverlayPlayModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [VgOverlayPlay],\n      exports: [VgOverlayPlay]\n    }]\n  }], null, null);\n})(); // tslint:disable:directive-class-suffix\n// tslint:disable:no-output-on-prefix\n// tslint:disable:no-string-literal\n\n\nclass VgDASH {\n  constructor(ref, API) {\n    this.ref = ref;\n    this.API = API;\n    this.onGetBitrates = new EventEmitter();\n    this.subscriptions = [];\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n    this.target = this.API.getMediaById(this.vgFor);\n    this.createPlayer();\n  }\n\n  ngOnChanges(changes) {\n    if (changes['vgDash'] && changes['vgDash'].currentValue) {\n      this.createPlayer();\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.dash) {\n      this.destroyPlayer();\n    } // It's a DASH source\n\n\n    if (this.vgDash && (this.vgDash.indexOf('.mpd') > -1 || this.vgDash.indexOf('mpd-time-csf') > -1)) {\n      let drmOptions;\n\n      if (this.vgDRMLicenseServer) {\n        drmOptions = this.vgDRMLicenseServer;\n\n        if (this.vgDRMToken) {\n          for (const drmServer in drmOptions) {\n            if (drmServer.hasOwnProperty(drmServer)) {\n              drmOptions[drmServer].httpRequestHeaders = {\n                Authorization: this.vgDRMToken\n              };\n            }\n          }\n        }\n      }\n\n      this.dash = dashjs.MediaPlayer().create();\n      this.dash.getDebug().setLogToBrowserConsole(false);\n      this.dash.initialize(this.ref.nativeElement);\n      this.dash.setAutoPlay(false);\n      this.dash.on(dashjs.MediaPlayer.events.STREAM_INITIALIZED, () => {\n        const audioList = this.dash.getBitrateInfoListFor('audio');\n        const videoList = this.dash.getBitrateInfoListFor('video');\n\n        if (audioList.length > 1) {\n          audioList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          audioList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO'\n          });\n          this.onGetBitrates.emit(audioList);\n        }\n\n        if (videoList.length > 1) {\n          videoList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n          videoList.unshift({\n            qualityIndex: 0,\n            width: 0,\n            height: 0,\n            bitrate: 0,\n            mediaType: 'video',\n            label: 'AUTO'\n          });\n          this.onGetBitrates.emit(videoList);\n        }\n      });\n\n      if (drmOptions) {\n        this.dash.setProtectionData(drmOptions);\n      }\n\n      this.dash.attachSource(this.vgDash);\n    } else {\n      if (this.target) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgDash;\n      }\n    }\n  }\n\n  setBitrate(bitrate) {\n    if (this.dash) {\n      if (bitrate.qualityIndex > 0) {\n        if (this.dash.getAutoSwitchQualityFor(bitrate.mediaType)) {\n          this.dash.setAutoSwitchQualityFor(bitrate.mediaType, false);\n        }\n\n        const nextIndex = bitrate.qualityIndex - 1;\n        this.dash.setQualityFor(bitrate.mediaType, nextIndex);\n      } else {\n        this.dash.setAutoSwitchQualityFor(bitrate.mediaType, true);\n      }\n    }\n  }\n\n  destroyPlayer() {\n    if (this.dash) {\n      this.dash.reset();\n      this.dash = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n  }\n\n}\n\nVgDASH.ɵfac = function VgDASH_Factory(t) {\n  return new (t || VgDASH)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgDASH.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgDASH,\n  selectors: [[\"\", \"vgDash\", \"\"]],\n  inputs: {\n    vgDash: \"vgDash\",\n    vgDRMToken: \"vgDRMToken\",\n    vgDRMLicenseServer: \"vgDRMLicenseServer\"\n  },\n  outputs: {\n    onGetBitrates: \"onGetBitrates\"\n  },\n  exportAs: [\"vgDash\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgDASH, [{\n    type: Directive,\n    args: [{\n      selector: '[vgDash]',\n      exportAs: 'vgDash'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgDash: [{\n      type: Input\n    }],\n    vgDRMToken: [{\n      type: Input\n    }],\n    vgDRMLicenseServer: [{\n      type: Input\n    }],\n    onGetBitrates: [{\n      type: Output\n    }]\n  });\n})(); // tslint:disable:no-string-literal\n// tslint:disable:directive-class-suffix\n// tslint:disable:no-output-on-prefix\n\n\nclass VgHLS {\n  constructor(ref, API) {\n    this.ref = ref;\n    this.API = API;\n    this.vgHlsHeaders = {};\n    this.onGetBitrates = new EventEmitter();\n    this.subscriptions = [];\n  }\n\n  ngOnInit() {\n    if (this.API.isPlayerReady) {\n      this.onPlayerReady();\n    } else {\n      this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n    }\n  }\n\n  onPlayerReady() {\n    this.crossorigin = this.ref.nativeElement.getAttribute('crossorigin');\n    this.preload = this.ref.nativeElement.getAttribute('preload') !== 'none';\n    this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n\n    if (this.vgFor) {\n      this.target = this.API.getMediaById(this.vgFor);\n    } else {\n      this.target = this.API.getDefaultMedia();\n    }\n\n    this.config = {\n      autoStartLoad: this.preload\n    }; // @ts-ignore\n\n    this.config.xhrSetup = (xhr, url) => {\n      // Send cookies\n      if (this.crossorigin === 'use-credentials') {\n        xhr.withCredentials = true;\n      }\n\n      for (const key of Object.keys(this.vgHlsHeaders)) {\n        xhr.setRequestHeader(key, this.vgHlsHeaders[key]);\n      }\n    };\n\n    this.createPlayer();\n\n    if (!this.preload) {\n      this.subscriptions.push(this.API.subscriptions.play.subscribe(() => {\n        if (this.hls) {\n          this.hls.startLoad(0);\n        }\n      }));\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes['vgHls'] && changes['vgHls'].currentValue) {\n      this.createPlayer();\n    } else if (changes['vgHlsHeaders'] && changes['vgHlsHeaders'].currentValue) {// Do nothing. We don't want to create a or destroy a player if the headers change.\n    } else {\n      this.destroyPlayer();\n    }\n  }\n\n  createPlayer() {\n    if (this.hls) {\n      this.destroyPlayer();\n    } // It's a HLS source\n\n\n    if (this.vgHls && this.vgHls.indexOf('m3u8') > -1 && Hls.isSupported() && this.API.isPlayerReady) {\n      const video = this.ref.nativeElement;\n      this.hls = new Hls(this.config); // @ts-ignore\n\n      this.hls.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n        const videoList = [];\n        videoList.push({\n          qualityIndex: 0,\n          width: 0,\n          height: 0,\n          bitrate: 0,\n          mediaType: 'video',\n          label: 'AUTO'\n        });\n        data.levels.forEach((item, index) => {\n          videoList.push({\n            qualityIndex: ++index,\n            width: item.width,\n            height: item.height,\n            bitrate: item.bitrate,\n            mediaType: 'video',\n            label: item.name\n          });\n        });\n        this.onGetBitrates.emit(videoList);\n      }); // @ts-ignore\n\n      this.hls.on(Hls.Events.LEVEL_LOADED, (event, data) => {\n        this.target.isLive = data.details.live;\n      });\n      this.hls.loadSource(this.vgHls);\n      this.hls.attachMedia(video);\n    } else {\n      if (this.target && !!this.target.pause) {\n        this.target.pause();\n        this.target.seekTime(0);\n        this.ref.nativeElement.src = this.vgHls;\n      }\n    }\n  }\n\n  setBitrate(bitrate) {\n    if (this.hls) {\n      this.hls.nextLevel = bitrate.qualityIndex - 1;\n    }\n  }\n\n  destroyPlayer() {\n    if (this.hls) {\n      this.hls.destroy();\n      this.hls = null;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.destroyPlayer();\n    delete this.hls;\n  }\n\n}\n\nVgHLS.ɵfac = function VgHLS_Factory(t) {\n  return new (t || VgHLS)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(VgAPI));\n};\n\nVgHLS.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: VgHLS,\n  selectors: [[\"\", \"vgHls\", \"\"]],\n  inputs: {\n    vgHls: \"vgHls\",\n    vgHlsHeaders: \"vgHlsHeaders\"\n  },\n  outputs: {\n    onGetBitrates: \"onGetBitrates\"\n  },\n  exportAs: [\"vgHls\"],\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgHLS, [{\n    type: Directive,\n    args: [{\n      selector: '[vgHls]',\n      exportAs: 'vgHls'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: VgAPI\n    }];\n  }, {\n    vgHls: [{\n      type: Input\n    }],\n    vgHlsHeaders: [{\n      type: Input\n    }],\n    onGetBitrates: [{\n      type: Output\n    }]\n  });\n})();\n\nclass VgStreamingModule {}\n\nVgStreamingModule.ɵfac = function VgStreamingModule_Factory(t) {\n  return new (t || VgStreamingModule)();\n};\n\nVgStreamingModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: VgStreamingModule\n});\nVgStreamingModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(VgStreamingModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [VgDASH, VgHLS],\n      exports: [VgDASH, VgHLS]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-videogular\n */\n// Required for Ivy Build of Library\n// export * from './lib/buffering/vg-buffering';\n// export * from './lib/controls/vg-controls';\n// export * from './lib/controls/vg-fullscreen/vg-fullscreen';\n// export * from './lib/controls/vg-mute/vg-mute';\n// export * from './lib/controls/vg-play-pause/vg-play-pause';\n// export * from './lib/controls/vg-playback-button/vg-playback-button';\n// export * from './lib/controls/vg-volume/vg-volume';\n// export * from './lib/controls/vg-quality-selector/vg-quality-selector';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time';\n// export * from './lib/controls/vg-time-display/vg-time-display';\n// export * from './lib/controls/vg-track-selector/vg-track-selector';\n// export * from './lib/core/vg-player/vg-player';\n// export * from './lib/core/vg-media/vg-media';\n// export * from './lib/core/vg-cue-points/vg-cue-points';\n// export * from './lib/ima-ads/vg-ima-ads';\n// export * from './lib/overlay-play/vg-overlay-play';\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Ima, VgAPI, VgBuffering, VgBufferingModule, VgControls, VgControlsHidden, VgControlsModule, VgCoreModule, VgCuePoints, VgDASH, VgEvents, VgFullscreen, VgFullscreenAPI, VgHLS, VgImaAds, VgImaAdsModule, VgMedia, VgMediaElement, VgMute, VgOverlayPlay, VgOverlayPlayModule, VgPlayPause, VgPlaybackButton, VgPlayer, VgQualitySelector, VgScrubBar, VgScrubBarBufferingTime, VgScrubBarCuePoints, VgScrubBarCurrentTime, VgStates, VgStreamingModule, VgTimeDisplay, VgTrackSelector, VgUtcPipe, VgUtils, VgVolume };","map":{"version":3,"sources":["/Users/brigrimsley/Documents/GitHub/Portfolio/node_modules/ngx-videogular/fesm2015/ngx-videogular.mjs"],"names":["i0","Injectable","EventEmitter","Component","ViewEncapsulation","Input","HostBinding","NgModule","HostListener","ViewChild","Pipe","Output","Directive","ContentChildren","i2","CommonModule","Subject","fromEvent","Observable","combineLatest","timer","map","VgStates","VG_ENDED","VG_PAUSED","VG_PLAYING","VG_LOADING","ɵfac","ɵprov","type","VgAPI","constructor","medias","playerReadyEvent","isPlayerReady","onPlayerReady","fsAPI","emit","getDefaultMedia","item","getMasterMedia","master","id","vgMaster","isMasterDefined","result","getMediaById","media","play","pause","duration","$$getAllProperties","currentTime","seconds","$$setAllProperties","state","volume","playbackRate","rate","canPlay","canPlayThrough","isMetadataLoaded","isWaiting","isCompleted","isLive","isMaster","time","buffer","buffered","subscriptions","textTracks","seekTime","value","byPercent","$$seek","second","addTextTrack","label","language","$$addTextTrack","property","nMedias","Object","keys","length","current","total","left","firstMediaId","registerElement","elem","videogularElement","registerMedia","unregisterMedia","VgBuffering","ref","API","checkInterval","currentPlayPos","lastPlayPos","isBuffering","nativeElement","ngOnInit","push","subscribe","target","vgFor","bufferDetected","onUpdateBuffer","ngOnDestroy","forEach","s","unsubscribe","ElementRef","ɵcmp","args","selector","encapsulation","None","template","styles","VgBufferingModule","ɵmod","ɵinj","imports","declarations","exports","VgControlsHidden","isHiddenSubject","isHidden","asObservable","hidden","next","VgControls","isAdsPlaying","hideControls","vgAutohide","vgAutohideTime","mouseMove$","show","bind","touchStart$","onPlay","onPause","startAds","onStartAds","endAds","onEndAds","ngAfterViewInit","hide","clearTimeout","hideAsync","setTimeout","VgUtils","getZIndex","zIndex","elementZIndex","tags","document","getElementsByTagName","i","l","parseInt","window","getComputedStyle","isMobileDevice","orientation","navigator","userAgent","indexOf","isiOSDevice","match","isCordova","URL","providedIn","VgFullscreenAPI","nativeFullscreen","isFullscreen","onChangeFullscreen","init","APIs","w3","enabled","element","request","exit","onchange","onerror","newWebkit","oldWebkit","moz","ios","ms","browser","polyfill","isAvailable","fsElemDispatcher","toArray","fsChangeSubscription","onFullscreenChange","toggleFullscreen","enterElementInFullScreen","VgFullscreen","ariaValue","fsState","onClick","changeFullscreenState","onKeyDown","event","keyCode","preventDefault","VgMute","currentVolume","changeMuteState","getVolume","VgVolume","isDragging","setVolume","calculateVolume","clientX","onMouseDown","mouseDownPosX","onDrag","onStopDrag","arrowAdjustVolume","Math","max","min","mousePosX","recObj","volumeBarRef","getBoundingClientRect","volumeBarOffsetLeft","volumeBarWidth","width","vol","NgClass","static","VgPlayPause","playPause","getState","VgPlaybackButton","playbackValues","playbackIndex","updatePlaybackSpeed","getPlaybackRate","VgScrubBar","vgControlsHiddenState","hideScrubBar","vgSlider","isSeeking","wasPlaying","onHideScrubBar","seekStart","seekMove","offset","percentage","scrollWidth","seekEnd","touchEnd","getTouchOffset","offsetLeft","offsetParent","touches","pageX","onMouseDownScrubBar","$event","offsetX","onMouseMoveScrubBar","onMouseUpScrubBar","onTouchStartScrubBar","onTouchMoveScrubBar","onTouchCancelScrubBar","onTouchEndScrubBar","getPercentage","VgScrubBarBufferingTime","getBufferTime","bufferTime","end","VgScrubBarCuePoints","onLoadedMetadataCalled","cuePoints","totalCues","onTimeUpdate","loadedMetadata","onLoadedMetadata","vgCuePoints","endTime","startTime","cuePointDuration","position","percentWidth","round","$$style","updateCuePoints","ngOnChanges","changes","currentValue","ngDoCheck","NgForOf","VgScrubBarCurrentTime","NgIf","VgUtcPipe","transform","format","date","Date","ss","getUTCSeconds","mm","getUTCMinutes","hh","getUTCHours","replace","ɵpipe","name","VgTimeDisplay","vgProperty","vgFormat","getTime","t","isNaN","VgTrackSelector","subs","Array","from","children","filter","tagName","kind","selected","default","srclang","tracks","every","track","trackSelected","selectTrack","trackId","mode","VgQualitySelector","onBitrateChange","bitrates","bitrate","toString","selectBitrate","index","bitrateSelected","VgControlsModule","providers","VgEvents","VG_ABORT","VG_CAN_PLAY","VG_CAN_PLAY_THROUGH","VG_DURATION_CHANGE","VG_EMPTIED","VG_ENCRYPTED","VG_ERROR","VG_LOADED_DATA","VG_LOADED_METADATA","VG_LOAD_START","VG_PAUSE","VG_PLAY","VG_PROGRESS","VG_RATE_CHANGE","VG_SEEK","VG_SEEKED","VG_SEEKING","VG_STALLED","VG_SUSPEND","VG_TIME_UPDATE","VG_VOLUME_CHANGE","VG_WAITING","VG_LOAD","VG_ENTER","VG_EXIT","VG_START_ADS","VG_END_ADS","VgMedia","api","isBufferDetected","playAtferSync","vgMedia","nodeName","abort","durationChange","emptied","encrypted","ended","error","loadedData","loadStart","playing","progress","rateChange","seeked","seeking","stalled","suspend","timeUpdate","volumeChange","waiting","mutation","observer","domObs","MutationObserver","mutations","observe","childList","attributes","disconnect","mutationObs","onMutation","canPlayObs","onCanPlay","canPlayThroughObs","onCanPlayThrough","loadedMetadataObs","onLoadMetadata","waitingObs","onWait","progressObs","onProgress","endedObs","onComplete","playingObs","onStartPlaying","playObs","pauseObs","timeUpdateObs","volumeChangeObs","onVolumeChange","errorObs","onError","prepareSync","canPlayAll","canPlayAllSubscription","pipe","params","checkReadyState","readyState","allReady","some","syncSubscription","startSync","diff","mut","attributeName","loadMedia","removedNodes","toLowerCase","stopBufferCheck","load","playPromise","then","catch","undefined","detectChanges","Infinity","closed","startBufferCheck","_a","bufferCheck","checkBufferSubscription","newTrack","src","complete","ChangeDetectorRef","ɵdir","VgCuePoints","onEnterCuePoint","onUpdateCuePoint","onExitCuePoint","onCompleteCuePoint","cuesSubscriptions","onLoad$","onLoad","cues","onEnter$","onEnter","onExit$","onExit","VgPlayer","controlsHidden","isNativeFullscreen","areControlsHidden","onMediaReady","ngAfterContentInit","onHideControls","VgMediaElement","audioTracks","canPlayType","msClearEffects","msGetAsCastingSource","msInsertAudioEffect","activatableClassId","effectRequired","config","msSetMediaKeys","mediaKeys","msSetMediaProtectionManager","mediaProtectionManager","setMediaKeys","addEventListener","listener","useCapture","VgImaAds","onAdStart","onAdStop","onSkipAd","displayState","onContentEnded","google","onMissingGoogleImaLoader","initializations","onUpdateState","ima","adsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","loadAds","Ima","vgSkipButton","skipButton","querySelector","style","display","onClickSkip","insertBefore","firstChild","w","offsetWidth","h","offsetHeight","adsManager","resize","ViewMode","FULLSCREEN","NORMAL","vgCompanion","googletag","cmd","adUnitPath","vgNetwork","vgUnitPath","slot","defineSlot","vgCompanionSize","addService","companionAds","pubads","setRefreshUnfilledSlots","enableVideoAds","enableServices","adsLoaded","adDisplayContainer","initialize","requestAds","vgAdTagUrl","adTagUrl","adsRequest","AdsRequest","computedStyle","linearAdSlotWidth","linearAdSlotHeight","height","nonLinearAdSlotWidth","nonLinearAdSlotHeight","evt","getAdsManager","processAdsManager","AdEvent","CONTENT_PAUSE_REQUESTED","onContentPauseRequested","CONTENT_RESUME_REQUESTED","onContentResumeRequested","SKIPPABLE_STATE_CHANGED","onSkippableStateChanged","ALL_ADS_COMPLETED","onAllAdsComplete","COMPLETE","onAdComplete","start","isSkippable","getAdSkippableState","skip","destroy","getCuePoints","join","currentAd","dispatchEvent","CustomEvent","contentComplete","imaAdsElement","AdDisplayContainer","AdsLoader","VgOverlayPlay","VgCoreModule","VgImaAdsModule","VgOverlayPlayModule","VgDASH","onGetBitrates","getAttribute","createPlayer","destroyPlayer","dash","vgDash","drmOptions","vgDRMLicenseServer","vgDRMToken","drmServer","hasOwnProperty","httpRequestHeaders","Authorization","dashjs","MediaPlayer","create","getDebug","setLogToBrowserConsole","setAutoPlay","on","events","STREAM_INITIALIZED","audioList","getBitrateInfoListFor","videoList","qualityIndex","unshift","mediaType","setProtectionData","attachSource","setBitrate","getAutoSwitchQualityFor","setAutoSwitchQualityFor","nextIndex","setQualityFor","reset","exportAs","VgHLS","vgHlsHeaders","crossorigin","preload","autoStartLoad","xhrSetup","xhr","url","withCredentials","key","setRequestHeader","hls","startLoad","vgHls","Hls","isSupported","video","Events","MANIFEST_PARSED","data","levels","LEVEL_LOADED","details","live","loadSource","attachMedia","nextLevel","VgStreamingModule"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, Input, HostBinding, NgModule, HostListener, ViewChild, Pipe, Output, Directive, ContentChildren } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Subject, fromEvent, Observable, combineLatest, timer } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nclass VgStates {\n}\nVgStates.VG_ENDED = 'ended';\nVgStates.VG_PAUSED = 'paused';\nVgStates.VG_PLAYING = 'playing';\nVgStates.VG_LOADING = 'waiting';\nVgStates.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgStates, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nVgStates.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgStates });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgStates, decorators: [{\n            type: Injectable\n        }] });\n\nclass VgAPI {\n    constructor() {\n        // tslint:disable-next-line:ban-types\n        this.medias = {}; // TODO: refactor to Set<IPlayable>\n        this.playerReadyEvent = new EventEmitter(true);\n        this.isPlayerReady = false;\n    }\n    onPlayerReady(fsAPI) {\n        this.fsAPI = fsAPI;\n        this.isPlayerReady = true;\n        this.playerReadyEvent.emit(this);\n    }\n    getDefaultMedia() {\n        for (const item in this.medias) {\n            if (this.medias[item]) {\n                return this.medias[item];\n            }\n        }\n    }\n    getMasterMedia() {\n        let master;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n                master = this.medias[id];\n                break;\n            }\n        }\n        return master || this.getDefaultMedia();\n    }\n    isMasterDefined() {\n        let result = false;\n        for (const id in this.medias) {\n            if (this.medias[id].vgMaster === 'true' || this.medias[id].vgMaster === true) {\n                result = true;\n                break;\n            }\n        }\n        return result;\n    }\n    getMediaById(id = null) {\n        let media = this.medias[id];\n        if (!id || id === '*') {\n            media = this;\n        }\n        return media;\n    }\n    play() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].play();\n            }\n        }\n    }\n    pause() {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id].pause();\n            }\n        }\n    }\n    get duration() {\n        return this.$$getAllProperties('duration');\n    }\n    set currentTime(seconds) {\n        this.$$setAllProperties('currentTime', seconds);\n    }\n    get currentTime() {\n        return this.$$getAllProperties('currentTime');\n    }\n    set state(state) {\n        this.$$setAllProperties('state', state);\n    }\n    get state() {\n        return this.$$getAllProperties('state');\n    }\n    set volume(volume) {\n        this.$$setAllProperties('volume', volume);\n    }\n    get volume() {\n        return this.$$getAllProperties('volume');\n    }\n    set playbackRate(rate) {\n        this.$$setAllProperties('playbackRate', rate);\n    }\n    get playbackRate() {\n        return this.$$getAllProperties('playbackRate');\n    }\n    get canPlay() {\n        return this.$$getAllProperties('canPlay');\n    }\n    get canPlayThrough() {\n        return this.$$getAllProperties('canPlayThrough');\n    }\n    get isMetadataLoaded() {\n        return this.$$getAllProperties('isMetadataLoaded');\n    }\n    get isWaiting() {\n        return this.$$getAllProperties('isWaiting');\n    }\n    get isCompleted() {\n        return this.$$getAllProperties('isCompleted');\n    }\n    get isLive() {\n        return this.$$getAllProperties('isLive');\n    }\n    get isMaster() {\n        return this.$$getAllProperties('isMaster');\n    }\n    get time() {\n        return this.$$getAllProperties('time');\n    }\n    get buffer() {\n        return this.$$getAllProperties('buffer');\n    }\n    get buffered() {\n        return this.$$getAllProperties('buffered');\n    }\n    get subscriptions() {\n        return this.$$getAllProperties('subscriptions');\n    }\n    get textTracks() {\n        return this.$$getAllProperties('textTracks');\n    }\n    seekTime(value, byPercent = false) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$seek(this.medias[id], value, byPercent);\n            }\n        }\n    }\n    $$seek(media, value, byPercent = false) {\n        let second;\n        let duration = media.duration;\n        if (byPercent) {\n            if (this.isMasterDefined()) {\n                duration = this.getMasterMedia().duration;\n            }\n            second = value * duration / 100;\n        }\n        else {\n            second = value;\n        }\n        media.currentTime = second;\n    }\n    addTextTrack(type, label, language) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.$$addTextTrack(this.medias[id], type, label, language);\n            }\n        }\n    }\n    $$addTextTrack(media, type, label, language) {\n        media.addTextTrack(type, label, language);\n    }\n    $$getAllProperties(property) {\n        const medias = {};\n        let result;\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                medias[id] = this.medias[id];\n            }\n        }\n        const nMedias = Object.keys(medias).length;\n        switch (nMedias) {\n            case 0:\n                // Return default values until vgMedia is initialized\n                switch (property) {\n                    case 'state':\n                        result = VgStates.VG_PAUSED;\n                        break;\n                    case 'playbackRate':\n                    case 'volume':\n                        result = 1;\n                        break;\n                    case 'time':\n                        result = { current: 0, total: 0, left: 0 };\n                        break;\n                }\n                break;\n            case 1:\n                // If there's only one media element then return the plain value\n                const firstMediaId = Object.keys(medias)[0];\n                result = medias[firstMediaId][property];\n                break;\n            default:\n                // TODO: return 'master' value\n                const master = this.getMasterMedia();\n                result = medias[master.id][property];\n        }\n        return result;\n    }\n    $$setAllProperties(property, value) {\n        for (const id in this.medias) {\n            if (this.medias[id]) {\n                this.medias[id][property] = value;\n            }\n        }\n    }\n    registerElement(elem) {\n        this.videogularElement = elem;\n    }\n    registerMedia(media) {\n        this.medias[media.id] = media;\n    }\n    unregisterMedia(media) {\n        delete this.medias[media.id];\n    }\n}\nVgAPI.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgAPI, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nVgAPI.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgAPI });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgAPI, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n// tslint:disable:component-class-suffix\nclass VgBuffering {\n    constructor(ref, API) {\n        this.API = API;\n        this.checkInterval = 50;\n        this.currentPlayPos = 0;\n        this.lastPlayPos = 0;\n        this.subscriptions = [];\n        this.isBuffering = false;\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe(isBuffering => this.onUpdateBuffer(isBuffering)));\n    }\n    onUpdateBuffer(isBuffering) {\n        this.isBuffering = isBuffering;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgBuffering.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgBuffering, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgBuffering.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgBuffering, selector: \"vg-buffering\", inputs: { vgFor: \"vgFor\" }, host: { properties: { \"class.is-buffering\": \"this.isBuffering\" } }, ngImport: i0, template: `<div class=\"vg-buffering\">\n            <div class=\"bufferingContainer\">\n                <div class=\"loadingSpinner\"></div>\n            </div>\n        </div>`, isInline: true, styles: [\"vg-buffering{display:none;z-index:201}vg-buffering.is-buffering{display:block}.vg-buffering{position:absolute;display:block;width:100%;height:100%}.vg-buffering .bufferingContainer{width:100%;position:absolute;cursor:pointer;top:50%;margin-top:-50px;zoom:1;filter:alpha(opacity=60);opacity:.6}.vg-buffering .loadingSpinner{background-color:#0000;border:5px solid rgba(255,255,255,1);opacity:.9;border-top:5px solid rgba(0,0,0,0);border-left:5px solid rgba(0,0,0,0);border-radius:50px;box-shadow:0 0 35px #fff;width:50px;height:50px;margin:0 auto;-moz-animation:spin .5s infinite linear;-webkit-animation:spin .5s infinite linear}.vg-buffering .loadingSpinner .stop{-webkit-animation-play-state:paused;-moz-animation-play-state:paused}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgBuffering, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-buffering',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `<div class=\"vg-buffering\">\n            <div class=\"bufferingContainer\">\n                <div class=\"loadingSpinner\"></div>\n            </div>\n        </div>`,\n                    styles: [`\n        vg-buffering {\n            display: none;\n            z-index: 201;\n        }\n        vg-buffering.is-buffering {\n            display: block;\n        }\n\n        .vg-buffering {\n            position: absolute;\n            display: block;\n            width: 100%;\n            height: 100%;\n        }\n        .vg-buffering .bufferingContainer {\n            width: 100%;\n            position: absolute;\n            cursor: pointer;\n            top: 50%;\n            margin-top: -50px;\n            zoom: 1;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        /* Loading Spinner\n        * http://www.alessioatzeni.com/blog/css3-loading-animation-loop/\n        */\n        .vg-buffering .loadingSpinner {\n            background-color: rgba(0, 0, 0, 0);\n            border: 5px solid rgba(255, 255, 255, 1);\n            opacity: .9;\n            border-top: 5px solid rgba(0, 0, 0, 0);\n            border-left: 5px solid rgba(0, 0, 0, 0);\n            border-radius: 50px;\n            box-shadow: 0 0 35px #FFFFFF;\n            width: 50px;\n            height: 50px;\n            margin: 0 auto;\n            -moz-animation: spin .5s infinite linear;\n            -webkit-animation: spin .5s infinite linear;\n        }\n        .vg-buffering .loadingSpinner .stop {\n            -webkit-animation-play-state: paused;\n            -moz-animation-play-state: paused;\n        }\n        @-moz-keyframes spin {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(360deg);\n            }\n        }\n        @-moz-keyframes spinoff {\n            0% {\n                -moz-transform: rotate(0deg);\n            }\n            100% {\n                -moz-transform: rotate(-360deg);\n            }\n        }\n        @-webkit-keyframes spin {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(360deg);\n            }\n        }\n        @-webkit-keyframes spinoff {\n            0% {\n                -webkit-transform: rotate(0deg);\n            }\n            100% {\n                -webkit-transform: rotate(-360deg);\n            }\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], isBuffering: [{\n                type: HostBinding,\n                args: ['class.is-buffering']\n            }] } });\n\nclass VgBufferingModule {\n}\nVgBufferingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgBufferingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVgBufferingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgBufferingModule, declarations: [VgBuffering], imports: [CommonModule], exports: [VgBuffering] });\nVgBufferingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgBufferingModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgBufferingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        VgBuffering\n                    ],\n                    exports: [\n                        VgBuffering\n                    ]\n                }]\n        }] });\n\nclass VgControlsHidden {\n    constructor() {\n        this.isHiddenSubject = new Subject();\n        this.isHidden = this.isHiddenSubject.asObservable();\n    }\n    state(hidden) {\n        this.isHiddenSubject.next(hidden);\n    }\n}\nVgControlsHidden.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControlsHidden, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nVgControlsHidden.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControlsHidden });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControlsHidden, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n// tslint:disable:component-class-suffix\nclass VgControls {\n    constructor(API, ref, hidden) {\n        this.API = API;\n        this.ref = ref;\n        this.hidden = hidden;\n        this.isAdsPlaying = 'initial';\n        this.hideControls = false;\n        this.vgAutohide = false;\n        this.vgAutohideTime = 3;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        this.mouseMove$ = fromEvent(this.API.videogularElement, 'mousemove');\n        this.subscriptions.push(this.mouseMove$.subscribe(this.show.bind(this)));\n        this.touchStart$ = fromEvent(this.API.videogularElement, 'touchstart');\n        this.subscriptions.push(this.touchStart$.subscribe(this.show.bind(this)));\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onPlay.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.pause.subscribe(this.onPause.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.startAds.subscribe(this.onStartAds.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.endAds.subscribe(this.onEndAds.bind(this)));\n    }\n    ngAfterViewInit() {\n        if (this.vgAutohide) {\n            this.hide();\n        }\n        else {\n            this.show();\n        }\n    }\n    onPlay() {\n        if (this.vgAutohide) {\n            this.hide();\n        }\n    }\n    onPause() {\n        clearTimeout(this.timer);\n        this.hideControls = false;\n        this.hidden.state(false);\n    }\n    onStartAds() {\n        this.isAdsPlaying = 'none';\n    }\n    onEndAds() {\n        this.isAdsPlaying = 'initial';\n    }\n    hide() {\n        if (this.vgAutohide) {\n            clearTimeout(this.timer);\n            this.hideAsync();\n        }\n    }\n    show() {\n        clearTimeout(this.timer);\n        this.hideControls = false;\n        this.hidden.state(false);\n        if (this.vgAutohide) {\n            this.hideAsync();\n        }\n    }\n    hideAsync() {\n        if (this.API.state === VgStates.VG_PLAYING) {\n            this.timer = setTimeout(() => {\n                this.hideControls = true;\n                this.hidden.state(true);\n            }, this.vgAutohideTime * 1000);\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgControls.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControls, deps: [{ token: VgAPI }, { token: i0.ElementRef }, { token: VgControlsHidden }], target: i0.ɵɵFactoryTarget.Component });\nVgControls.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgControls, selector: \"vg-controls\", inputs: { vgFor: \"vgFor\", vgAutohide: \"vgAutohide\", vgAutohideTime: \"vgAutohideTime\" }, host: { properties: { \"style.pointer-events\": \"this.isAdsPlaying\", \"class.hide\": \"this.hideControls\" } }, ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\"vg-controls{position:absolute;display:flex;width:100%;height:50px;z-index:300;bottom:0;background-color:#00000080;transition:bottom 1s}vg-controls.hide{bottom:-50px}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControls, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-controls',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `<ng-content></ng-content>`,\n                    styles: [`\n        vg-controls {\n            position: absolute;\n            display: flex;\n            width: 100%;\n            height: 50px;\n            z-index: 300;\n            bottom: 0;\n            background-color: rgba(0, 0, 0, 0.5);\n            -webkit-transition: bottom 1s;\n            -khtml-transition: bottom 1s;\n            -moz-transition: bottom 1s;\n            -ms-transition: bottom 1s;\n            transition: bottom 1s;\n        }\n        vg-controls.hide {\n            bottom: -50px;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: VgAPI }, { type: i0.ElementRef }, { type: VgControlsHidden }]; }, propDecorators: { isAdsPlaying: [{\n                type: HostBinding,\n                args: ['style.pointer-events']\n            }], hideControls: [{\n                type: HostBinding,\n                args: ['class.hide']\n            }], vgFor: [{\n                type: Input\n            }], vgAutohide: [{\n                type: Input\n            }], vgAutohideTime: [{\n                type: Input\n            }] } });\n\nclass VgUtils {\n    /**\n     * Inspired by Paul Irish\n     * https://gist.github.com/paulirish/211209\n     * @returns z-Index\n     */\n    static getZIndex() {\n        let zIndex = 1;\n        let elementZIndex;\n        const tags = document.getElementsByTagName('*');\n        for (let i = 0, l = tags.length; i < l; i++) {\n            elementZIndex = parseInt(window.getComputedStyle(tags[i])['z-index'], 10);\n            if (elementZIndex > zIndex) {\n                zIndex = elementZIndex + 1;\n            }\n        }\n        return zIndex;\n    }\n    // Very simple mobile detection, not 100% reliable\n    static isMobileDevice() {\n        return (typeof window.orientation !== 'undefined') || (navigator.userAgent.indexOf('IEMobile') !== -1);\n    }\n    static isiOSDevice() {\n        return (navigator.userAgent.match(/ip(hone|ad|od)/i) && !navigator.userAgent.match(/(iemobile)[\\/\\s]?([\\w\\.]*)/i));\n    }\n    static isCordova() {\n        return document.URL.indexOf('http://') === -1 && document.URL.indexOf('https://') === -1;\n    }\n}\nVgUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgUtils, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nVgUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgUtils, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgUtils, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass VgFullscreenAPI {\n    constructor() {\n        this.nativeFullscreen = true;\n        this.isFullscreen = false;\n        this.onChangeFullscreen = new EventEmitter();\n    }\n    init(elem, medias) {\n        this.videogularElement = elem;\n        this.medias = medias;\n        const APIs = {\n            w3: {\n                enabled: 'fullscreenEnabled',\n                element: 'fullscreenElement',\n                request: 'requestFullscreen',\n                exit: 'exitFullscreen',\n                onchange: 'fullscreenchange',\n                onerror: 'fullscreenerror'\n            },\n            newWebkit: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitRequestFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror'\n            },\n            oldWebkit: {\n                enabled: 'webkitIsFullScreen',\n                element: 'webkitCurrentFullScreenElement',\n                request: 'webkitRequestFullScreen',\n                exit: 'webkitCancelFullScreen',\n                onchange: 'webkitfullscreenchange',\n                onerror: 'webkitfullscreenerror'\n            },\n            moz: {\n                enabled: 'mozFullScreen',\n                element: 'mozFullScreenElement',\n                request: 'mozRequestFullScreen',\n                exit: 'mozCancelFullScreen',\n                onchange: 'mozfullscreenchange',\n                onerror: 'mozfullscreenerror'\n            },\n            ios: {\n                enabled: 'webkitFullscreenEnabled',\n                element: 'webkitFullscreenElement',\n                request: 'webkitEnterFullscreen',\n                exit: 'webkitExitFullscreen',\n                onchange: 'webkitendfullscreen',\n                onerror: 'webkitfullscreenerror'\n            },\n            ms: {\n                enabled: 'msFullscreenEnabled',\n                element: 'msFullscreenElement',\n                request: 'msRequestFullscreen',\n                exit: 'msExitFullscreen',\n                onchange: 'MSFullscreenChange',\n                onerror: 'MSFullscreenError'\n            }\n        };\n        for (const browser in APIs) {\n            if (APIs[browser].enabled in document) {\n                this.polyfill = APIs[browser];\n                break;\n            }\n        }\n        if (VgUtils.isiOSDevice()) {\n            this.polyfill = APIs.ios;\n        }\n        this.isAvailable = (this.polyfill != null);\n        if (this.polyfill == null) {\n            return;\n        }\n        let fsElemDispatcher;\n        switch (this.polyfill.onchange) {\n            // Mozilla dispatches the fullscreen change event from document, not the element\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=724816#c3\n            case 'mozfullscreenchange':\n                fsElemDispatcher = document;\n                break;\n            // iOS dispatches the fullscreen change event from video element\n            case 'webkitendfullscreen':\n                fsElemDispatcher = this.medias.toArray()[0].elem;\n                break;\n            // HTML5 implementation dispatches the fullscreen change event from the element\n            default:\n                fsElemDispatcher = elem;\n        }\n        this.fsChangeSubscription = fromEvent(fsElemDispatcher, this.polyfill.onchange).subscribe(() => {\n            this.onFullscreenChange();\n        });\n    }\n    onFullscreenChange() {\n        this.isFullscreen = !!document[this.polyfill.element];\n        this.onChangeFullscreen.emit(this.isFullscreen);\n    }\n    toggleFullscreen(element = null) {\n        if (this.isFullscreen) {\n            this.exit();\n        }\n        else {\n            this.request(element);\n        }\n    }\n    request(elem) {\n        if (!elem) {\n            elem = this.videogularElement;\n        }\n        this.isFullscreen = true;\n        this.onChangeFullscreen.emit(true);\n        // Perform native full screen support\n        if (this.isAvailable && this.nativeFullscreen) {\n            // Fullscreen for mobile devices\n            if (VgUtils.isMobileDevice()) {\n                // We should make fullscreen the video object if it doesn't have native fullscreen support\n                // Fallback! We can't set vg-player on fullscreen, only video/audio objects\n                if ((!this.polyfill.enabled && elem === this.videogularElement) || VgUtils.isiOSDevice()) {\n                    elem = this.medias.toArray()[0].elem;\n                }\n                this.enterElementInFullScreen(elem);\n            }\n            else {\n                this.enterElementInFullScreen(this.videogularElement);\n            }\n        }\n    }\n    enterElementInFullScreen(elem) {\n        elem[this.polyfill.request]();\n    }\n    exit() {\n        this.isFullscreen = false;\n        this.onChangeFullscreen.emit(false);\n        // Exit from native fullscreen\n        if (this.isAvailable && this.nativeFullscreen) {\n            document[this.polyfill.exit]();\n        }\n    }\n}\nVgFullscreenAPI.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgFullscreenAPI, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nVgFullscreenAPI.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgFullscreenAPI });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgFullscreenAPI, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n// tslint:disable:component-class-suffix\n// tslint:disable:ban-types\nclass VgFullscreen {\n    constructor(ref, API, fsAPI) {\n        this.API = API;\n        this.fsAPI = fsAPI;\n        this.isFullscreen = false;\n        this.subscriptions = [];\n        this.ariaValue = 'normal mode';\n        this.elem = ref.nativeElement;\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    onChangeFullscreen(fsState) {\n        this.ariaValue = fsState ? 'fullscren mode' : 'normal mode';\n        this.isFullscreen = fsState;\n    }\n    onClick() {\n        this.changeFullscreenState();\n    }\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.changeFullscreenState();\n        }\n    }\n    changeFullscreenState() {\n        let element = this.target;\n        if (this.target instanceof VgAPI) {\n            element = null;\n        }\n        this.fsAPI.toggleFullscreen(element);\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgFullscreen.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgFullscreen, deps: [{ token: i0.ElementRef }, { token: VgAPI }, { token: VgFullscreenAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgFullscreen.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgFullscreen, selector: \"vg-fullscreen\", host: { listeners: { \"click\": \"onClick()\", \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n        <div class=\"icon\"\n             [class.vg-icon-fullscreen]=\"!isFullscreen\"\n             [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"fullscreen button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`, isInline: true, styles: [\"vg-fullscreen{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px}vg-fullscreen .icon{pointer-events:none}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgFullscreen, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-fullscreen',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div class=\"icon\"\n             [class.vg-icon-fullscreen]=\"!isFullscreen\"\n             [class.vg-icon-fullscreen_exit]=\"isFullscreen\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"fullscreen button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n                    styles: [`\n        vg-fullscreen {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n\n        vg-fullscreen .icon {\n            pointer-events: none;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }, { type: VgFullscreenAPI }]; }, propDecorators: { onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgMute {\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.ariaValue = 'unmuted';\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.currentVolume = this.target.volume;\n    }\n    onClick() {\n        this.changeMuteState();\n    }\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.changeMuteState();\n        }\n    }\n    changeMuteState() {\n        const volume = this.getVolume();\n        if (volume === 0) {\n            if (this.target.volume === 0 && this.currentVolume === 0) {\n                this.currentVolume = 1;\n            }\n            this.target.volume = this.currentVolume;\n        }\n        else {\n            this.currentVolume = volume;\n            this.target.volume = 0;\n        }\n    }\n    getVolume() {\n        const volume = this.target ? this.target.volume : 0;\n        this.ariaValue = volume ? 'unmuted' : 'muted';\n        return volume;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgMute.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgMute, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgMute.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgMute, selector: \"vg-mute\", inputs: { vgFor: \"vgFor\" }, host: { listeners: { \"click\": \"onClick()\", \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n        <div class=\"icon\"\n             [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\n             [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\n             [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\n             [class.vg-icon-volume_off]=\"getVolume() === 0\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"mute button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`, isInline: true, styles: [\"vg-mute{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px}vg-mute .icon{pointer-events:none}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgMute, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-mute',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div class=\"icon\"\n             [class.vg-icon-volume_up]=\"getVolume() >= 0.75\"\n             [class.vg-icon-volume_down]=\"getVolume() >= 0.25 && getVolume() < 0.75\"\n             [class.vg-icon-volume_mute]=\"getVolume() > 0 && getVolume() < 0.25\"\n             [class.vg-icon-volume_off]=\"getVolume() === 0\"\n             tabindex=\"0\"\n             role=\"button\"\n             aria-label=\"mute button\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n                    styles: [`\n        vg-mute {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-mute .icon {\n            pointer-events: none;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgVolume {\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.isDragging = false;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.ariaValue = this.getVolume() * 100;\n    }\n    onClick(event) {\n        this.setVolume(this.calculateVolume(event.clientX));\n    }\n    onMouseDown(event) {\n        this.mouseDownPosX = event.clientX;\n        this.isDragging = true;\n    }\n    onDrag(event) {\n        if (this.isDragging) {\n            this.setVolume(this.calculateVolume(event.clientX));\n        }\n    }\n    onStopDrag(event) {\n        if (this.isDragging) {\n            this.isDragging = false;\n            if (this.mouseDownPosX === event.clientX) {\n                this.setVolume(this.calculateVolume(event.clientX));\n            }\n        }\n    }\n    arrowAdjustVolume(event) {\n        if (event.keyCode === 38 || event.keyCode === 39) {\n            event.preventDefault();\n            this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 + 10)));\n        }\n        else if (event.keyCode === 37 || event.keyCode === 40) {\n            event.preventDefault();\n            this.setVolume(Math.max(0, Math.min(100, this.getVolume() * 100 - 10)));\n        }\n    }\n    calculateVolume(mousePosX) {\n        const recObj = this.volumeBarRef.nativeElement.getBoundingClientRect();\n        const volumeBarOffsetLeft = recObj.left;\n        const volumeBarWidth = recObj.width;\n        return (mousePosX - volumeBarOffsetLeft) / volumeBarWidth * 100;\n    }\n    setVolume(vol) {\n        this.target.volume = Math.max(0, Math.min(1, vol / 100));\n        this.ariaValue = this.target.volume * 100;\n    }\n    getVolume() {\n        return this.target ? this.target.volume : 0;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\nVgVolume.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgVolume, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgVolume.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgVolume, selector: \"vg-volume\", inputs: { vgFor: \"vgFor\" }, host: { listeners: { \"document:mousemove\": \"onDrag($event)\", \"document:mouseup\": \"onStopDrag($event)\", \"keydown\": \"arrowAdjustVolume($event)\" } }, viewQueries: [{ propertyName: \"volumeBarRef\", first: true, predicate: [\"volumeBar\"], descendants: true, static: true }], ngImport: i0, template: `\n        <div\n            #volumeBar\n            class=\"volumeBar\"\n            tabindex=\"0\"\n            role=\"slider\"\n            aria-label=\"volume level\"\n            aria-level=\"polite\"\n            [attr.aria-valuenow]=\"ariaValue\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-orientation=\"horizontal\"\n            [attr.aria-valuetext]=\"ariaValue + '%'\"\n            (click)=\"onClick($event)\"\n            (mousedown)=\"onMouseDown($event)\">\n            <div class=\"volumeBackground\" [ngClass]=\"{dragging: isDragging}\">\n                <div class=\"volumeValue\" [style.width]=\"(getVolume() * (100-15)) + '%'\"></div>\n                <div class=\"volumeKnob\" [style.left]=\"(getVolume() * (100-15)) + '%'\"></div>\n            </div>\n        </div>\n    `, isInline: true, styles: [\"vg-volume{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:100px;cursor:pointer;color:#fff;line-height:50px}vg-volume .volumeBar{position:relative;display:flex;flex-grow:1;align-items:center}vg-volume .volumeBackground{display:flex;flex-grow:1;height:5px;pointer-events:none;background-color:#333}vg-volume .volumeValue{display:flex;height:5px;pointer-events:none;background-color:#fff;transition:all .2s ease-out}vg-volume .volumeKnob{position:absolute;width:15px;height:15px;left:0;top:50%;transform:translateY(-50%);border-radius:15px;pointer-events:none;background-color:#fff;transition:all .2s ease-out}vg-volume .volumeBackground.dragging .volumeValue,vg-volume .volumeBackground.dragging .volumeKnob{transition:none}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgVolume, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-volume',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div\n            #volumeBar\n            class=\"volumeBar\"\n            tabindex=\"0\"\n            role=\"slider\"\n            aria-label=\"volume level\"\n            aria-level=\"polite\"\n            [attr.aria-valuenow]=\"ariaValue\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-orientation=\"horizontal\"\n            [attr.aria-valuetext]=\"ariaValue + '%'\"\n            (click)=\"onClick($event)\"\n            (mousedown)=\"onMouseDown($event)\">\n            <div class=\"volumeBackground\" [ngClass]=\"{dragging: isDragging}\">\n                <div class=\"volumeValue\" [style.width]=\"(getVolume() * (100-15)) + '%'\"></div>\n                <div class=\"volumeKnob\" [style.left]=\"(getVolume() * (100-15)) + '%'\"></div>\n            </div>\n        </div>\n    `,\n                    styles: [\n                        `\n        vg-volume {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 100px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-volume .volumeBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n        }\n        vg-volume .volumeBackground {\n            display: flex;\n            flex-grow: 1;\n            height: 5px;\n            pointer-events: none;\n            background-color: #333;\n        }\n        vg-volume .volumeValue {\n            display: flex;\n            height: 5px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeKnob {\n            position: absolute;\n            width: 15px; height: 15px;\n            left: 0; top: 50%;\n            transform: translateY(-50%);\n            border-radius: 15px;\n            pointer-events: none;\n            background-color: #FFF;\n            transition:all 0.2s ease-out;\n        }\n        vg-volume .volumeBackground.dragging .volumeValue,\n        vg-volume .volumeBackground.dragging .volumeKnob {\n            transition: none;\n        }\n    `\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], volumeBarRef: [{\n                type: ViewChild,\n                args: ['volumeBar', { static: true }]\n            }], onDrag: [{\n                type: HostListener,\n                args: ['document:mousemove', ['$event']]\n            }], onStopDrag: [{\n                type: HostListener,\n                args: ['document:mouseup', ['$event']]\n            }], arrowAdjustVolume: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgPlayPause {\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.ariaValue = VgStates.VG_PAUSED;\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    onClick() {\n        this.playPause();\n    }\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.playPause();\n        }\n    }\n    playPause() {\n        const state = this.getState();\n        switch (state) {\n            case VgStates.VG_PLAYING:\n                this.target.pause();\n                break;\n            case VgStates.VG_PAUSED:\n            case VgStates.VG_ENDED:\n                this.target.play();\n                break;\n        }\n    }\n    getState() {\n        this.ariaValue = this.target ? this.target.state : VgStates.VG_PAUSED;\n        return this.ariaValue;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgPlayPause.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgPlayPause, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgPlayPause.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgPlayPause, selector: \"vg-play-pause\", inputs: { vgFor: \"vgFor\" }, host: { listeners: { \"click\": \"onClick()\", \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n        <div class=\"icon\"\n             [class.vg-icon-pause]=\"getState() === 'playing'\"\n             [class.vg-icon-play_arrow]=\"getState() === 'paused' || getState() === 'ended'\"\n             tabindex=\"0\"\n             role=\"button\"\n             [attr.aria-label]=\"getState() === 'paused'?'play':'pause'\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`, isInline: true, styles: [\"vg-play-pause{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px}vg-play-pause .icon{pointer-events:none}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgPlayPause, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-play-pause',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div class=\"icon\"\n             [class.vg-icon-pause]=\"getState() === 'playing'\"\n             [class.vg-icon-play_arrow]=\"getState() === 'paused' || getState() === 'ended'\"\n             tabindex=\"0\"\n             role=\"button\"\n             [attr.aria-label]=\"getState() === 'paused'?'play':'pause'\"\n             [attr.aria-valuetext]=\"ariaValue\">\n        </div>`,\n                    styles: [`\n        vg-play-pause {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -khtml-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-play-pause .icon {\n            pointer-events: none;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgPlaybackButton {\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.ariaValue = 1;\n        this.elem = ref.nativeElement;\n        this.playbackValues = ['0.5', '1.0', '1.5', '2.0'];\n        this.playbackIndex = 1;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    onClick() {\n        this.updatePlaybackSpeed();\n    }\n    onKeyDown(event) {\n        // On press Enter (13) or Space (32)\n        if (event.keyCode === 13 || event.keyCode === 32) {\n            event.preventDefault();\n            this.updatePlaybackSpeed();\n        }\n    }\n    updatePlaybackSpeed() {\n        this.playbackIndex = ++this.playbackIndex % this.playbackValues.length;\n        if (this.target instanceof VgAPI) {\n            this.target.playbackRate = (this.playbackValues[this.playbackIndex]);\n        }\n        else {\n            this.target.playbackRate[this.vgFor] = (this.playbackValues[this.playbackIndex]);\n        }\n    }\n    getPlaybackRate() {\n        this.ariaValue = this.target ? this.target.playbackRate : 1.0;\n        return this.ariaValue;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgPlaybackButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgPlaybackButton, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgPlaybackButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgPlaybackButton, selector: \"vg-playback-button\", inputs: { vgFor: \"vgFor\", playbackValues: \"playbackValues\" }, host: { listeners: { \"click\": \"onClick()\", \"keydown\": \"onKeyDown($event)\" } }, ngImport: i0, template: `\n    <span class=\"button\"\n          tabindex=\"0\"\n          role=\"button\"\n          aria-label=\"playback speed button\"\n          [attr.aria-valuetext]=\"ariaValue\">\n        {{getPlaybackRate()}}x\n    </span>`, isInline: true, styles: [\"vg-playback-button{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:50px;cursor:pointer;color:#fff;line-height:50px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}vg-playback-button .button{display:flex;align-items:center;justify-content:center;width:50px}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgPlaybackButton, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-playback-button',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n    <span class=\"button\"\n          tabindex=\"0\"\n          role=\"button\"\n          aria-label=\"playback speed button\"\n          [attr.aria-valuetext]=\"ariaValue\">\n        {{getPlaybackRate()}}x\n    </span>`,\n                    styles: [`\n        vg-playback-button {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n        vg-playback-button .button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 50px;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], playbackValues: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgScrubBar {\n    constructor(ref, API, vgControlsHiddenState) {\n        this.API = API;\n        this.hideScrubBar = false;\n        this.vgSlider = true;\n        this.isSeeking = false;\n        this.wasPlaying = false;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.subscriptions.push(vgControlsHiddenState.isHidden.subscribe(hide => this.onHideScrubBar(hide)));\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    seekStart() {\n        if (this.target.canPlay) {\n            this.isSeeking = true;\n            if (this.target.state === VgStates.VG_PLAYING) {\n                this.wasPlaying = true;\n            }\n            this.target.pause();\n        }\n    }\n    seekMove(offset) {\n        if (this.isSeeking) {\n            const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n            this.target.time.current = percentage * this.target.time.total / 100;\n            this.target.seekTime(percentage, true);\n        }\n    }\n    seekEnd(offset) {\n        this.isSeeking = false;\n        if (this.target.canPlay) {\n            const percentage = Math.max(Math.min(offset * 100 / this.elem.scrollWidth, 99.9), 0);\n            this.target.seekTime(percentage, true);\n            if (this.wasPlaying) {\n                this.wasPlaying = false;\n                this.target.play();\n            }\n        }\n    }\n    touchEnd() {\n        this.isSeeking = false;\n        if (this.wasPlaying) {\n            this.wasPlaying = false;\n            this.target.play();\n        }\n    }\n    getTouchOffset(event) {\n        let offsetLeft = 0;\n        let element = event.target;\n        while (element) {\n            offsetLeft += element.offsetLeft;\n            element = element.offsetParent;\n        }\n        return event.touches[0].pageX - offsetLeft;\n    }\n    onMouseDownScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive) {\n                if (!this.vgSlider) {\n                    this.seekEnd($event.offsetX);\n                }\n                else {\n                    this.seekStart();\n                }\n            }\n        }\n    }\n    onMouseMoveScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.seekMove($event.offsetX);\n            }\n        }\n    }\n    onMouseUpScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.seekEnd($event.offsetX);\n            }\n        }\n    }\n    onTouchStartScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive) {\n                if (!this.vgSlider) {\n                    this.seekEnd(this.getTouchOffset($event));\n                }\n                else {\n                    this.seekStart();\n                }\n            }\n        }\n    }\n    onTouchMoveScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.seekMove(this.getTouchOffset($event));\n            }\n        }\n    }\n    // @ts-ignore\n    onTouchCancelScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.touchEnd();\n            }\n        }\n    }\n    // @ts-ignore\n    onTouchEndScrubBar($event) {\n        if (this.target) {\n            if (!this.target.isLive && this.vgSlider && this.isSeeking) {\n                this.touchEnd();\n            }\n        }\n    }\n    arrowAdjustVolume(event) {\n        if (this.target) {\n            if (event.keyCode === 38 || event.keyCode === 39) {\n                event.preventDefault();\n                this.target.seekTime((this.target.time.current + 5000) / 1000, false);\n            }\n            else if (event.keyCode === 37 || event.keyCode === 40) {\n                event.preventDefault();\n                this.target.seekTime((this.target.time.current - 5000) / 1000, false);\n            }\n        }\n    }\n    getPercentage() {\n        return this.target ? ((this.target.time.current * 100) / this.target.time.total) + '%' : '0%';\n    }\n    onHideScrubBar(hide) {\n        this.hideScrubBar = hide;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgScrubBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBar, deps: [{ token: i0.ElementRef }, { token: VgAPI }, { token: VgControlsHidden }], target: i0.ɵɵFactoryTarget.Component });\nVgScrubBar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgScrubBar, selector: \"vg-scrub-bar\", inputs: { vgFor: \"vgFor\", vgSlider: \"vgSlider\" }, host: { listeners: { \"mousedown\": \"onMouseDownScrubBar($event)\", \"document:mousemove\": \"onMouseMoveScrubBar($event)\", \"document:mouseup\": \"onMouseUpScrubBar($event)\", \"touchstart\": \"onTouchStartScrubBar($event)\", \"document:touchmove\": \"onTouchMoveScrubBar($event)\", \"document:touchcancel\": \"onTouchCancelScrubBar($event)\", \"document:touchend\": \"onTouchEndScrubBar($event)\", \"keydown\": \"arrowAdjustVolume($event)\" }, properties: { \"class.hide\": \"this.hideScrubBar\" } }, ngImport: i0, template: `\n        <div class=\"scrubBar\"\n             tabindex=\"0\"\n             role=\"slider\"\n             aria-label=\"scrub bar\"\n             aria-level=\"polite\"\n             [attr.aria-valuenow]=\"getPercentage()\"\n             aria-valuemin=\"0\"\n             aria-valuemax=\"100\"\n             [attr.aria-valuetext]=\"getPercentage() + '%'\">\n            <ng-content></ng-content>\n        </div>\n    `, isInline: true, styles: [\"vg-scrub-bar{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;position:absolute;width:100%;height:5px;bottom:50px;margin:0;cursor:pointer;align-items:center;background:rgba(0,0,0,.75);z-index:250;transition:bottom 1s,opacity .5s}vg-scrub-bar .scrubBar{position:relative;display:flex;flex-grow:1;align-items:center;height:100%}vg-controls vg-scrub-bar{position:relative;bottom:0;background:transparent;height:50px;flex-grow:1;flex-basis:0;margin:0 10px;transition:initial}vg-scrub-bar.hide{bottom:0;opacity:0}vg-controls vg-scrub-bar.hide{bottom:initial;opacity:initial}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-scrub-bar',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div class=\"scrubBar\"\n             tabindex=\"0\"\n             role=\"slider\"\n             aria-label=\"scrub bar\"\n             aria-level=\"polite\"\n             [attr.aria-valuenow]=\"getPercentage()\"\n             aria-valuemin=\"0\"\n             aria-valuemax=\"100\"\n             [attr.aria-valuetext]=\"getPercentage() + '%'\">\n            <ng-content></ng-content>\n        </div>\n    `,\n                    styles: [`\n        vg-scrub-bar {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            position: absolute;\n            width: 100%;\n            height: 5px;\n            bottom: 50px;\n            margin: 0;\n            cursor: pointer;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.75);\n            z-index: 250;\n            -webkit-transition: bottom 1s, opacity 0.5s;\n            -khtml-transition: bottom 1s, opacity 0.5s;\n            -moz-transition: bottom 1s, opacity 0.5s;\n            -ms-transition: bottom 1s, opacity 0.5s;\n            transition: bottom 1s, opacity 0.5s;\n        }\n        vg-scrub-bar .scrubBar {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n            height: 100%;\n        }\n        vg-controls vg-scrub-bar {\n            position: relative;\n            bottom: 0;\n            background: transparent;\n            height: 50px;\n            flex-grow: 1;\n            flex-basis: 0;\n            margin: 0 10px;\n            -webkit-transition: initial;\n            -khtml-transition: initial;\n            -moz-transition: initial;\n            -ms-transition: initial;\n            transition: initial;\n        }\n        vg-scrub-bar.hide {\n            bottom: 0;\n            opacity: 0;\n        }\n        vg-controls vg-scrub-bar.hide {\n            bottom: initial;\n            opacity: initial;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }, { type: VgControlsHidden }]; }, propDecorators: { hideScrubBar: [{\n                type: HostBinding,\n                args: ['class.hide']\n            }], vgFor: [{\n                type: Input\n            }], vgSlider: [{\n                type: Input\n            }], onMouseDownScrubBar: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }], onMouseMoveScrubBar: [{\n                type: HostListener,\n                args: ['document:mousemove', ['$event']]\n            }], onMouseUpScrubBar: [{\n                type: HostListener,\n                args: ['document:mouseup', ['$event']]\n            }], onTouchStartScrubBar: [{\n                type: HostListener,\n                args: ['touchstart', ['$event']]\n            }], onTouchMoveScrubBar: [{\n                type: HostListener,\n                args: ['document:touchmove', ['$event']]\n            }], onTouchCancelScrubBar: [{\n                type: HostListener,\n                args: ['document:touchcancel', ['$event']]\n            }], onTouchEndScrubBar: [{\n                type: HostListener,\n                args: ['document:touchend', ['$event']]\n            }], arrowAdjustVolume: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgScrubBarBufferingTime {\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    getBufferTime() {\n        let bufferTime = '0%';\n        if (this.target && this.target.buffer && this.target.buffered.length) {\n            if (this.target.time.total === 0) {\n                bufferTime = '0%';\n            }\n            else {\n                bufferTime = ((this.target.buffer.end / this.target.time.total) * 100) + '%';\n            }\n        }\n        return bufferTime;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgScrubBarBufferingTime.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBarBufferingTime, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgScrubBarBufferingTime.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgScrubBarBufferingTime, selector: \"vg-scrub-bar-buffering-time\", inputs: { vgFor: \"vgFor\" }, ngImport: i0, template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`, isInline: true, styles: [\"vg-scrub-bar-buffering-time{display:flex;width:100%;height:5px;pointer-events:none;position:absolute}vg-scrub-bar-buffering-time .background{background-color:#ffffff4d}vg-controls vg-scrub-bar-buffering-time{position:absolute;top:calc(50% - 3px)}vg-controls vg-scrub-bar-buffering-time .background{border-radius:2px}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBarBufferingTime, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-scrub-bar-buffering-time',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `<div class=\"background\" [style.width]=\"getBufferTime()\"></div>`,\n                    styles: [`\n        vg-scrub-bar-buffering-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-buffering-time .background {\n            background-color: rgba(255, 255, 255, 0.3);\n        }\n        vg-controls vg-scrub-bar-buffering-time {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n        vg-controls vg-scrub-bar-buffering-time .background {\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }] } });\n\n// tslint:disable:no-conflicting-lifecycle\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\nclass VgScrubBarCuePoints {\n    constructor(ref, API) {\n        this.API = API;\n        this.onLoadedMetadataCalled = false;\n        this.cuePoints = [];\n        this.subscriptions = [];\n        this.totalCues = 0;\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        const onTimeUpdate = this.target.subscriptions.loadedMetadata;\n        this.subscriptions.push(onTimeUpdate.subscribe(this.onLoadedMetadata.bind(this)));\n        if (this.onLoadedMetadataCalled) {\n            this.onLoadedMetadata();\n        }\n    }\n    onLoadedMetadata() {\n        if (this.vgCuePoints) {\n            // We need to transform the TextTrackCueList to Array or it doesn't work on IE11/Edge.\n            // See: https://github.com/videogular/videogular2/issues/369\n            this.cuePoints = [];\n            for (let i = 0, l = this.vgCuePoints.length; i < l; i++) {\n                const end = (this.vgCuePoints[i].endTime >= 0) ? this.vgCuePoints[i].endTime : this.vgCuePoints[i].startTime + 1;\n                const cuePointDuration = (end - this.vgCuePoints[i].startTime) * 1000;\n                let position = '0';\n                let percentWidth = '0';\n                if (typeof cuePointDuration === 'number' && this.target.time.total) {\n                    percentWidth = ((cuePointDuration * 100) / this.target.time.total) + '%';\n                    position = (this.vgCuePoints[i].startTime * 100 / (Math.round(this.target.time.total / 1000))) + '%';\n                }\n                this.vgCuePoints[i].$$style = {\n                    width: percentWidth,\n                    left: position\n                };\n                this.cuePoints.push(this.vgCuePoints[i]);\n            }\n        }\n    }\n    updateCuePoints() {\n        if (!this.target) {\n            this.onLoadedMetadataCalled = true;\n            return;\n        }\n        this.onLoadedMetadata();\n    }\n    ngOnChanges(changes) {\n        if (changes['vgCuePoints'].currentValue) {\n            this.updateCuePoints();\n        }\n    }\n    ngDoCheck() {\n        if (this.vgCuePoints) {\n            const changes = this.totalCues !== this.vgCuePoints.length;\n            if (changes) {\n                this.totalCues = this.vgCuePoints.length;\n                this.updateCuePoints();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgScrubBarCuePoints.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBarCuePoints, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgScrubBarCuePoints.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgScrubBarCuePoints, selector: \"vg-scrub-bar-cue-points\", inputs: { vgCuePoints: \"vgCuePoints\", vgFor: \"vgFor\" }, usesOnChanges: true, ngImport: i0, template: `\n        <div class=\"cue-point-container\">\n            <span *ngFor=\"let cp of cuePoints\" [style.width]=\"cp.$$style?.width\" [style.left]=\"cp.$$style?.left\"\n                  class=\"cue-point\"></span>\n        </div>\n    `, isInline: true, styles: [\"vg-scrub-bar-cue-points{display:flex;width:100%;height:5px;pointer-events:none;position:absolute}vg-scrub-bar-cue-points .cue-point-container .cue-point{position:absolute;height:5px;background-color:#ffcc00b3}vg-controls vg-scrub-bar-cue-points{position:absolute;top:calc(50% - 3px)}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBarCuePoints, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-scrub-bar-cue-points',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div class=\"cue-point-container\">\n            <span *ngFor=\"let cp of cuePoints\" [style.width]=\"cp.$$style?.width\" [style.left]=\"cp.$$style?.left\"\n                  class=\"cue-point\"></span>\n        </div>\n    `,\n                    styles: [`\n        vg-scrub-bar-cue-points {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-cue-points .cue-point-container .cue-point {\n            position: absolute;\n            height: 5px;\n            background-color: rgba(255, 204, 0, 0.7);\n        }\n        vg-controls vg-scrub-bar-cue-points {\n            position: absolute;\n            top: calc(50% - 3px);\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgCuePoints: [{\n                type: Input\n            }], vgFor: [{\n                type: Input\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgScrubBarCurrentTime {\n    constructor(ref, API) {\n        this.API = API;\n        this.vgSlider = false;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    getPercentage() {\n        return this.target ? ((this.target.time.current * 100) / this.target.time.total) + '%' : '0%';\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgScrubBarCurrentTime.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBarCurrentTime, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgScrubBarCurrentTime.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgScrubBarCurrentTime, selector: \"vg-scrub-bar-current-time\", inputs: { vgFor: \"vgFor\", vgSlider: \"vgSlider\" }, ngImport: i0, template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div><span class=\"slider\" *ngIf=\"vgSlider\"></span>`, isInline: true, styles: [\"vg-scrub-bar-current-time{display:flex;width:100%;height:5px;pointer-events:none;position:absolute}vg-scrub-bar-current-time .background{background-color:#fff}vg-controls vg-scrub-bar-current-time{position:absolute;top:calc(50% - 3px);border-radius:2px}vg-controls vg-scrub-bar-current-time .background{border:1px solid white;border-radius:2px}vg-scrub-bar-current-time .slider{background:white;height:15px;width:15px;border-radius:50%;box-shadow:0 0 10px #000;margin-top:-5px;margin-left:-10px}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgScrubBarCurrentTime, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-scrub-bar-current-time',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `<div class=\"background\" [style.width]=\"getPercentage()\"></div><span class=\"slider\" *ngIf=\"vgSlider\"></span>`,\n                    styles: [`\n        vg-scrub-bar-current-time {\n            display: flex;\n            width: 100%;\n            height: 5px;\n            pointer-events: none;\n            position: absolute;\n        }\n        vg-scrub-bar-current-time .background {\n            background-color: white;\n        }\n        vg-controls vg-scrub-bar-current-time {\n            position: absolute;\n            top: calc(50% - 3px);\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n        vg-controls vg-scrub-bar-current-time .background {\n            border: 1px solid white;\n            -webkit-border-radius: 2px;\n            -moz-border-radius: 2px;\n            border-radius: 2px;\n        }\n\n        vg-scrub-bar-current-time .slider{\n            background: white;\n            height: 15px;\n            width: 15px;\n            border-radius: 50%;\n            box-shadow: 0px 0px 10px black;\n            margin-top: -5px;\n            margin-left: -10px;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], vgSlider: [{\n                type: Input\n            }] } });\n\n// Workaround until we can use UTC with Angular Date Pipe\nclass VgUtcPipe {\n    transform(value, format) {\n        const date = new Date(value);\n        let result = format;\n        let ss = date.getUTCSeconds();\n        let mm = date.getUTCMinutes();\n        let hh = date.getUTCHours();\n        if (ss < 10) {\n            ss = '0' + ss;\n        }\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n        if (hh < 10) {\n            hh = '0' + hh;\n        }\n        result = result.replace(/ss/g, ss);\n        result = result.replace(/mm/g, mm);\n        result = result.replace(/hh/g, hh);\n        return result;\n    }\n}\nVgUtcPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgUtcPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nVgUtcPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgUtcPipe, name: \"vgUtc\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgUtcPipe, decorators: [{\n            type: Pipe,\n            args: [{ name: 'vgUtc' }]\n        }] });\n// tslint:disable:component-class-suffix\nclass VgTimeDisplay {\n    constructor(ref, API) {\n        this.API = API;\n        this.vgProperty = 'current';\n        this.vgFormat = 'mm:ss';\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n    }\n    getTime() {\n        let t = 0;\n        if (this.target) {\n            t = Math.round(this.target.time[this.vgProperty]);\n            t = isNaN(t) || this.target.isLive ? 0 : t;\n        }\n        return t;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgTimeDisplay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgTimeDisplay, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgTimeDisplay.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgTimeDisplay, selector: \"vg-time-display\", inputs: { vgFor: \"vgFor\", vgProperty: \"vgProperty\", vgFormat: \"vgFormat\" }, ngImport: i0, template: `\n        <span *ngIf=\"target?.isLive\">LIVE</span>\n        <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc:vgFormat }}</span>\n        <ng-content></ng-content>\n    `, isInline: true, styles: [\"vg-time-display{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;height:50px;width:60px;cursor:pointer;color:#fff;line-height:50px;pointer-events:none;font-family:Helvetica Neue,Helvetica,Arial,sans-serif}\\n\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"vgUtc\": VgUtcPipe }, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgTimeDisplay, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-time-display',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <span *ngIf=\"target?.isLive\">LIVE</span>\n        <span *ngIf=\"!target?.isLive\">{{ getTime() | vgUtc:vgFormat }}</span>\n        <ng-content></ng-content>\n    `,\n                    styles: [`\n        vg-time-display {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            height: 50px;\n            width: 60px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n            pointer-events: none;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], vgProperty: [{\n                type: Input\n            }], vgFormat: [{\n                type: Input\n            }] } });\n\n// tslint:disable:component-class-suffix\nclass VgTrackSelector {\n    constructor(ref, API) {\n        this.API = API;\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        const subs = Array.from(this.API.getMasterMedia().elem.children)\n            .filter((item) => item.tagName === 'TRACK')\n            .filter((item) => item.kind === 'subtitles')\n            .map((item) => ({\n            label: item.label,\n            selected: item.default === true,\n            id: item.srclang\n        }));\n        this.tracks = [\n            ...subs,\n            {\n                id: null,\n                label: 'Off',\n                selected: subs.every((item) => item.selected === false)\n            }\n        ];\n        const track = this.tracks.filter((item) => item.selected === true)[0];\n        this.trackSelected = track.id;\n        this.ariaValue = track.label;\n    }\n    selectTrack(trackId) {\n        this.trackSelected = (trackId === 'null') ? null : trackId;\n        this.ariaValue = 'No track selected';\n        Array.from(this.API.getMasterMedia().elem.textTracks)\n            .forEach((item) => {\n            if (item.language === trackId) {\n                this.ariaValue = item.label;\n                item.mode = 'showing';\n            }\n            else {\n                item.mode = 'hidden';\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgTrackSelector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgTrackSelector, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgTrackSelector.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgTrackSelector, selector: \"vg-track-selector\", inputs: { vgFor: \"vgFor\" }, ngImport: i0, template: `\n        <div class=\"container\">\n            <div class=\"track-selected\"\n                [class.vg-icon-closed_caption]=\"!trackSelected\">\n                {{ trackSelected || '' }}\n            </div>\n\n            <select class=\"trackSelector\"\n                    (change)=\"selectTrack($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"track selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let track of tracks\"\n                    [value]=\"track.id\"\n                    [selected]=\"track.selected === true\">\n                    {{ track.label }}\n                </option>\n            </select>\n        </div>\n    `, isInline: true, styles: [\"vg-track-selector{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;width:50px;height:50px;cursor:pointer;color:#fff;line-height:50px}vg-track-selector .container{position:relative;display:flex;flex-grow:1;align-items:center;padding:0;margin:5px}vg-track-selector select.trackSelector{width:50px;padding:5px 8px;border:none;background:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;color:transparent;font-size:16px}vg-track-selector select.trackSelector::-ms-expand{display:none}vg-track-selector select.trackSelector option{color:#000}vg-track-selector .track-selected{position:absolute;width:100%;height:50px;top:-6px;text-align:center;text-transform:uppercase;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding-top:2px;pointer-events:none}vg-track-selector .vg-icon-closed_caption:before{width:100%}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgTrackSelector, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-track-selector',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div class=\"container\">\n            <div class=\"track-selected\"\n                [class.vg-icon-closed_caption]=\"!trackSelected\">\n                {{ trackSelected || '' }}\n            </div>\n\n            <select class=\"trackSelector\"\n                    (change)=\"selectTrack($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"track selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let track of tracks\"\n                    [value]=\"track.id\"\n                    [selected]=\"track.selected === true\">\n                    {{ track.label }}\n                </option>\n            </select>\n        </div>\n    `,\n                    styles: [`\n        vg-track-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-track-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-track-selector select.trackSelector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-track-selector select.trackSelector::-ms-expand {\n            display: none;\n        }\n        vg-track-selector select.trackSelector option {\n            color: #000;\n        }\n        vg-track-selector .track-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-track-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }] } });\n\n// tslint:disable:no-output-on-prefix\n// tslint:disable:component-class-suffix\n// tslint:disable:no-string-literal\nclass VgQualitySelector {\n    constructor(ref, API) {\n        this.API = API;\n        this.onBitrateChange = new EventEmitter();\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n    }\n    ngOnChanges(changes) {\n        if (changes['bitrates'].currentValue && changes['bitrates'].currentValue.length) {\n            this.bitrates.forEach(item => item.label = (item.label || Math.round(item.bitrate / 1000)).toString());\n        }\n    }\n    selectBitrate(index) {\n        this.bitrateSelected = this.bitrates[index];\n        this.onBitrateChange.emit(this.bitrates[index]);\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgQualitySelector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgQualitySelector, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgQualitySelector.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgQualitySelector, selector: \"vg-quality-selector\", inputs: { bitrates: \"bitrates\" }, outputs: { onBitrateChange: \"onBitrateChange\" }, usesOnChanges: true, ngImport: i0, template: `\n        <div class=\"container\">\n            <div class=\"quality-selected\"\n                 [class.vg-icon-hd]=\"!bitrateSelected\">\n                {{ bitrateSelected?.label }}\n            </div>\n\n            <select class=\"quality-selector\"\n                    (change)=\"selectBitrate($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"quality selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let bitrate of bitrates\"\n                    [value]=\"bitrate.qualityIndex.toString()\"\n                    [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\">\n                    {{ bitrate.label }}\n                </option>\n            </select>\n        </div>\n    `, isInline: true, styles: [\"vg-quality-selector{-webkit-touch-callout:none;-webkit-user-select:none;user-select:none;display:flex;justify-content:center;width:50px;height:50px;cursor:pointer;color:#fff;line-height:50px}vg-quality-selector .container{position:relative;display:flex;flex-grow:1;align-items:center;padding:0;margin:5px}vg-quality-selector select.quality-selector{width:50px;padding:5px 8px;border:none;background:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;color:transparent;font-size:16px}vg-quality-selector select.quality-selector::-ms-expand{display:none}vg-quality-selector select.quality-selector option{color:#000}vg-quality-selector .quality-selected{position:absolute;width:100%;height:50px;top:-6px;text-align:center;text-transform:uppercase;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;padding-top:2px;pointer-events:none}vg-quality-selector .vg-icon-closed_caption:before{width:100%}\\n\"], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgQualitySelector, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-quality-selector',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `\n        <div class=\"container\">\n            <div class=\"quality-selected\"\n                 [class.vg-icon-hd]=\"!bitrateSelected\">\n                {{ bitrateSelected?.label }}\n            </div>\n\n            <select class=\"quality-selector\"\n                    (change)=\"selectBitrate($event.target.value)\"\n                    tabindex=\"0\"\n                    aria-label=\"quality selector\"\n                    [attr.aria-valuetext]=\"ariaValue\">\n                <option\n                    *ngFor=\"let bitrate of bitrates\"\n                    [value]=\"bitrate.qualityIndex.toString()\"\n                    [selected]=\"bitrate.qualityIndex === bitrateSelected?.qualityIndex\">\n                    {{ bitrate.label }}\n                </option>\n            </select>\n        </div>\n    `,\n                    styles: [`\n        vg-quality-selector {\n            -webkit-touch-callout: none;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            display: flex;\n            justify-content: center;\n            width: 50px;\n            height: 50px;\n            cursor: pointer;\n            color: white;\n            line-height: 50px;\n        }\n        vg-quality-selector .container {\n            position: relative;\n            display: flex;\n            flex-grow: 1;\n            align-items: center;\n\n            padding: 0;\n            margin: 5px;\n        }\n        vg-quality-selector select.quality-selector {\n            width: 50px;\n            padding: 5px 8px;\n            border: none;\n            background: none;\n            -webkit-appearance: none;\n            -moz-appearance: none;\n            appearance: none;\n            color: transparent;\n            font-size: 16px;\n        }\n        vg-quality-selector select.quality-selector::-ms-expand {\n            display: none;\n        }\n        vg-quality-selector select.quality-selector option {\n            color: #000;\n        }\n        vg-quality-selector .quality-selected {\n            position: absolute;\n            width: 100%;\n            height: 50px;\n            top: -6px;\n            text-align: center;\n            text-transform: uppercase;\n            font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n            padding-top: 2px;\n            pointer-events: none;\n        }\n        vg-quality-selector .vg-icon-closed_caption:before {\n            width: 100%;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { bitrates: [{\n                type: Input\n            }], onBitrateChange: [{\n                type: Output\n            }] } });\n\nclass VgControlsModule {\n}\nVgControlsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControlsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVgControlsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControlsModule, declarations: [VgControls,\n        VgFullscreen,\n        VgMute,\n        VgVolume,\n        VgPlayPause,\n        VgPlaybackButton,\n        VgScrubBar,\n        VgScrubBarBufferingTime,\n        VgScrubBarCuePoints,\n        VgScrubBarCurrentTime,\n        VgTimeDisplay,\n        VgUtcPipe,\n        VgTrackSelector,\n        VgQualitySelector], imports: [CommonModule], exports: [VgControls,\n        VgFullscreen,\n        VgMute,\n        VgVolume,\n        VgPlayPause,\n        VgPlaybackButton,\n        VgScrubBar,\n        VgScrubBarBufferingTime,\n        VgScrubBarCuePoints,\n        VgScrubBarCurrentTime,\n        VgTimeDisplay,\n        VgUtcPipe,\n        VgTrackSelector,\n        VgQualitySelector] });\nVgControlsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControlsModule, providers: [VgControlsHidden], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgControlsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        VgControls,\n                        VgFullscreen,\n                        VgMute,\n                        VgVolume,\n                        VgPlayPause,\n                        VgPlaybackButton,\n                        VgScrubBar,\n                        VgScrubBarBufferingTime,\n                        VgScrubBarCuePoints,\n                        VgScrubBarCurrentTime,\n                        VgTimeDisplay,\n                        VgUtcPipe,\n                        VgTrackSelector,\n                        VgQualitySelector\n                    ],\n                    exports: [\n                        VgControls,\n                        VgFullscreen,\n                        VgMute,\n                        VgVolume,\n                        VgPlayPause,\n                        VgPlaybackButton,\n                        VgScrubBar,\n                        VgScrubBarBufferingTime,\n                        VgScrubBarCuePoints,\n                        VgScrubBarCurrentTime,\n                        VgTimeDisplay,\n                        VgUtcPipe,\n                        VgTrackSelector,\n                        VgQualitySelector\n                    ],\n                    providers: [VgControlsHidden]\n                }]\n        }] });\n\nclass VgEvents {\n}\nVgEvents.VG_ABORT = 'abort';\nVgEvents.VG_CAN_PLAY = 'canplay';\nVgEvents.VG_CAN_PLAY_THROUGH = 'canplaythrough';\nVgEvents.VG_DURATION_CHANGE = 'durationchange';\nVgEvents.VG_EMPTIED = 'emptied';\nVgEvents.VG_ENCRYPTED = 'encrypted';\nVgEvents.VG_ENDED = 'ended';\nVgEvents.VG_ERROR = 'error';\nVgEvents.VG_LOADED_DATA = 'loadeddata';\nVgEvents.VG_LOADED_METADATA = 'loadedmetadata';\nVgEvents.VG_LOAD_START = 'loadstart';\nVgEvents.VG_PAUSE = 'pause';\nVgEvents.VG_PLAY = 'play';\nVgEvents.VG_PLAYING = 'playing';\nVgEvents.VG_PROGRESS = 'progress';\nVgEvents.VG_RATE_CHANGE = 'ratechange';\nVgEvents.VG_SEEK = 'seek';\nVgEvents.VG_SEEKED = 'seeked';\nVgEvents.VG_SEEKING = 'seeking';\nVgEvents.VG_STALLED = 'stalled';\nVgEvents.VG_SUSPEND = 'suspend';\nVgEvents.VG_TIME_UPDATE = 'timeupdate';\nVgEvents.VG_VOLUME_CHANGE = 'volumechange';\nVgEvents.VG_WAITING = 'waiting';\nVgEvents.VG_LOAD = 'load';\nVgEvents.VG_ENTER = 'enter';\nVgEvents.VG_EXIT = 'exit';\nVgEvents.VG_START_ADS = 'startads';\nVgEvents.VG_END_ADS = 'endads';\nVgEvents.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgEvents, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nVgEvents.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgEvents });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgEvents, decorators: [{\n            type: Injectable\n        }] });\n\n// tslint:disable-next-line:directive-class-suffix\nclass VgMedia {\n    constructor(api, ref) {\n        this.api = api;\n        this.ref = ref;\n        this.state = VgStates.VG_PAUSED;\n        this.time = { current: 0, total: 0, left: 0 };\n        this.buffer = { end: 0 };\n        this.canPlay = false;\n        this.canPlayThrough = false;\n        this.isMetadataLoaded = false;\n        this.isWaiting = false;\n        this.isCompleted = false;\n        this.isLive = false;\n        this.isBufferDetected = false;\n        this.checkInterval = 200;\n        this.currentPlayPos = 0;\n        this.lastPlayPos = 0;\n        this.playAtferSync = false;\n        this.bufferDetected = new Subject();\n    }\n    ngOnInit() {\n        if (this.vgMedia.nodeName) {\n            // It's a native element\n            this.elem = this.vgMedia;\n        }\n        else {\n            // It's an Angular Class\n            this.elem = this.vgMedia.elem;\n        }\n        // Just in case we're creating this vgMedia dynamically register again into API\n        this.api.registerMedia(this);\n        this.subscriptions = {\n            // Native events\n            abort: fromEvent(this.elem, VgEvents.VG_ABORT),\n            canPlay: fromEvent(this.elem, VgEvents.VG_CAN_PLAY),\n            canPlayThrough: fromEvent(this.elem, VgEvents.VG_CAN_PLAY_THROUGH),\n            durationChange: fromEvent(this.elem, VgEvents.VG_DURATION_CHANGE),\n            emptied: fromEvent(this.elem, VgEvents.VG_EMPTIED),\n            encrypted: fromEvent(this.elem, VgEvents.VG_ENCRYPTED),\n            ended: fromEvent(this.elem, VgEvents.VG_ENDED),\n            error: fromEvent(this.elem, VgEvents.VG_ERROR),\n            loadedData: fromEvent(this.elem, VgEvents.VG_LOADED_DATA),\n            loadedMetadata: fromEvent(this.elem, VgEvents.VG_LOADED_METADATA),\n            loadStart: fromEvent(this.elem, VgEvents.VG_LOAD_START),\n            pause: fromEvent(this.elem, VgEvents.VG_PAUSE),\n            play: fromEvent(this.elem, VgEvents.VG_PLAY),\n            playing: fromEvent(this.elem, VgEvents.VG_PLAYING),\n            progress: fromEvent(this.elem, VgEvents.VG_PROGRESS),\n            rateChange: fromEvent(this.elem, VgEvents.VG_RATE_CHANGE),\n            seeked: fromEvent(this.elem, VgEvents.VG_SEEKED),\n            seeking: fromEvent(this.elem, VgEvents.VG_SEEKING),\n            stalled: fromEvent(this.elem, VgEvents.VG_STALLED),\n            suspend: fromEvent(this.elem, VgEvents.VG_SUSPEND),\n            timeUpdate: fromEvent(this.elem, VgEvents.VG_TIME_UPDATE),\n            volumeChange: fromEvent(this.elem, VgEvents.VG_VOLUME_CHANGE),\n            waiting: fromEvent(this.elem, VgEvents.VG_WAITING),\n            // Advertisement only events\n            startAds: fromEvent(this.elem, VgEvents.VG_START_ADS),\n            endAds: fromEvent(this.elem, VgEvents.VG_END_ADS),\n            // See changes on <source> child elements to reload the video file\n            mutation: new Observable((observer) => {\n                const domObs = new MutationObserver((mutations) => {\n                    observer.next(mutations);\n                });\n                domObs.observe(this.elem, { childList: true, attributes: true });\n                return () => {\n                    domObs.disconnect();\n                };\n            }),\n            // Custom buffering detection\n            bufferDetected: this.bufferDetected\n        };\n        this.mutationObs = this.subscriptions.mutation.subscribe(this.onMutation.bind(this));\n        this.canPlayObs = this.subscriptions.canPlay.subscribe(this.onCanPlay.bind(this));\n        this.canPlayThroughObs = this.subscriptions.canPlayThrough.subscribe(this.onCanPlayThrough.bind(this));\n        this.loadedMetadataObs = this.subscriptions.loadedMetadata.subscribe(this.onLoadMetadata.bind(this));\n        this.waitingObs = this.subscriptions.waiting.subscribe(this.onWait.bind(this));\n        this.progressObs = this.subscriptions.progress.subscribe(this.onProgress.bind(this));\n        this.endedObs = this.subscriptions.ended.subscribe(this.onComplete.bind(this));\n        this.playingObs = this.subscriptions.playing.subscribe(this.onStartPlaying.bind(this));\n        this.playObs = this.subscriptions.play.subscribe(this.onPlay.bind(this));\n        this.pauseObs = this.subscriptions.pause.subscribe(this.onPause.bind(this));\n        this.timeUpdateObs = this.subscriptions.timeUpdate.subscribe(this.onTimeUpdate.bind(this));\n        this.volumeChangeObs = this.subscriptions.volumeChange.subscribe(this.onVolumeChange.bind(this));\n        this.errorObs = this.subscriptions.error.subscribe(this.onError.bind(this));\n        if (this.vgMaster) {\n            this.api.playerReadyEvent.subscribe(() => {\n                this.prepareSync();\n            });\n        }\n    }\n    prepareSync() {\n        const canPlayAll = [];\n        for (const media in this.api.medias) {\n            if (this.api.medias[media]) {\n                canPlayAll.push(this.api.medias[media].subscriptions.canPlay);\n            }\n        }\n        this.canPlayAllSubscription = combineLatest(canPlayAll).pipe(map((...params) => {\n            const checkReadyState = (event) => {\n                return event.target.readyState === 4;\n            };\n            const allReady = params.some(checkReadyState);\n            if (allReady && !this.syncSubscription) {\n                this.startSync();\n                this.syncSubscription.unsubscribe();\n            }\n        })).subscribe();\n    }\n    startSync() {\n        this.syncSubscription = timer(0, 1000).subscribe(() => {\n            for (const media in this.api.medias) {\n                if (this.api.medias[media] !== this) {\n                    const diff = this.api.medias[media].currentTime - this.currentTime;\n                    if (diff < -0.3 || diff > 0.3) {\n                        this.playAtferSync = (this.state === VgStates.VG_PLAYING);\n                        this.pause();\n                        this.api.medias[media].pause();\n                        this.api.medias[media].currentTime = this.currentTime;\n                    }\n                    else {\n                        if (this.playAtferSync) {\n                            this.play();\n                            this.api.medias[media].play();\n                            this.playAtferSync = false;\n                        }\n                    }\n                }\n            }\n        });\n    }\n    onMutation(mutations) {\n        // Detect changes only for source elements or src attribute\n        for (let i = 0, l = mutations.length; i < l; i++) {\n            const mut = mutations[i];\n            if (mut.type === 'attributes' && mut.attributeName === 'src') {\n                // Only load src file if it's not a blob (for DASH / HLS sources)\n                // tslint:disable-next-line:no-string-literal\n                if (mut.target['src'] && mut.target['src'].length > 0 && mut.target['src'].indexOf('blob:') < 0) {\n                    this.loadMedia();\n                    break;\n                }\n            }\n            else if (mut.type === 'childList' && mut.removedNodes.length && mut.removedNodes[0].nodeName.toLowerCase() === 'source') {\n                this.loadMedia();\n                break;\n            }\n        }\n    }\n    loadMedia() {\n        this.vgMedia.pause();\n        this.vgMedia.currentTime = 0;\n        // Start buffering until we can play the media file\n        this.stopBufferCheck();\n        this.isBufferDetected = true;\n        this.bufferDetected.next(this.isBufferDetected);\n        // TODO: This is ugly, we should find something cleaner. For some reason a TimerObservable doesn't works.\n        setTimeout(() => this.vgMedia.load(), 10);\n    }\n    play() {\n        // short-circuit if already playing\n        if (this.playPromise || (this.state !== VgStates.VG_PAUSED && this.state !== VgStates.VG_ENDED)) {\n            return;\n        }\n        this.playPromise = this.vgMedia.play();\n        // browser has async play promise\n        if (this.playPromise && this.playPromise.then && this.playPromise.catch) {\n            this.playPromise\n                .then(() => {\n                this.playPromise = null;\n            })\n                .catch(() => {\n                this.playPromise = null;\n                // deliberately empty for the sake of eating console noise\n            });\n        }\n        return this.playPromise;\n    }\n    pause() {\n        // browser has async play promise\n        if (this.playPromise) {\n            this.playPromise\n                .then(() => {\n                this.vgMedia.pause();\n            });\n        }\n        else {\n            this.vgMedia.pause();\n        }\n    }\n    get id() {\n        // We should return undefined if vgMedia still doesn't exist\n        // tslint:disable-next-line:no-unnecessary-initializer\n        let result = undefined;\n        if (this.vgMedia) {\n            result = this.vgMedia.id;\n        }\n        return result;\n    }\n    get duration() {\n        return this.vgMedia.duration;\n    }\n    set currentTime(seconds) {\n        this.vgMedia.currentTime = seconds;\n        // this.elem.dispatchEvent(new CustomEvent(VgEvents.VG_SEEK));\n    }\n    get currentTime() {\n        return this.vgMedia.currentTime;\n    }\n    set volume(volume) {\n        this.vgMedia.volume = volume;\n    }\n    get volume() {\n        return this.vgMedia.volume;\n    }\n    set playbackRate(rate) {\n        this.vgMedia.playbackRate = rate;\n    }\n    get playbackRate() {\n        return this.vgMedia.playbackRate;\n    }\n    get buffered() {\n        return this.vgMedia.buffered;\n    }\n    get textTracks() {\n        return this.vgMedia.textTracks;\n    }\n    // @ts-ignore\n    onCanPlay(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlay = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onCanPlayThrough(event) {\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n        this.canPlayThrough = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onLoadMetadata(event) {\n        this.isMetadataLoaded = true;\n        this.time = {\n            current: 0,\n            left: 0,\n            total: this.duration * 1000\n        };\n        this.state = VgStates.VG_PAUSED;\n        // Live streaming check\n        const t = Math.round(this.time.total);\n        this.isLive = (t === Infinity);\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onWait(event) {\n        this.isWaiting = true;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onComplete(event) {\n        this.isCompleted = true;\n        this.state = VgStates.VG_ENDED;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onStartPlaying(event) {\n        this.state = VgStates.VG_PLAYING;\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onPlay(event) {\n        this.state = VgStates.VG_PLAYING;\n        if (this.vgMaster) {\n            if (!this.syncSubscription || this.syncSubscription.closed) {\n                this.startSync();\n            }\n        }\n        this.startBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onPause(event) {\n        this.state = VgStates.VG_PAUSED;\n        if (this.vgMaster) {\n            if (!this.playAtferSync) {\n                this.syncSubscription.unsubscribe();\n            }\n        }\n        this.stopBufferCheck();\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onTimeUpdate(event) {\n        var _a;\n        const end = ((_a = this.buffered) === null || _a === void 0 ? void 0 : _a.length) - 1;\n        this.time = {\n            current: this.currentTime * 1000,\n            total: this.time.total,\n            left: (this.duration - this.currentTime) * 1000\n        };\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onProgress(event) {\n        const end = this.buffered.length - 1;\n        if (end >= 0) {\n            this.buffer = { end: this.buffered.end(end) * 1000 };\n        }\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onVolumeChange(event) {\n        // TODO: Save to localstorage the current volume\n        this.ref.detectChanges();\n    }\n    // @ts-ignore\n    onError(event) {\n        // TODO: Handle error messages\n        this.ref.detectChanges();\n    }\n    // http://stackoverflow.com/a/23828241/779529\n    bufferCheck() {\n        const offset = 1 / this.checkInterval;\n        this.currentPlayPos = this.currentTime;\n        if (!this.isBufferDetected && this.currentPlayPos < (this.lastPlayPos + offset)) {\n            this.isBufferDetected = true;\n        }\n        if (this.isBufferDetected && this.currentPlayPos > (this.lastPlayPos + offset)) {\n            this.isBufferDetected = false;\n        }\n        // Prevent calls to bufferCheck after ngOnDestroy have been called\n        if (!this.bufferDetected.closed) {\n            this.bufferDetected.next(this.isBufferDetected);\n        }\n        this.lastPlayPos = this.currentPlayPos;\n    }\n    startBufferCheck() {\n        this.checkBufferSubscription = timer(0, this.checkInterval).subscribe(() => {\n            this.bufferCheck();\n        });\n    }\n    stopBufferCheck() {\n        if (this.checkBufferSubscription) {\n            this.checkBufferSubscription.unsubscribe();\n        }\n        this.isBufferDetected = false;\n        this.bufferDetected.next(this.isBufferDetected);\n    }\n    seekTime(value, byPercent = false) {\n        let second;\n        const duration = this.duration;\n        if (byPercent) {\n            second = value * duration / 100;\n        }\n        else {\n            second = value;\n        }\n        this.currentTime = second;\n    }\n    addTextTrack(type, label, language, mode) {\n        const newTrack = this.vgMedia.addTextTrack(type, label, language);\n        if (mode) {\n            newTrack.mode = mode;\n        }\n        return newTrack;\n    }\n    ngOnDestroy() {\n        this.vgMedia.src = '';\n        this.mutationObs.unsubscribe();\n        this.canPlayObs.unsubscribe();\n        this.canPlayThroughObs.unsubscribe();\n        this.loadedMetadataObs.unsubscribe();\n        this.waitingObs.unsubscribe();\n        this.progressObs.unsubscribe();\n        this.endedObs.unsubscribe();\n        this.playingObs.unsubscribe();\n        this.playObs.unsubscribe();\n        this.pauseObs.unsubscribe();\n        this.timeUpdateObs.unsubscribe();\n        this.volumeChangeObs.unsubscribe();\n        this.errorObs.unsubscribe();\n        if (this.checkBufferSubscription) {\n            this.checkBufferSubscription.unsubscribe();\n        }\n        if (this.syncSubscription) {\n            this.syncSubscription.unsubscribe();\n        }\n        this.bufferDetected.complete();\n        this.bufferDetected.unsubscribe();\n        this.api.unregisterMedia(this);\n    }\n}\nVgMedia.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgMedia, deps: [{ token: VgAPI }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nVgMedia.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgMedia, selector: \"[vgMedia]\", inputs: { vgMedia: \"vgMedia\", vgMaster: \"vgMaster\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgMedia, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgMedia]'\n                }]\n        }], ctorParameters: function () { return [{ type: VgAPI }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { vgMedia: [{\n                type: Input\n            }], vgMaster: [{\n                type: Input\n            }] } });\n\n// tslint:disable-next-line:directive-class-suffix\nclass VgCuePoints {\n    constructor(ref) {\n        this.ref = ref;\n        // tslint:disable:no-output-on-prefix\n        this.onEnterCuePoint = new EventEmitter();\n        this.onUpdateCuePoint = new EventEmitter();\n        this.onExitCuePoint = new EventEmitter();\n        this.onCompleteCuePoint = new EventEmitter();\n        this.subscriptions = [];\n        this.cuesSubscriptions = [];\n        this.totalCues = 0;\n    }\n    ngOnInit() {\n        this.onLoad$ = fromEvent(this.ref.nativeElement, VgEvents.VG_LOAD);\n        this.subscriptions.push(this.onLoad$.subscribe(this.onLoad.bind(this)));\n    }\n    onLoad(event) {\n        if (event.target && event.target.track) {\n            const cues = event.target.track.cues;\n            this.ref.nativeElement.cues = cues;\n            this.updateCuePoints(cues);\n        }\n        else if (event.target && event.target.textTracks && event.target.textTracks.length) {\n            const cues = event.target.textTracks[0].cues;\n            this.ref.nativeElement.cues = cues;\n            this.updateCuePoints(cues);\n        }\n    }\n    updateCuePoints(cues) {\n        this.cuesSubscriptions.forEach(s => s.unsubscribe());\n        for (let i = 0, l = cues.length; i < l; i++) {\n            this.onEnter$ = fromEvent(cues[i], VgEvents.VG_ENTER);\n            this.cuesSubscriptions.push(this.onEnter$.subscribe(this.onEnter.bind(this)));\n            this.onExit$ = fromEvent(cues[i], VgEvents.VG_EXIT);\n            this.cuesSubscriptions.push(this.onExit$.subscribe(this.onExit.bind(this)));\n        }\n    }\n    onEnter(event) {\n        this.onEnterCuePoint.emit(event.target);\n    }\n    onExit(event) {\n        this.onExitCuePoint.emit(event.target);\n    }\n    ngDoCheck() {\n        if (this.ref.nativeElement.track && this.ref.nativeElement.track.cues) {\n            const changes = this.totalCues !== this.ref.nativeElement.track.cues.length;\n            if (changes) {\n                this.totalCues = this.ref.nativeElement.track.cues.length;\n                this.ref.nativeElement.cues = this.ref.nativeElement.track.cues;\n                this.updateCuePoints(this.ref.nativeElement.track.cues);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgCuePoints.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgCuePoints, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nVgCuePoints.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgCuePoints, selector: \"[vgCuePoints]\", outputs: { onEnterCuePoint: \"onEnterCuePoint\", onUpdateCuePoint: \"onUpdateCuePoint\", onExitCuePoint: \"onExitCuePoint\", onCompleteCuePoint: \"onCompleteCuePoint\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgCuePoints, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgCuePoints]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { onEnterCuePoint: [{\n                type: Output\n            }], onUpdateCuePoint: [{\n                type: Output\n            }], onExitCuePoint: [{\n                type: Output\n            }], onCompleteCuePoint: [{\n                type: Output\n            }] } });\n\n// tslint:disable:component-class-suffix\n// tslint:disable:no-output-on-prefix\nclass VgPlayer {\n    constructor(ref, api, fsAPI, controlsHidden) {\n        this.api = api;\n        this.fsAPI = fsAPI;\n        this.controlsHidden = controlsHidden;\n        this.isFullscreen = false;\n        this.isNativeFullscreen = false;\n        this.areControlsHidden = false;\n        this.onPlayerReady = new EventEmitter();\n        this.onMediaReady = new EventEmitter();\n        this.subscriptions = [];\n        this.elem = ref.nativeElement;\n        this.api.registerElement(this.elem);\n    }\n    ngAfterContentInit() {\n        this.medias.toArray().forEach((media) => {\n            this.api.registerMedia(media);\n        });\n        this.fsAPI.init(this.elem, this.medias);\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n        this.api.onPlayerReady(this.fsAPI);\n        this.onPlayerReady.emit(this.api);\n    }\n    onChangeFullscreen(fsState) {\n        if (!this.fsAPI.nativeFullscreen) {\n            this.isFullscreen = fsState;\n            this.zIndex = fsState ? VgUtils.getZIndex().toString() : 'auto';\n        }\n        else {\n            this.isNativeFullscreen = fsState;\n        }\n    }\n    onHideControls(hidden) {\n        this.areControlsHidden = hidden;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgPlayer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgPlayer, deps: [{ token: i0.ElementRef }, { token: VgAPI }, { token: VgFullscreenAPI }, { token: VgControlsHidden }], target: i0.ɵɵFactoryTarget.Component });\nVgPlayer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgPlayer, selector: \"vg-player\", outputs: { onPlayerReady: \"onPlayerReady\", onMediaReady: \"onMediaReady\" }, host: { properties: { \"class.fullscreen\": \"this.isFullscreen\", \"class.native-fullscreen\": \"this.isNativeFullscreen\", \"class.controls-hidden\": \"this.areControlsHidden\", \"style.z-index\": \"this.zIndex\" } }, providers: [VgAPI, VgFullscreenAPI, VgControlsHidden], queries: [{ propertyName: \"medias\", predicate: VgMedia }], ngImport: i0, template: `<ng-content></ng-content>`, isInline: true, styles: [\"vg-player{font-family:videogular;position:relative;display:flex;width:100%;height:100%;overflow:hidden;background-color:#000}vg-player.fullscreen{position:fixed;left:0;top:0}vg-player.native-fullscreen.controls-hidden{cursor:none}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgPlayer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-player',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `<ng-content></ng-content>`,\n                    styles: [`\n        vg-player {\n            font-family: 'videogular';\n            position: relative;\n            display: flex;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n            background-color: black;\n        }\n        vg-player.fullscreen {\n            position: fixed;\n            left: 0;\n            top: 0;\n        }\n        vg-player.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n    `],\n                    providers: [VgAPI, VgFullscreenAPI, VgControlsHidden]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }, { type: VgFullscreenAPI }, { type: VgControlsHidden }]; }, propDecorators: { isFullscreen: [{\n                type: HostBinding,\n                args: ['class.fullscreen']\n            }], isNativeFullscreen: [{\n                type: HostBinding,\n                args: ['class.native-fullscreen']\n            }], areControlsHidden: [{\n                type: HostBinding,\n                args: ['class.controls-hidden']\n            }], zIndex: [{\n                type: HostBinding,\n                args: ['style.z-index']\n            }], onPlayerReady: [{\n                type: Output\n            }], onMediaReady: [{\n                type: Output\n            }], medias: [{\n                type: ContentChildren,\n                args: [VgMedia]\n            }] } });\n\nclass VgMediaElement {\n    get audioTracks() { return null; }\n    // @ts-ignore\n    addTextTrack(kind, label, language) {\n        return null;\n    }\n    // @ts-ignore\n    canPlayType(type) {\n        return null;\n    }\n    load() {\n    }\n    msClearEffects() {\n    }\n    msGetAsCastingSource() {\n        return null;\n    }\n    // @ts-ignore\n    msInsertAudioEffect(activatableClassId, effectRequired, config) {\n    }\n    // @ts-ignore\n    msSetMediaKeys(mediaKeys) {\n    }\n    // @ts-ignore\n    msSetMediaProtectionManager(mediaProtectionManager) {\n    }\n    pause() {\n    }\n    play() {\n        return null;\n    }\n    // @ts-ignore\n    setMediaKeys(mediaKeys) {\n        return null;\n    }\n    // @ts-ignore\n    addEventListener(type, listener, useCapture) {\n    }\n}\n\n///<reference path='./google.ima.ts'/>\n// tslint:disable:no-output-on-prefix\n// tslint:disable:ban-types\n// tslint:disable:component-class-suffix\nclass VgImaAds {\n    constructor(ref, API, fsAPI) {\n        this.API = API;\n        this.fsAPI = fsAPI;\n        this.onAdStart = new EventEmitter();\n        this.onAdStop = new EventEmitter();\n        this.onSkipAd = new EventEmitter();\n        this.isFullscreen = false;\n        this.subscriptions = [];\n        this.displayState = 'none';\n        this.elem = ref.nativeElement;\n        this.onContentEnded = this.onContentEnded.bind(this);\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        if (typeof google === 'undefined') {\n            this.onMissingGoogleImaLoader();\n            return;\n        }\n        this.target = this.API.getMediaById(this.vgFor);\n        this.initializations();\n        this.subscriptions.push(this.target.subscriptions.ended.subscribe(this.onContentEnded.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.play.subscribe(this.onUpdateState.bind(this)));\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.ima.adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this.onAdsManagerLoaded.bind(this), false);\n        this.ima.adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdError.bind(this), false);\n        this.loadAds();\n    }\n    initializations() {\n        this.ima = new Ima(this.elem);\n        if (this.vgSkipButton) {\n            this.skipButton = document.querySelector(this.vgSkipButton);\n            this.skipButton.style.display = 'none';\n            this.skipButton.addEventListener('click', this.onClickSkip.bind(this));\n            this.elem.insertBefore(this.skipButton, this.elem.firstChild);\n        }\n        window.addEventListener('resize', () => {\n            const w = this.API.videogularElement.offsetWidth;\n            const h = this.API.videogularElement.offsetHeight;\n            if (this.ima.adsManager) {\n                if (this.isFullscreen) {\n                    this.ima.adsManager.resize(w, h, google.ima.ViewMode.FULLSCREEN);\n                }\n                else {\n                    this.ima.adsManager.resize(w, h, google.ima.ViewMode.NORMAL);\n                }\n            }\n        });\n    }\n    loadAds() {\n        if (this.vgCompanion) {\n            googletag.cmd.push(() => {\n                const adUnitPath = '/' + this.vgNetwork + '/' + this.vgUnitPath;\n                const slot = googletag.defineSlot(adUnitPath, this.vgCompanionSize, this.vgCompanion);\n                if (slot) {\n                    slot.addService(googletag.companionAds());\n                    slot.addService(googletag.pubads());\n                    googletag\n                        .companionAds()\n                        .setRefreshUnfilledSlots(true);\n                    googletag\n                        .pubads()\n                        .enableVideoAds();\n                    googletag.enableServices();\n                }\n            });\n        }\n    }\n    onUpdateState(event) {\n        switch (event.type) {\n            case VgEvents.VG_PLAY:\n                if (!this.ima.adsLoaded) {\n                    this.API.pause();\n                    this.ima.adDisplayContainer.initialize();\n                    this.requestAds(this.vgAdTagUrl);\n                    this.ima.adsLoaded = true;\n                }\n                break;\n        }\n    }\n    requestAds(adTagUrl) {\n        // Show only to get computed style in pixels\n        this.show();\n        const adsRequest = new google.ima.AdsRequest();\n        const computedStyle = window.getComputedStyle(this.elem);\n        adsRequest.adTagUrl = adTagUrl;\n        adsRequest.linearAdSlotWidth = parseInt(computedStyle.width, 10);\n        adsRequest.linearAdSlotHeight = parseInt(computedStyle.height, 10);\n        adsRequest.nonLinearAdSlotWidth = parseInt(computedStyle.width, 10);\n        adsRequest.nonLinearAdSlotHeight = parseInt(computedStyle.height, 10);\n        this.ima.adsLoader.requestAds(adsRequest);\n    }\n    onAdsManagerLoaded(evt) {\n        this.show();\n        this.ima.adsManager = evt.getAdsManager(this.target);\n        this.processAdsManager(this.ima.adsManager);\n    }\n    // @ts-ignore\n    processAdsManager(adsManager) {\n        const w = this.API.videogularElement.offsetWidth;\n        const h = this.API.videogularElement.offsetHeight;\n        // Attach the pause/resume events.\n        this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED, this.onContentPauseRequested.bind(this), false);\n        this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED, this.onContentResumeRequested.bind(this), false);\n        this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED, this.onSkippableStateChanged.bind(this), false);\n        this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, this.onAllAdsComplete.bind(this), false);\n        this.ima.adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE, this.onAdComplete.bind(this), false);\n        this.ima.adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this.onAdError.bind(this), false);\n        this.ima.adsManager.init(w, h, google.ima.ViewMode.NORMAL);\n        this.ima.adsManager.start();\n    }\n    onSkippableStateChanged() {\n        const isSkippable = this.ima.adsManager.getAdSkippableState();\n        if (isSkippable) {\n            this.skipButton.style.display = 'block';\n        }\n        else {\n            this.skipButton.style.display = 'none';\n        }\n    }\n    onClickSkip() {\n        this.ima.adsManager.skip();\n        this.onSkipAd.emit(true);\n    }\n    onContentPauseRequested() {\n        this.show();\n        this.API.pause();\n        this.onAdStop.emit(true);\n    }\n    onContentResumeRequested() {\n        this.API.play();\n        this.onAdStart.emit(true);\n        this.hide();\n    }\n    // @ts-ignore\n    onAdError(evt) {\n        if (this.ima.adsManager) {\n            this.ima.adsManager.destroy();\n        }\n        this.hide();\n        this.API.play();\n        this.onAdStop.emit(true);\n    }\n    onAllAdsComplete() {\n        this.hide();\n        // The last ad was a post-roll\n        if (this.ima.adsManager.getCuePoints().join().indexOf('-1') >= 0) {\n            this.API.pause(); // it was stop() in Videogular v1\n            this.onAdStop.emit(true);\n        }\n    }\n    onAdComplete() {\n        // TODO: Update view with current ad count\n        this.ima.currentAd++;\n        this.onAdStop.emit(true);\n    }\n    show() {\n        window.dispatchEvent(new CustomEvent(VgEvents.VG_START_ADS));\n        this.displayState = 'block';\n    }\n    hide() {\n        window.dispatchEvent(new CustomEvent(VgEvents.VG_END_ADS));\n        this.displayState = 'none';\n    }\n    onContentEnded() {\n        this.ima.adsLoader.contentComplete();\n        this.onAdStop.emit(true);\n    }\n    onChangeFullscreen(fsState) {\n        if (!this.fsAPI.nativeFullscreen) {\n            this.isFullscreen = fsState;\n        }\n    }\n    onMissingGoogleImaLoader() {\n        this.hide();\n        this.API.play();\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgImaAds.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgImaAds, deps: [{ token: i0.ElementRef }, { token: VgAPI }, { token: VgFullscreenAPI }], target: i0.ɵɵFactoryTarget.Component });\nVgImaAds.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgImaAds, selector: \"vg-ima-ads\", inputs: { vgFor: \"vgFor\", vgNetwork: \"vgNetwork\", vgUnitPath: \"vgUnitPath\", vgCompanion: \"vgCompanion\", vgCompanionSize: \"vgCompanionSize\", vgAdTagUrl: \"vgAdTagUrl\", vgSkipButton: \"vgSkipButton\" }, outputs: { onAdStart: \"onAdStart\", onAdStop: \"onAdStop\", onSkipAd: \"onSkipAd\" }, host: { properties: { \"style.display\": \"this.displayState\" } }, ngImport: i0, template: `<div class=\"vg-ima-ads\"></div>`, isInline: true, styles: [\"vg-ima-ads{position:absolute;width:100%;height:100%;z-index:300}vg-ima-ads .vg-ima-ads{position:absolute;width:100%;height:100%;pointer-events:none}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgImaAds, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-ima-ads',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `<div class=\"vg-ima-ads\"></div>`,\n                    styles: [`\n        vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            z-index: 300;\n        }\n        vg-ima-ads .vg-ima-ads {\n            position: absolute;\n            width: 100%;\n            height: 100%;\n            pointer-events: none;\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }, { type: VgFullscreenAPI }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], vgNetwork: [{\n                type: Input\n            }], vgUnitPath: [{\n                type: Input\n            }], vgCompanion: [{\n                type: Input\n            }], vgCompanionSize: [{\n                type: Input\n            }], vgAdTagUrl: [{\n                type: Input\n            }], vgSkipButton: [{\n                type: Input\n            }], onAdStart: [{\n                type: Output\n            }], onAdStop: [{\n                type: Output\n            }], onSkipAd: [{\n                type: Output\n            }], displayState: [{\n                type: HostBinding,\n                args: ['style.display']\n            }] } });\nclass Ima {\n    constructor(imaAdsElement) {\n        this.adDisplayContainer = new google.ima.AdDisplayContainer(imaAdsElement);\n        this.adsLoader = new google.ima.AdsLoader(this.adDisplayContainer);\n        this.adsManager = null;\n        this.adsLoaded = false;\n        this.currentAd = 0;\n    }\n}\n\n// tslint:disable:component-class-suffix\nclass VgOverlayPlay {\n    constructor(ref, API, fsAPI, controlsHidden) {\n        this.API = API;\n        this.fsAPI = fsAPI;\n        this.controlsHidden = controlsHidden;\n        this.isNativeFullscreen = false;\n        this.areControlsHidden = false;\n        this.subscriptions = [];\n        this.isBuffering = false;\n        this.elem = ref.nativeElement;\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.target = this.API.getMediaById(this.vgFor);\n        this.subscriptions.push(this.fsAPI.onChangeFullscreen.subscribe(this.onChangeFullscreen.bind(this)));\n        this.subscriptions.push(this.controlsHidden.isHidden.subscribe(this.onHideControls.bind(this)));\n        this.subscriptions.push(this.target.subscriptions.bufferDetected.subscribe(isBuffering => this.onUpdateBuffer(isBuffering)));\n    }\n    onUpdateBuffer(isBuffering) {\n        this.isBuffering = isBuffering;\n    }\n    onChangeFullscreen(fsState) {\n        if (this.fsAPI.nativeFullscreen) {\n            this.isNativeFullscreen = fsState;\n        }\n    }\n    onHideControls(hidden) {\n        this.areControlsHidden = hidden;\n    }\n    onClick() {\n        const state = this.getState();\n        switch (state) {\n            case VgStates.VG_PLAYING:\n                this.target.pause();\n                break;\n            case VgStates.VG_PAUSED:\n            case VgStates.VG_ENDED:\n                this.target.play();\n                break;\n        }\n    }\n    getState() {\n        let state = VgStates.VG_PAUSED;\n        if (this.target) {\n            if (this.target.state instanceof Array) {\n                for (let i = 0, l = this.target.state.length; i < l; i++) {\n                    if (this.target.state[i] === VgStates.VG_PLAYING) {\n                        state = VgStates.VG_PLAYING;\n                        break;\n                    }\n                }\n            }\n            else {\n                state = this.target.state;\n            }\n        }\n        return state;\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n    }\n}\nVgOverlayPlay.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgOverlayPlay, deps: [{ token: i0.ElementRef }, { token: VgAPI }, { token: VgFullscreenAPI }, { token: VgControlsHidden }], target: i0.ɵɵFactoryTarget.Component });\nVgOverlayPlay.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgOverlayPlay, selector: \"vg-overlay-play\", inputs: { vgFor: \"vgFor\" }, host: { listeners: { \"click\": \"onClick()\" }, properties: { \"class.is-buffering\": \"this.isBuffering\" } }, ngImport: i0, template: `<div class=\"vg-overlay-play\"\n                    [class.native-fullscreen]=\"isNativeFullscreen\"\n                    [class.controls-hidden]=\"areControlsHidden\">\n                   <div class=\"overlay-play-container\"\n                        [class.vg-icon-play_arrow]=\"getState() !== 'playing'\">\n                   </div>\n               </div>`, isInline: true, styles: [\"vg-overlay-play{z-index:200}vg-overlay-play.is-buffering{display:none}vg-overlay-play .vg-overlay-play{transition:all .5s;cursor:pointer;position:absolute;display:block;color:#fff;width:100%;height:100%;font-size:80px;filter:alpha(opacity=60);opacity:.6}vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden{cursor:none}vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow{pointer-events:none;width:100%;height:100%;position:absolute;display:flex;align-items:center;justify-content:center;font-size:80px}vg-overlay-play .vg-overlay-play:hover{filter:alpha(opacity=100);opacity:1}vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before{transform:scale(1.2)}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgOverlayPlay, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'vg-overlay-play',\n                    encapsulation: ViewEncapsulation.None,\n                    template: `<div class=\"vg-overlay-play\"\n                    [class.native-fullscreen]=\"isNativeFullscreen\"\n                    [class.controls-hidden]=\"areControlsHidden\">\n                   <div class=\"overlay-play-container\"\n                        [class.vg-icon-play_arrow]=\"getState() !== 'playing'\">\n                   </div>\n               </div>`,\n                    styles: [`\n        vg-overlay-play {\n            z-index: 200;\n        }\n        vg-overlay-play.is-buffering {\n            display: none;\n        }\n        vg-overlay-play .vg-overlay-play {\n            transition: all 0.5s;\n            cursor: pointer;\n            position: absolute;\n            display: block;\n            color: white;\n            width: 100%;\n            height: 100%;\n            font-size: 80px;\n            filter: alpha(opacity=60);\n            opacity: 0.6;\n        }\n        vg-overlay-play .vg-overlay-play.native-fullscreen.controls-hidden {\n            cursor: none;\n        }\n        vg-overlay-play .vg-overlay-play .overlay-play-container.vg-icon-play_arrow {\n            pointer-events: none;\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            font-size: 80px;\n        }\n        vg-overlay-play .vg-overlay-play:hover {\n            filter: alpha(opacity=100);\n            opacity: 1;\n        }\n        vg-overlay-play .vg-overlay-play:hover .overlay-play-container.vg-icon-play_arrow:before {\n            transform: scale(1.2);\n        }\n    `]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }, { type: VgFullscreenAPI }, { type: VgControlsHidden }]; }, propDecorators: { vgFor: [{\n                type: Input\n            }], isBuffering: [{\n                type: HostBinding,\n                args: ['class.is-buffering']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n\nclass VgCoreModule {\n}\nVgCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVgCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgCoreModule, declarations: [VgMedia, VgCuePoints, VgPlayer], exports: [VgMedia, VgCuePoints, VgPlayer] });\nVgCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgCoreModule, providers: [VgAPI, VgFullscreenAPI, VgUtils, VgControlsHidden, VgStates, VgEvents] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [VgMedia, VgCuePoints, VgPlayer],\n                    exports: [VgMedia, VgCuePoints, VgPlayer],\n                    providers: [VgAPI, VgFullscreenAPI, VgUtils, VgControlsHidden, VgStates, VgEvents]\n                }]\n        }] });\n\nclass VgImaAdsModule {\n}\nVgImaAdsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgImaAdsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVgImaAdsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgImaAdsModule, declarations: [VgImaAds], imports: [CommonModule], exports: [VgImaAds] });\nVgImaAdsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgImaAdsModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgImaAdsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        VgImaAds\n                    ],\n                    exports: [\n                        VgImaAds\n                    ]\n                }]\n        }] });\n\nclass VgOverlayPlayModule {\n}\nVgOverlayPlayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgOverlayPlayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVgOverlayPlayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgOverlayPlayModule, declarations: [VgOverlayPlay], imports: [CommonModule], exports: [VgOverlayPlay] });\nVgOverlayPlayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgOverlayPlayModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgOverlayPlayModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        VgOverlayPlay\n                    ],\n                    exports: [\n                        VgOverlayPlay\n                    ]\n                }]\n        }] });\n\n// tslint:disable:directive-class-suffix\n// tslint:disable:no-output-on-prefix\n// tslint:disable:no-string-literal\nclass VgDASH {\n    constructor(ref, API) {\n        this.ref = ref;\n        this.API = API;\n        this.onGetBitrates = new EventEmitter();\n        this.subscriptions = [];\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n        this.target = this.API.getMediaById(this.vgFor);\n        this.createPlayer();\n    }\n    ngOnChanges(changes) {\n        if (changes['vgDash'] && changes['vgDash'].currentValue) {\n            this.createPlayer();\n        }\n        else {\n            this.destroyPlayer();\n        }\n    }\n    createPlayer() {\n        if (this.dash) {\n            this.destroyPlayer();\n        }\n        // It's a DASH source\n        if (this.vgDash && ((this.vgDash.indexOf('.mpd') > -1) ||\n            (this.vgDash.indexOf('mpd-time-csf') > -1))) {\n            let drmOptions;\n            if (this.vgDRMLicenseServer) {\n                drmOptions = this.vgDRMLicenseServer;\n                if (this.vgDRMToken) {\n                    for (const drmServer in drmOptions) {\n                        if (drmServer.hasOwnProperty(drmServer)) {\n                            drmOptions[drmServer].httpRequestHeaders = { Authorization: this.vgDRMToken };\n                        }\n                    }\n                }\n            }\n            this.dash = dashjs.MediaPlayer().create();\n            this.dash.getDebug().setLogToBrowserConsole(false);\n            this.dash.initialize(this.ref.nativeElement);\n            this.dash.setAutoPlay(false);\n            this.dash.on(dashjs.MediaPlayer.events.STREAM_INITIALIZED, () => {\n                const audioList = this.dash.getBitrateInfoListFor('audio');\n                const videoList = this.dash.getBitrateInfoListFor('video');\n                if (audioList.length > 1) {\n                    audioList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n                    audioList.unshift({\n                        qualityIndex: 0,\n                        width: 0,\n                        height: 0,\n                        bitrate: 0,\n                        mediaType: 'video',\n                        label: 'AUTO'\n                    });\n                    this.onGetBitrates.emit(audioList);\n                }\n                if (videoList.length > 1) {\n                    videoList.forEach(item => item.qualityIndex = ++item.qualityIndex);\n                    videoList.unshift({\n                        qualityIndex: 0,\n                        width: 0,\n                        height: 0,\n                        bitrate: 0,\n                        mediaType: 'video',\n                        label: 'AUTO'\n                    });\n                    this.onGetBitrates.emit(videoList);\n                }\n            });\n            if (drmOptions) {\n                this.dash.setProtectionData(drmOptions);\n            }\n            this.dash.attachSource(this.vgDash);\n        }\n        else {\n            if (this.target) {\n                this.target.pause();\n                this.target.seekTime(0);\n                this.ref.nativeElement.src = this.vgDash;\n            }\n        }\n    }\n    setBitrate(bitrate) {\n        if (this.dash) {\n            if (bitrate.qualityIndex > 0) {\n                if (this.dash.getAutoSwitchQualityFor(bitrate.mediaType)) {\n                    this.dash.setAutoSwitchQualityFor(bitrate.mediaType, false);\n                }\n                const nextIndex = bitrate.qualityIndex - 1;\n                this.dash.setQualityFor(bitrate.mediaType, nextIndex);\n            }\n            else {\n                this.dash.setAutoSwitchQualityFor(bitrate.mediaType, true);\n            }\n        }\n    }\n    destroyPlayer() {\n        if (this.dash) {\n            this.dash.reset();\n            this.dash = null;\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.destroyPlayer();\n    }\n}\nVgDASH.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgDASH, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Directive });\nVgDASH.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgDASH, selector: \"[vgDash]\", inputs: { vgDash: \"vgDash\", vgDRMToken: \"vgDRMToken\", vgDRMLicenseServer: \"vgDRMLicenseServer\" }, outputs: { onGetBitrates: \"onGetBitrates\" }, exportAs: [\"vgDash\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgDASH, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgDash]',\n                    exportAs: 'vgDash'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgDash: [{\n                type: Input\n            }], vgDRMToken: [{\n                type: Input\n            }], vgDRMLicenseServer: [{\n                type: Input\n            }], onGetBitrates: [{\n                type: Output\n            }] } });\n\n// tslint:disable:no-string-literal\n// tslint:disable:directive-class-suffix\n// tslint:disable:no-output-on-prefix\nclass VgHLS {\n    constructor(ref, API) {\n        this.ref = ref;\n        this.API = API;\n        this.vgHlsHeaders = {};\n        this.onGetBitrates = new EventEmitter();\n        this.subscriptions = [];\n    }\n    ngOnInit() {\n        if (this.API.isPlayerReady) {\n            this.onPlayerReady();\n        }\n        else {\n            this.subscriptions.push(this.API.playerReadyEvent.subscribe(() => this.onPlayerReady()));\n        }\n    }\n    onPlayerReady() {\n        this.crossorigin = this.ref.nativeElement.getAttribute('crossorigin');\n        this.preload = this.ref.nativeElement.getAttribute('preload') !== 'none';\n        this.vgFor = this.ref.nativeElement.getAttribute('vgFor');\n        if (this.vgFor) {\n            this.target = this.API.getMediaById(this.vgFor);\n        }\n        else {\n            this.target = this.API.getDefaultMedia();\n        }\n        this.config = {\n            autoStartLoad: this.preload\n        };\n        // @ts-ignore\n        this.config.xhrSetup = (xhr, url) => {\n            // Send cookies\n            if (this.crossorigin === 'use-credentials') {\n                xhr.withCredentials = true;\n            }\n            for (const key of Object.keys(this.vgHlsHeaders)) {\n                xhr.setRequestHeader(key, this.vgHlsHeaders[key]);\n            }\n        };\n        this.createPlayer();\n        if (!this.preload) {\n            this.subscriptions.push(this.API.subscriptions.play.subscribe(() => {\n                if (this.hls) {\n                    this.hls.startLoad(0);\n                }\n            }));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['vgHls'] && changes['vgHls'].currentValue) {\n            this.createPlayer();\n        }\n        else if (changes['vgHlsHeaders'] && changes['vgHlsHeaders'].currentValue) {\n            // Do nothing. We don't want to create a or destroy a player if the headers change.\n        }\n        else {\n            this.destroyPlayer();\n        }\n    }\n    createPlayer() {\n        if (this.hls) {\n            this.destroyPlayer();\n        }\n        // It's a HLS source\n        if (this.vgHls && this.vgHls.indexOf('m3u8') > -1 && Hls.isSupported() && this.API.isPlayerReady) {\n            const video = this.ref.nativeElement;\n            this.hls = new Hls(this.config);\n            // @ts-ignore\n            this.hls.on(Hls.Events.MANIFEST_PARSED, (event, data) => {\n                const videoList = [];\n                videoList.push({\n                    qualityIndex: 0,\n                    width: 0,\n                    height: 0,\n                    bitrate: 0,\n                    mediaType: 'video',\n                    label: 'AUTO'\n                });\n                data.levels.forEach((item, index) => {\n                    videoList.push({\n                        qualityIndex: ++index,\n                        width: item.width,\n                        height: item.height,\n                        bitrate: item.bitrate,\n                        mediaType: 'video',\n                        label: item.name\n                    });\n                });\n                this.onGetBitrates.emit(videoList);\n            });\n            // @ts-ignore\n            this.hls.on(Hls.Events.LEVEL_LOADED, (event, data) => {\n                this.target.isLive = data.details.live;\n            });\n            this.hls.loadSource(this.vgHls);\n            this.hls.attachMedia(video);\n        }\n        else {\n            if (this.target && !!this.target.pause) {\n                this.target.pause();\n                this.target.seekTime(0);\n                this.ref.nativeElement.src = this.vgHls;\n            }\n        }\n    }\n    setBitrate(bitrate) {\n        if (this.hls) {\n            this.hls.nextLevel = bitrate.qualityIndex - 1;\n        }\n    }\n    destroyPlayer() {\n        if (this.hls) {\n            this.hls.destroy();\n            this.hls = null;\n        }\n    }\n    ngOnDestroy() {\n        this.subscriptions.forEach(s => s.unsubscribe());\n        this.destroyPlayer();\n        delete this.hls;\n    }\n}\nVgHLS.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgHLS, deps: [{ token: i0.ElementRef }, { token: VgAPI }], target: i0.ɵɵFactoryTarget.Directive });\nVgHLS.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.2\", type: VgHLS, selector: \"[vgHls]\", inputs: { vgHls: \"vgHls\", vgHlsHeaders: \"vgHlsHeaders\" }, outputs: { onGetBitrates: \"onGetBitrates\" }, exportAs: [\"vgHls\"], usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgHLS, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[vgHls]',\n                    exportAs: 'vgHls'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: VgAPI }]; }, propDecorators: { vgHls: [{\n                type: Input\n            }], vgHlsHeaders: [{\n                type: Input\n            }], onGetBitrates: [{\n                type: Output\n            }] } });\n\nclass VgStreamingModule {\n}\nVgStreamingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgStreamingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nVgStreamingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgStreamingModule, declarations: [VgDASH, VgHLS], imports: [CommonModule], exports: [VgDASH, VgHLS] });\nVgStreamingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgStreamingModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.2\", ngImport: i0, type: VgStreamingModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        VgDASH, VgHLS\n                    ],\n                    exports: [\n                        VgDASH, VgHLS\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-videogular\n */\n// Required for Ivy Build of Library\n// export * from './lib/buffering/vg-buffering';\n// export * from './lib/controls/vg-controls';\n// export * from './lib/controls/vg-fullscreen/vg-fullscreen';\n// export * from './lib/controls/vg-mute/vg-mute';\n// export * from './lib/controls/vg-play-pause/vg-play-pause';\n// export * from './lib/controls/vg-playback-button/vg-playback-button';\n// export * from './lib/controls/vg-volume/vg-volume';\n// export * from './lib/controls/vg-quality-selector/vg-quality-selector';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar-buffering-time/vg-scrub-bar-buffering-time';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar-cue-points/vg-scrub-bar-cue-points';\n// export * from './lib/controls/vg-scrub-bar/vg-scrub-bar-current-time/vg-scrub-bar-current-time';\n// export * from './lib/controls/vg-time-display/vg-time-display';\n// export * from './lib/controls/vg-track-selector/vg-track-selector';\n// export * from './lib/core/vg-player/vg-player';\n// export * from './lib/core/vg-media/vg-media';\n// export * from './lib/core/vg-cue-points/vg-cue-points';\n// export * from './lib/ima-ads/vg-ima-ads';\n// export * from './lib/overlay-play/vg-overlay-play';\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ima, VgAPI, VgBuffering, VgBufferingModule, VgControls, VgControlsHidden, VgControlsModule, VgCoreModule, VgCuePoints, VgDASH, VgEvents, VgFullscreen, VgFullscreenAPI, VgHLS, VgImaAds, VgImaAdsModule, VgMedia, VgMediaElement, VgMute, VgOverlayPlay, VgOverlayPlayModule, VgPlayPause, VgPlaybackButton, VgPlayer, VgQualitySelector, VgScrubBar, VgScrubBarBufferingTime, VgScrubBarCuePoints, VgScrubBarCurrentTime, VgStates, VgStreamingModule, VgTimeDisplay, VgTrackSelector, VgUtcPipe, VgUtils, VgVolume };\n"]},"metadata":{},"sourceType":"module"}